[16/12/2015 - 10:19:41] (10.0.2.2|)  => hello
[16/12/2015 - 10:19:41] (10.0.2.2|)  => 
[16/12/2015 - 10:19:42] (10.0.2.2|)  => hello
[16/12/2015 - 10:20:2] (10.0.2.2|)  => timeout
[16/12/2015 - 10:20:2] (10.0.2.2|)  => hello
[16/12/2015 - 10:20:22] (10.0.2.2|)  => timeout
[16/12/2015 - 10:20:22] (10.0.2.2|)  => hello
[16/12/2015 - 10:20:42] (10.0.2.2|)  => timeout
[16/12/2015 - 10:20:42] (10.0.2.2|)  => hello
[16/12/2015 - 10:21:2] (10.0.2.2|)  => timeout
[16/12/2015 - 10:21:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:21:57] (10.0.2.2|)  => 
[16/12/2015 - 10:21:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:21:57] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:21:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:21:57] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:21:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:22:8] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:22:8] (10.0.2.2|)  => hello
[16/12/2015 - 10:22:8] (10.0.2.2|)  => cpm/public/vendor/reveal.js-3.2.0/index.html
[16/12/2015 - 10:22:8] (10.0.2.2|)  => hello
[16/12/2015 - 10:22:8] (10.0.2.2|)  => 
[16/12/2015 - 10:25:48] (10.0.2.2|)  => hello
[16/12/2015 - 10:25:48] (10.0.2.2|)  => 651bf344-a639-427a-8a6d-2a79bc2d067d
[16/12/2015 - 10:25:48] (10.0.2.2|)  => hello
[16/12/2015 - 10:25:49] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:25:48.804","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"ruid":"651bf344-a639-427a-8a6d-2a79bc2d067d","parentProcess":"None","env":"","processport":"50357","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"62089","completeddate":"","status":"Running"}
[16/12/2015 - 10:25:51] (10.0.2.2|)  => hello
[16/12/2015 - 10:25:51] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:25:48.804","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"ruid":"651bf344-a639-427a-8a6d-2a79bc2d067d","parentProcess":"None","env":"","processport":"50357","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"62089","completeddate":"","status":"Running"}
[16/12/2015 - 10:26:7] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:7] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:25:48.804","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"ruid":"651bf344-a639-427a-8a6d-2a79bc2d067d","parentProcess":"None","env":"","processport":"50357","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"62089","completeddate":"","status":"Running"}
[16/12/2015 - 10:26:26] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:26] (10.0.2.2|)  => 501e7b76-5e8b-4973-924a-77ac3134a566
[16/12/2015 - 10:26:26] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:26] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:26:26.320","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"}},"ruid":"501e7b76-5e8b-4973-924a-77ac3134a566","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-parser"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566/"},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-parser"}},"processport":"16157","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"34655","completeddate":"","status":"Running"}
[16/12/2015 - 10:26:32] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:32] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:26:26.320","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"}},"ruid":"501e7b76-5e8b-4973-924a-77ac3134a566","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-parser"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566/"},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-parser"}},"processport":"16157","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"34655","completeddate":"","status":"Running"}
[16/12/2015 - 10:26:39] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:39] (10.0.2.2|)  => Error :mapping values are not allowed here
 in 'string', line 1, column 196:
     ... sm.txt Parsing [sent. 1 len. 42]: Humanism is a philosophical an ... 
                                         ^

[16/12/2015 - 10:26:41] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:41] (10.0.2.2|)  => Error :mapping values are not allowed here
 in 'string', line 1, column 196:
     ... sm.txt Parsing [sent. 1 len. 42]: Humanism is a philosophical an ... 
                                         ^

[16/12/2015 - 10:26:48] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:48] (10.0.2.2|)  => 
[16/12/2015 - 10:26:48] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:48] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:26:48] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:59] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:26:59] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:59] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:26:59] (10.0.2.2|)  => hello
[16/12/2015 - 10:26:59] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566

[16/12/2015 - 10:27:2] (10.0.2.2|)  => hello
[16/12/2015 - 10:27:2] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:25:48.804","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"ruid":"651bf344-a639-427a-8a6d-2a79bc2d067d","parentProcess":"None","env":"","processport":"50357","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"62089","completeddate":"","status":"Running"}
[16/12/2015 - 10:27:3] (10.0.2.2|)  => hello
[16/12/2015 - 10:27:3] (10.0.2.2|)  => Error :mapping values are not allowed here
 in 'string', line 1, column 196:
     ... sm.txt Parsing [sent. 1 len. 42]: Humanism is a philosophical an ... 
                                         ^

[16/12/2015 - 10:27:18] (10.0.2.2|)  => hello
[16/12/2015 - 10:27:18] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d

[16/12/2015 - 10:27:24] (10.0.2.2|)  => hello
[16/12/2015 - 10:27:24] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:25:48.804","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"ruid":"651bf344-a639-427a-8a6d-2a79bc2d067d","parentProcess":"None","env":"","processport":"50357","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"62089","completeddate":"","status":"Running"}
[16/12/2015 - 10:29:44] (10.0.2.2|)  => hello
[16/12/2015 - 10:29:44] (10.0.2.2|)  => Error :mapping values are not allowed here
 in 'string', line 1, column 196:
     ... sm.txt Parsing [sent. 1 len. 42]: Humanism is a philosophical an ... 
                                         ^

[16/12/2015 - 10:31:18] (10.0.2.2|)  => hello
[16/12/2015 - 10:31:18] (10.0.2.2|)  => Error :mapping values are not allowed here
 in 'string', line 1, column 1124:
     ... en. 3] -LSB- 2 -RSB- Parsed file: /vagrant/data/corpus//testcorp ... 
                                         ^

[16/12/2015 - 10:31:23] (10.0.2.2|)  => hello
[16/12/2015 - 10:31:23] (10.0.2.2|)  => Error :mapping values are not allowed here
 in 'string', line 1, column 1124:
     ... en. 3] -LSB- 2 -RSB- Parsed file: /vagrant/data/corpus//testcorp ... 
                                         ^

[16/12/2015 - 10:32:12] (10.0.2.2|)  => hello
[16/12/2015 - 10:32:12] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:26:26.320","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"},"OUT":{"type":"FILE","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566//humanism.xml"}},"ruid":"501e7b76-5e8b-4973-924a-77ac3134a566","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":""},"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-parser"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_CMD.STDERR":{"type":"VAL","value":"Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...  done [1.7 sec]. Parsing file /vagrant/data/corpus//testcorpus/humanism.txt Parsing [sent. 1 len. 42] Humanism is a philosophical and ethical stance that emphasizes the value and agency of human beings , individually and collectively , and generally prefers critical thinking and evidence -LRB- rationalism , empiricism -RRB- over established doctrine or faith -LRB- fideism -RRB- . Parsing [sent. 2 len. 21] The meaning of the term humanism has fluctuated , according to the successive intellectual movements which have identified with it . Parsing [sent. 3 len. 22] -LSB- 1 -RSB- Generally , however , humanism refers to a perspective that affirms some notion of human freedom and progress . Parsing [sent. 4 len. 44] In modern times , humanist movements are typically aligned with secularism , and today `` Humanism '' typically refers to a non-theistic life stance centred on human agency , and looking to science instead of religious dogma in order to understand the world . Parsing [sent. 5 len. 3] -LSB- 2 -RSB- Parsed file /vagrant/data/corpus//testcorpus/humanism.txt [5 sentences]. Parsed 132 words in 5 sentences (28.90 wds/sec; 1.09 sents/sec)."},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566/"},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-parser"}},"processport":"9309","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-parser","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 10:32:36] (10.0.2.2|)  => hello
[16/12/2015 - 10:32:36] (10.0.2.2|)  => d0ffe9a4-1476-499b-9e54-e3dccbf2cad4
[16/12/2015 - 10:32:36] (10.0.2.2|)  => hello
[16/12/2015 - 10:32:36] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:32:36.458","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"ruid":"d0ffe9a4-1476-499b-9e54-e3dccbf2cad4","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4/"},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//origtweets_light"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"37044","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"39823","completeddate":"","status":"Running"}
[16/12/2015 - 10:32:55] (10.0.2.2|)  => hello
[16/12/2015 - 10:32:55] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:32:36.458","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"ruid":"d0ffe9a4-1476-499b-9e54-e3dccbf2cad4","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4/"},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//origtweets_light"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"37044","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"39823","completeddate":"","status":"Running"}
[16/12/2015 - 10:33:10] (10.0.2.2|)  => hello
[16/12/2015 - 10:33:10] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:32:36.458","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"ruid":"d0ffe9a4-1476-499b-9e54-e3dccbf2cad4","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4/"},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//origtweets_light"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"37044","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"39823","completeddate":"","status":"Running"}
[16/12/2015 - 10:33:12] (10.0.2.2|)  => hello
[16/12/2015 - 10:33:12] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:32:36.458","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"ruid":"d0ffe9a4-1476-499b-9e54-e3dccbf2cad4","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4/"},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//origtweets_light"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"37044","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"39823","completeddate":"","status":"Running"}
[16/12/2015 - 10:33:13] (10.0.2.2|)  => hello
[16/12/2015 - 10:33:13] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:32:36.458","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"ruid":"d0ffe9a4-1476-499b-9e54-e3dccbf2cad4","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4/"},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//origtweets_light"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"37044","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"39823","completeddate":"","status":"Running"}
[16/12/2015 - 10:33:22] (10.0.2.2|)  => hello
[16/12/2015 - 10:33:22] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:32:36.458","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"},"VOID":{"type":"FILE*","value":["Error reading val value (should be a string)","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/stanford-parser/489056320092643328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/stanford-parser/489738611739619328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/stanford-parser/489706911927779328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/stanford-parser/489377154770403328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/stanford-parser/489316372002787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/stanford-parser/488778133295075328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/stanford-parser/488984223458787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/stanford-parser/489447870429667328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/stanford-parser/489869581918691328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/stanford-parser/488963679669731328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/stanford-parser/489335673758179328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/stanford-parser/489101415894499328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/stanford-parser/487838782453219328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/stanford-parser/489416444191715328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/stanford-parser/490051479555043328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/stanford-parser/489681750281699328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/stanford-parser/489363645026275328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/stanford-parser/490012805358051328.xml"]}},"ruid":"d0ffe9a4-1476-499b-9e54-e3dccbf2cad4","parentProcess":"None","env":{"_MAP.stanford-parser.OUT":{"type":"FILE*","value":["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/stanford-parser/489056320092643328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/stanford-parser/489738611739619328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/stanford-parser/489706911927779328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/stanford-parser/489377154770403328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/stanford-parser/489316372002787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/stanford-parser/488778133295075328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/stanford-parser/488984223458787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/stanford-parser/489447870429667328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/stanford-parser/489869581918691328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/stanford-parser/488963679669731328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/stanford-parser/489335673758179328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/stanford-parser/489101415894499328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/stanford-parser/487838782453219328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/stanford-parser/489416444191715328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/stanford-parser/490051479555043328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/stanford-parser/489681750281699328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/stanford-parser/489363645026275328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/stanford-parser/490012805358051328.xml"]},"_CMD#merge.STDOUT":{"type":"VAL","value":""},"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_MAP.foo.OUT":{"type":"FILE**","value":[["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/foo/foo3"]]},"_MAP._CMD#test.STDERR":{"type":"VAL*","value":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4/"},"_CMD#merge.STDERR":{"type":"VAL","value":""},"_MAP._CMD#test.STDOUT":{"type":"VAL*","value":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//origtweets_light"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"9668","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"pipeline-test","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 10:33:47] (10.0.2.2|)  => hello
[16/12/2015 - 10:33:47] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:33:47] (10.0.2.2|)  => hello
[16/12/2015 - 10:33:47] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:35:3] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:3] (10.0.2.2|)  => 
[16/12/2015 - 10:35:3] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:3] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:35:3] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:3] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:35:4] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:4] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:35:4] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:4] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:35:4] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:14] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:35:14] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:14] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:35:59] (10.0.2.2|)  => hello
[16/12/2015 - 10:35:59] (10.0.2.2|)  => 
[16/12/2015 - 10:36:0] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:0] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:36:0] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:0] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:36:0] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:0] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:36:0] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:0] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:36:0] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:9] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:36:9] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:9] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:36:21] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:21] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:32:36.458","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light"},"VOID":{"type":"FILE*","value":["Error reading val value (should be a string)","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/stanford-parser/489056320092643328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/stanford-parser/489738611739619328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/stanford-parser/489706911927779328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/stanford-parser/489377154770403328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/stanford-parser/489316372002787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/stanford-parser/488778133295075328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/stanford-parser/488984223458787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/stanford-parser/489447870429667328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/stanford-parser/489869581918691328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/stanford-parser/488963679669731328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/stanford-parser/489335673758179328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/stanford-parser/489101415894499328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/stanford-parser/487838782453219328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/stanford-parser/489416444191715328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/stanford-parser/490051479555043328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/stanford-parser/489681750281699328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/stanford-parser/489363645026275328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/stanford-parser/490012805358051328.xml"]}},"ruid":"d0ffe9a4-1476-499b-9e54-e3dccbf2cad4","parentProcess":"None","env":{"_MAP.stanford-parser.OUT":{"type":"FILE*","value":["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/stanford-parser/489056320092643328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/stanford-parser/489738611739619328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/stanford-parser/489706911927779328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/stanford-parser/489377154770403328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/stanford-parser/489316372002787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/stanford-parser/488778133295075328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/stanford-parser/488984223458787328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/stanford-parser/489447870429667328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/stanford-parser/489869581918691328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/stanford-parser/488963679669731328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/stanford-parser/489335673758179328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/stanford-parser/489101415894499328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/stanford-parser/487838782453219328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/stanford-parser/489416444191715328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/stanford-parser/490051479555043328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/stanford-parser/489681750281699328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/stanford-parser/489363645026275328.xml","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/stanford-parser/490012805358051328.xml"]},"_CMD#merge.STDOUT":{"type":"VAL","value":""},"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_MAP.foo.OUT":{"type":"FILE**","value":[["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.11/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.3/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.6/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.2/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.0/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.10/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.12/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.8/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.9/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.14/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.17/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.1/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.16/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.5/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.15/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.7/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.4/foo/foo3"],["/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/foo/foo1","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/foo/foo2","/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4//_MAP/_MAP.13/foo/foo3"]]},"_MAP._CMD#test.STDERR":{"type":"VAL*","value":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-d0ffe9a4-1476-499b-9e54-e3dccbf2cad4/"},"_CMD#merge.STDERR":{"type":"VAL","value":""},"_MAP._CMD#test.STDOUT":{"type":"VAL*","value":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//origtweets_light"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"48676","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"pipeline-test","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 10:36:23] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:23] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:25:48.804","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meanging_of_life.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-651bf344-a639-427a-8a6d-2a79bc2d067d"}},"ruid":"651bf344-a639-427a-8a6d-2a79bc2d067d","parentProcess":"None","env":"","processport":"50357","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"62089","completeddate":"","status":"Running"}
[16/12/2015 - 10:36:25] (10.0.2.2|)  => hello
[16/12/2015 - 10:36:25] (10.0.2.2|)  => {"creationdate":"2015-12-16T10:26:26.320","def":"/vagrant/modules/examples/modules/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566"},"OUT":{"type":"FILE","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566//humanism.xml"}},"ruid":"501e7b76-5e8b-4973-924a-77ac3134a566","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":""},"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-parser"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/parsing"},"_CMD.STDERR":{"type":"VAL","value":"Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...  done [1.7 sec]. Parsing file /vagrant/data/corpus//testcorpus/humanism.txt Parsing [sent. 1 len. 42] Humanism is a philosophical and ethical stance that emphasizes the value and agency of human beings , individually and collectively , and generally prefers critical thinking and evidence -LRB- rationalism , empiricism -RRB- over established doctrine or faith -LRB- fideism -RRB- . Parsing [sent. 2 len. 21] The meaning of the term humanism has fluctuated , according to the successive intellectual movements which have identified with it . Parsing [sent. 3 len. 22] -LSB- 1 -RSB- Generally , however , humanism refers to a perspective that affirms some notion of human freedom and progress . Parsing [sent. 4 len. 44] In modern times , humanist movements are typically aligned with secularism , and today `` Humanism '' typically refers to a non-theistic life stance centred on human agency , and looking to science instead of religious dogma in order to understand the world . Parsing [sent. 5 len. 3] -LSB- 2 -RSB- Parsed file /vagrant/data/corpus//testcorpus/humanism.txt [5 sentences]. Parsed 132 words in 5 sentences (28.90 wds/sec; 1.09 sents/sec)."},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-501e7b76-5e8b-4973-924a-77ac3134a566/"},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-parser"}},"processport":"3113","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-parser","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 10:41:20] (10.0.2.2|)  => hello
[16/12/2015 - 10:41:20] (10.0.2.2|)  => 
[16/12/2015 - 10:41:20] (10.0.2.2|)  => hello
[16/12/2015 - 10:41:20] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:41:20] (10.0.2.2|)  => hello
[16/12/2015 - 10:41:20] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:41:20] (10.0.2.2|)  => hello
[16/12/2015 - 10:41:20] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:41:20] (10.0.2.2|)  => hello
[16/12/2015 - 10:41:20] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:41:20] (10.0.2.2|)  => hello
[16/12/2015 - 10:41:20] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:41:20] (10.0.2.2|)  => hello
[16/12/2015 - 10:41:30] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:42:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:42:56] (10.0.2.2|)  => 
[16/12/2015 - 10:42:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:42:56] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:42:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:42:56] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:42:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:42:56] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:42:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:42:56] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:42:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:7] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:43:7] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:7] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:43:23] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:23] (10.0.2.2|)  => 
[16/12/2015 - 10:43:24] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:24] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:43:24] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:24] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:43:24] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:24] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:43:24] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:24] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:43:24] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:31] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:43:31] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:31] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:43:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:56] (10.0.2.2|)  => 
[16/12/2015 - 10:43:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:57] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:43:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:57] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:43:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:57] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:43:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:43:57] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:43:57] (10.0.2.2|)  => hello
[16/12/2015 - 10:44:7] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:44:7] (10.0.2.2|)  => hello
[16/12/2015 - 10:44:7] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:46:6] (10.0.2.2|)  => hello
[16/12/2015 - 10:46:6] (10.0.2.2|)  => 
[16/12/2015 - 10:46:6] (10.0.2.2|)  => hello
[16/12/2015 - 10:46:6] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:46:6] (10.0.2.2|)  => hello
[16/12/2015 - 10:46:6] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:46:7] (10.0.2.2|)  => hello
[16/12/2015 - 10:46:7] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:46:7] (10.0.2.2|)  => hello
[16/12/2015 - 10:46:7] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:46:7] (10.0.2.2|)  => hello
[16/12/2015 - 10:46:16] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:46:16] (10.0.2.2|)  => hello
[16/12/2015 - 10:46:16] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:47:43] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:43] (10.0.2.2|)  => 
[16/12/2015 - 10:47:44] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:44] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:47:44] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:44] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:47:44] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:44] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:47:44] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:54] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 10:47:54] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:54] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:47:54] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:54] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:47:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:56] (10.0.2.2|)  => 
[16/12/2015 - 10:47:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:56] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 10:47:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:56] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 10:47:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:56] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 10:47:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:56] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 10:47:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:47:56] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 10:47:56] (10.0.2.2|)  => hello
[16/12/2015 - 10:48:4] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 11:53:7] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:7] (10.0.2.2|)  => 
[16/12/2015 - 11:53:7] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:7] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 11:53:7] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:7] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 11:53:7] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:7] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 11:53:7] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:8] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 11:53:8] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:17] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 11:53:17] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:17] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 11:53:51] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:51] (10.0.2.2|)  => 
[16/12/2015 - 11:53:51] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:51] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 11:53:51] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:51] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 11:53:52] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:52] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 11:53:52] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:59] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 11:53:59] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:59] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4

[16/12/2015 - 11:53:59] (10.0.2.2|)  => hello
[16/12/2015 - 11:53:59] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 11:55:0] (10.0.2.2|)  => hello
[16/12/2015 - 11:55:0] (10.0.2.2|)  => f7e2655c-1f32-46dd-a412-fba73691494e
[16/12/2015 - 11:55:0] (10.0.2.2|)  => hello
[16/12/2015 - 11:55:0] (10.0.2.2|)  => {"creationdate":"2015-12-16T11:55:00.710","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"ruid":"f7e2655c-1f32-46dd-a412-fba73691494e","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e/"},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//testcorpus"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"20730","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"29051","completeddate":"","status":"Running"}
[16/12/2015 - 11:55:37] (10.0.2.2|)  => hello
[16/12/2015 - 11:55:37] (10.0.2.2|)  => {"creationdate":"2015-12-16T11:55:00.710","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"},"VOID":{"type":"FILE*","value":["Error reading val value (should be a string)","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.1/stanford-parser/humanism.xml","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.2/stanford-parser/meaning_of_life_full.xml","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.0/stanford-parser/meaning_of_life.xml"]}},"ruid":"f7e2655c-1f32-46dd-a412-fba73691494e","parentProcess":"None","env":{"_MAP.stanford-parser.OUT":{"type":"FILE*","value":["/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.1/stanford-parser/humanism.xml","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.2/stanford-parser/meaning_of_life_full.xml","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.0/stanford-parser/meaning_of_life.xml"]},"_CMD#merge.STDOUT":{"type":"VAL","value":""},"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_MAP.foo.OUT":{"type":"FILE**","value":[["/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.2/foo/foo1","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.2/foo/foo2","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.2/foo/foo3"],["/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.0/foo/foo1","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.0/foo/foo2","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.0/foo/foo3"],["/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.1/foo/foo1","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.1/foo/foo2","/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e//_MAP/_MAP.1/foo/foo3"]]},"_MAP._CMD#test.STDERR":{"type":"VAL*","value":[null,null,null]},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-f7e2655c-1f32-46dd-a412-fba73691494e/"},"_CMD#merge.STDERR":{"type":"VAL","value":""},"_MAP._CMD#test.STDOUT":{"type":"VAL*","value":[null,null,null]},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//testcorpus"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"25794","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"pipeline-test","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 11:55:43] (10.0.2.2|)  => hello
[16/12/2015 - 11:55:53] (10.0.2.2|)  => ok
[16/12/2015 - 11:55:53] (10.0.2.2|)  => hello
[16/12/2015 - 11:55:53] (10.0.2.2|)  => Name : pipeline-test
Desc : test de pipeline
Last Modified : 12/10/15 4:35 PM
Inputs : 
	CORPUS: DIR( format : none ; schema : none)
Outputs : 
	VOID: FILE*( format : none ; schema : none)


Name : corenlp-server
Desc : stanford core nlp server mode test
Last Modified : 11/27/15 1:01 PM
Inputs : 
	IN: FILE( format : none ; schema : none)
Outputs : 
	OUT: FILE( format : none ; schema : none)


Name : pipeline-test2
Desc : test de pipeline
Last Modified : 11/27/15 2:42 PM
Inputs : 
	CORPUS: DIR( format : none ; schema : none)
Outputs : 
	VOID: VAL( format : none ; schema : none)


Name : brat_propagate
Desc : 
Last Modified : 11/3/15 10:47 AM
Inputs : 
	SEED: FILE( format : none ; schema : brat_annotation)
	CORPUS: DIR( format : none ; schema : text)
Outputs : 
	CORPUS_MODIFIED: DIR( format : none ; schema : text)


Name : bonsai-parser@munshi
Desc : bonsai parse of xml files into passage format made by Munshi Asadullah
Last Modified : 12/11/15 3:03 PM
Inputs : 
	IN_DIR: DIR( format : xml ; schema : html)// directory containing html files to be parsed
Outputs : 
	OUT_DIR: DIR( format : xml ; schema : passage)// directory containing the output of the parsed file files keep the same name as the original file



Name : stanford-parser
Desc : The stanford parser
Last Modified : 12/10/15 10:54 AM
Inputs : 
	IN: FILE( format : none ; schema : none)// File to be annotated
Outputs : 
	OUT: FILE( format : unknown ; schema : none)


Name : pipeline-test0
Desc : test de pipeline
Last Modified : 11/27/15 2:41 PM
Inputs : 
	IN: FILE( format : none ; schema : none)
Outputs : 
	VOID: VAL( format : none ; schema : none)


Name : tweetparse@jose
Desc : crawl some tweets
Last Modified : 10/22/15 2:53 PM
Inputs : 
	IN: FILE( format : none ; schema : none)
Outputs : 
	OUT: FILE( format : none ; schema : none)


Name : foo
Desc : foo module for testing purposes
Last Modified : 10/29/15 4:22 PM
Inputs : 
	IN: FILE( format : none ; schema : none)
Outputs : 
	OUT: FILE*( format : none ; schema : none)



[16/12/2015 - 11:55:57] (10.0.2.2|)  => hello
[16/12/2015 - 11:56:13] (10.0.2.2|)  => ok
[16/12/2015 - 11:58:27] (10.0.2.2|)  => hello
[16/12/2015 - 11:58:27] (10.0.2.2|)  => 10664724-eda3-4626-a9eb-b3ce56dcfb76
[16/12/2015 - 11:58:27] (10.0.2.2|)  => hello
[16/12/2015 - 11:58:27] (10.0.2.2|)  => {"creationdate":"2015-12-16T11:58:27.472","def":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76"}},"ruid":"10664724-eda3-4626-a9eb-b3ce56dcfb76","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"bonsai-parser@munshi"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"DIR","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76/"},"_MOD_CONTEXT":{"type":"VAL","value":"bonsai-parser@munshi"}},"processport":"9841","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"bonsai-parser@munshi","parentport":"31081","completeddate":"","status":"Running"}
[16/12/2015 - 12:4:28] (10.0.2.2|)  => hello
[16/12/2015 - 12:4:28] (10.0.2.2|)  => {"creationdate":"2015-12-16T11:58:27.472","def":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76"}},"ruid":"10664724-eda3-4626-a9eb-b3ce56dcfb76","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"bonsai-parser@munshi"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"DIR","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76/"},"_MOD_CONTEXT":{"type":"VAL","value":"bonsai-parser@munshi"}},"processport":"9841","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"bonsai-parser@munshi","parentport":"31081","completeddate":"","status":"Running"}
[16/12/2015 - 12:23:49] (10.0.2.2|)  => hello
[16/12/2015 - 12:23:49] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 1, column 1:
    >>> Processing cinq_semaines_en_ ... 
    ^
expected chomping or indentation indicators, but found >
 in 'string', line 1, column 2:
    >>> Processing cinq_semaines_en_b ... 
     ^

[16/12/2015 - 12:24:45] (10.0.2.2|)  => hello
[16/12/2015 - 12:24:45] (10.0.2.2|)  => 71208b25-ee55-41dc-bf1b-41001901ebeb
[16/12/2015 - 12:24:45] (10.0.2.2|)  => hello
[16/12/2015 - 12:24:45] (10.0.2.2|)  => {"creationdate":"2015-12-16T12:24:45.087","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"ruid":"71208b25-ee55-41dc-bf1b-41001901ebeb","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb/"},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//testcorpus"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"33295","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"14485","completeddate":"","status":"Running"}
[16/12/2015 - 12:27:8] (10.0.2.2|)  => hello
[16/12/2015 - 12:27:8] (10.0.2.2|)  => {"creationdate":"2015-12-16T12:24:45.087","def":"/vagrant/modules/examples/modules/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"},"VOID":{"type":"FILE*","value":["Error reading val value (should be a string)","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.1/stanford-parser/humanism.xml","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.2/stanford-parser/meaning_of_life_full.xml","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.0/stanford-parser/meaning_of_life.xml"]}},"ruid":"71208b25-ee55-41dc-bf1b-41001901ebeb","parentProcess":"None","env":{"_MAP.stanford-parser.OUT":{"type":"FILE*","value":["/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.1/stanford-parser/humanism.xml","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.2/stanford-parser/meaning_of_life_full.xml","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.0/stanford-parser/meaning_of_life.xml"]},"_CMD#merge.STDOUT":{"type":"VAL","value":""},"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules"},"_MAP.foo.OUT":{"type":"FILE**","value":[["/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.2/foo/foo1","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.2/foo/foo2","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.2/foo/foo3"],["/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.0/foo/foo1","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.0/foo/foo2","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.0/foo/foo3"],["/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.1/foo/foo1","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.1/foo/foo2","/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb//_MAP/_MAP.1/foo/foo3"]]},"_MAP._CMD#test.STDERR":{"type":"VAL*","value":[null,null,null]},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-71208b25-ee55-41dc-bf1b-41001901ebeb/"},"_CMD#merge.STDERR":{"type":"VAL","value":""},"_MAP._CMD#test.STDOUT":{"type":"VAL*","value":[null,null,null]},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//testcorpus"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"2720","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"pipeline-test","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 13:10:11] (10.0.2.2|)  => hello
[16/12/2015 - 13:10:11] (10.0.2.2|)  => d2325883-7eea-4365-a606-208f2932b844
[16/12/2015 - 13:10:12] (10.0.2.2|)  => hello
[16/12/2015 - 13:10:12] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:10:11.981","def":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844"}},"ruid":"d2325883-7eea-4365-a606-208f2932b844","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"corenlp-server"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844/"},"_MOD_CONTEXT":{"type":"VAL","value":"corenlp-server"}},"processport":"49616","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"corenlp-server","parentport":"6230","completeddate":"","status":"Running"}
[16/12/2015 - 13:10:14] (10.0.2.2|)  => hello
[16/12/2015 - 13:10:14] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:10:11.981","def":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844"}},"ruid":"d2325883-7eea-4365-a606-208f2932b844","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"corenlp-server"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844/"},"_MOD_CONTEXT":{"type":"VAL","value":"corenlp-server"}},"processport":"49616","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"corenlp-server","parentport":"6230","completeddate":"","status":"Running"}
[16/12/2015 - 13:10:22] (10.0.2.2|)  => hello
[16/12/2015 - 13:10:22] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:10:11.981","def":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844"}},"ruid":"d2325883-7eea-4365-a606-208f2932b844","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"corenlp-server"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-d2325883-7eea-4365-a606-208f2932b844/"},"_MOD_CONTEXT":{"type":"VAL","value":"corenlp-server"}},"processport":"49616","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"corenlp-server","parentport":"6230","completeddate":"","status":"Running"}
[16/12/2015 - 13:11:30] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:45] (10.0.2.2|)  => ok
[16/12/2015 - 13:11:45] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:45] (10.0.2.2|)  => 
[16/12/2015 - 13:11:45] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:45] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 13:11:46] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:46] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 13:11:46] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:46] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 13:11:46] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:46] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
corenlp-server : d2325883-7eea-4365-a606-208f2932b844
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4
pipeline-test : f7e2655c-1f32-46dd-a412-fba73691494e
bonsai-parser@munshi : 10664724-eda3-4626-a9eb-b3ce56dcfb76
pipeline-test : 71208b25-ee55-41dc-bf1b-41001901ebeb

[16/12/2015 - 13:11:46] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:56] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 13:11:56] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:56] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 13:11:57] (10.0.2.2|)  => hello
[16/12/2015 - 13:11:57] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 1, column 1:
    >>> Processing cinq_semaines_en_ ... 
    ^
expected chomping or indentation indicators, but found >
 in 'string', line 1, column 2:
    >>> Processing cinq_semaines_en_b ... 
     ^

[16/12/2015 - 13:12:30] (10.0.2.2|)  => hello
[16/12/2015 - 13:12:30] (10.0.2.2|)  => f9b895ca-e56b-4675-85c3-6019b3db4aec
[16/12/2015 - 13:12:30] (10.0.2.2|)  => hello
[16/12/2015 - 13:12:30] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:12:30.343","def":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec"}},"ruid":"f9b895ca-e56b-4675-85c3-6019b3db4aec","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"corenlp-server"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec/"},"_MOD_CONTEXT":{"type":"VAL","value":"corenlp-server"}},"processport":"34990","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"corenlp-server","parentport":"53839","completeddate":"","status":"Running"}
[16/12/2015 - 13:12:56] (10.0.2.2|)  => hello
[16/12/2015 - 13:12:56] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 1, column 1:
    >>> Processing cinq_semaines_en_ ... 
    ^
expected chomping or indentation indicators, but found >
 in 'string', line 1, column 2:
    >>> Processing cinq_semaines_en_b ... 
     ^

[16/12/2015 - 13:14:7] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:7] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 1, column 1:
    >>> Processing cinq_semaines_en_ ... 
    ^
expected chomping or indentation indicators, but found >
 in 'string', line 1, column 2:
    >>> Processing cinq_semaines_en_b ... 
     ^

[16/12/2015 - 13:14:38] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:38] (10.0.2.2|)  => 
[16/12/2015 - 13:14:39] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:39] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 13:14:39] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:39] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 13:14:39] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:39] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 13:14:39] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:39] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 13:14:39] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:49] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 13:14:49] (10.0.2.2|)  => hello
[16/12/2015 - 13:14:49] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
corenlp-server : d2325883-7eea-4365-a606-208f2932b844
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4
pipeline-test : f7e2655c-1f32-46dd-a412-fba73691494e
bonsai-parser@munshi : 10664724-eda3-4626-a9eb-b3ce56dcfb76
pipeline-test : 71208b25-ee55-41dc-bf1b-41001901ebeb
corenlp-server : f9b895ca-e56b-4675-85c3-6019b3db4aec

[16/12/2015 - 13:15:57] (10.0.2.2|)  => hello
[16/12/2015 - 13:15:57] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:12:30.343","def":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec"},"OUT":{"type":"FILE","value":"/vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec//meaning_of_life_full.xml"}},"ruid":"f9b895ca-e56b-4675-85c3-6019b3db4aec","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":""},"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"corenlp-server"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/modules/corenlp-server"},"_CMD.STDERR":{"type":"VAL","value":""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec/"},"_MOD_CONTEXT":{"type":"VAL","value":"corenlp-server"}},"processport":"48567","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"corenlp-server","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 13:16:6] (10.0.2.2|)  => hello
[16/12/2015 - 13:16:6] (10.0.2.2|)  => /vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec//meaning_of_life_full.xml
[16/12/2015 - 13:16:6] (10.0.2.2|)  => Connecting to server...
Received reply [ <?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>The</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>3</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>meaning</word>
            <lemma>meaning</lemma>
            <CharacterOffsetBegin>4</CharacterOffsetBegin>
            <CharacterOffsetEnd>11</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>12</CharacterOffsetBegin>
            <CharacterOffsetEnd>14</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>life</word>
            <lemma>life</lemma>
            <CharacterOffsetBegin>15</CharacterOffsetBegin>
            <CharacterOffsetEnd>19</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>as</word>
            <lemma>as</lemma>
            <CharacterOffsetBegin>20</CharacterOffsetBegin>
            <CharacterOffsetEnd>22</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>we</word>
            <lemma>we</lemma>
            <CharacterOffsetBegin>23</CharacterOffsetBegin>
            <CharacterOffsetEnd>25</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>perceive</word>
            <lemma>perceive</lemma>
            <CharacterOffsetBegin>26</CharacterOffsetBegin>
            <CharacterOffsetEnd>34</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>it</word>
            <lemma>it</lemma>
            <CharacterOffsetBegin>35</CharacterOffsetBegin>
            <CharacterOffsetEnd>37</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>is</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>38</CharacterOffsetBegin>
            <CharacterOffsetEnd>40</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>derived</word>
            <lemma>derive</lemma>
            <CharacterOffsetBegin>41</CharacterOffsetBegin>
            <CharacterOffsetEnd>48</CharacterOffsetEnd>
            <POS>VBN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>from</word>
            <lemma>from</lemma>
            <CharacterOffsetBegin>49</CharacterOffsetBegin>
            <CharacterOffsetEnd>53</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>our</word>
            <lemma>we</lemma>
            <CharacterOffsetBegin>54</CharacterOffsetBegin>
            <CharacterOffsetEnd>57</CharacterOffsetEnd>
            <POS>PRP$</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>philosophical</word>
            <lemma>philosophical</lemma>
            <CharacterOffsetBegin>58</CharacterOffsetBegin>
            <CharacterOffsetEnd>71</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>72</CharacterOffsetBegin>
            <CharacterOffsetEnd>75</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>religious</word>
            <lemma>religious</lemma>
            <CharacterOffsetBegin>76</CharacterOffsetBegin>
            <CharacterOffsetEnd>85</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>contemplation</word>
            <lemma>contemplation</lemma>
            <CharacterOffsetBegin>86</CharacterOffsetBegin>
            <CharacterOffsetEnd>99</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>100</CharacterOffsetBegin>
            <CharacterOffsetEnd>102</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>102</CharacterOffsetBegin>
            <CharacterOffsetEnd>103</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>104</CharacterOffsetBegin>
            <CharacterOffsetEnd>107</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="20">
            <word>scientific</word>
            <lemma>scientific</lemma>
            <CharacterOffsetBegin>108</CharacterOffsetBegin>
            <CharacterOffsetEnd>118</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="21">
            <word>inquiries</word>
            <lemma>inquiry</lemma>
            <CharacterOffsetBegin>119</CharacterOffsetBegin>
            <CharacterOffsetEnd>128</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="22">
            <word>about</word>
            <lemma>about</lemma>
            <CharacterOffsetBegin>129</CharacterOffsetBegin>
            <CharacterOffsetEnd>134</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="23">
            <word>existence</word>
            <lemma>existence</lemma>
            <CharacterOffsetBegin>135</CharacterOffsetBegin>
            <CharacterOffsetEnd>144</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="24">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>144</CharacterOffsetBegin>
            <CharacterOffsetEnd>145</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="25">
            <word>social</word>
            <lemma>social</lemma>
            <CharacterOffsetBegin>146</CharacterOffsetBegin>
            <CharacterOffsetEnd>152</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="26">
            <word>ties</word>
            <lemma>tie</lemma>
            <CharacterOffsetBegin>153</CharacterOffsetBegin>
            <CharacterOffsetEnd>157</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="27">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>157</CharacterOffsetBegin>
            <CharacterOffsetEnd>158</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="28">
            <word>consciousness</word>
            <lemma>consciousness</lemma>
            <CharacterOffsetBegin>159</CharacterOffsetBegin>
            <CharacterOffsetEnd>172</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="29">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>172</CharacterOffsetBegin>
            <CharacterOffsetEnd>173</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="30">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>174</CharacterOffsetBegin>
            <CharacterOffsetEnd>177</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="31">
            <word>happiness</word>
            <lemma>happiness</lemma>
            <CharacterOffsetBegin>178</CharacterOffsetBegin>
            <CharacterOffsetEnd>187</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="32">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>187</CharacterOffsetBegin>
            <CharacterOffsetEnd>188</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (NP (DT The) (NN meaning)) (PP (IN of) (NP (NP (NN life)) (PP (IN as) (NP (PRP we)))))) (VP (VBP perceive) (SBAR (S (NP (PRP it)) (VP (VBZ is) (VP (VBN derived) (PP (IN from) (NP (NP (NP (PRP$ our) (ADJP (JJ philosophical) (CC and) (JJ religious)) (NN contemplation)) (PP (IN of))) (, ,) (CC and) (NP (NP (JJ scientific) (NNS inquiries)) (PP (IN about) (NP (NP (NN existence)) (, ,) (NP (JJ social) (NNS ties)) (, ,) (NP (NN consciousness)) (, ,) (CC and) (NP (NN happiness)))))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">perceive</dependent>
          </dep>
          <dep type="det">
            <governor idx="2">meaning</governor>
            <dependent idx="1">The</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">perceive</governor>
            <dependent idx="2">meaning</dependent>
          </dep>
          <dep type="prep">
            <governor idx="2">meaning</governor>
            <dependent idx="3">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="3">of</governor>
            <dependent idx="4">life</dependent>
          </dep>
          <dep type="prep">
            <governor idx="4">life</governor>
            <dependent idx="5">as</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="5">as</governor>
            <dependent idx="6">we</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="10">derived</governor>
            <dependent idx="8">it</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">derived</governor>
            <dependent idx="9">is</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="7">perceive</governor>
            <dependent idx="10">derived</dependent>
          </dep>
          <dep type="prep">
            <governor idx="10">derived</governor>
            <dependent idx="11">from</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">contemplation</governor>
            <dependent idx="12">our</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="13">philosophical</dependent>
          </dep>
          <dep type="cc">
            <governor idx="13">philosophical</governor>
            <dependent idx="14">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="13">philosophical</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="11">from</governor>
            <dependent idx="16">contemplation</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">contemplation</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="cc">
            <governor idx="16">contemplation</governor>
            <dependent idx="19">and</dependent>
          </dep>
          <dep type="amod">
            <governor idx="21">inquiries</governor>
            <dependent idx="20">scientific</dependent>
          </dep>
          <dep type="conj">
            <governor idx="16">contemplation</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="prep">
            <governor idx="21">inquiries</governor>
            <dependent idx="22">about</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="22">about</governor>
            <dependent idx="23">existence</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">ties</governor>
            <dependent idx="25">social</dependent>
          </dep>
          <dep type="conj">
            <governor idx="23">existence</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="conj">
            <governor idx="23">existence</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="cc">
            <governor idx="23">existence</governor>
            <dependent idx="30">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="23">existence</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">perceive</dependent>
          </dep>
          <dep type="det">
            <governor idx="2">meaning</governor>
            <dependent idx="1">The</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">perceive</governor>
            <dependent idx="2">meaning</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="2">meaning</governor>
            <dependent idx="4">life</dependent>
          </dep>
          <dep type="prep_as">
            <governor idx="4">life</governor>
            <dependent idx="6">we</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="10">derived</governor>
            <dependent idx="8">it</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">derived</governor>
            <dependent idx="9">is</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="7">perceive</governor>
            <dependent idx="10">derived</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">contemplation</governor>
            <dependent idx="12">our</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="13">philosophical</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="13">philosophical</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="prep_from">
            <governor idx="10">derived</governor>
            <dependent idx="16">contemplation</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">contemplation</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="amod">
            <governor idx="21">inquiries</governor>
            <dependent idx="20">scientific</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">contemplation</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="23">existence</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">ties</governor>
            <dependent idx="25">social</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">perceive</dependent>
          </dep>
          <dep type="det">
            <governor idx="2">meaning</governor>
            <dependent idx="1">The</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">perceive</governor>
            <dependent idx="2">meaning</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="2">meaning</governor>
            <dependent idx="4">life</dependent>
          </dep>
          <dep type="prep_as">
            <governor idx="4">life</governor>
            <dependent idx="6">we</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="10">derived</governor>
            <dependent idx="8">it</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">derived</governor>
            <dependent idx="9">is</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="7">perceive</governor>
            <dependent idx="10">derived</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">contemplation</governor>
            <dependent idx="12">our</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="13">philosophical</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="13">philosophical</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="prep_from">
            <governor idx="10">derived</governor>
            <dependent idx="16">contemplation</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">contemplation</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="amod">
            <governor idx="21">inquiries</governor>
            <dependent idx="20">scientific</dependent>
          </dep>
          <dep type="prep_from">
            <governor idx="10">derived</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">contemplation</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="23">existence</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">ties</governor>
            <dependent idx="25">social</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>Many</word>
            <lemma>many</lemma>
            <CharacterOffsetBegin>189</CharacterOffsetBegin>
            <CharacterOffsetEnd>193</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>other</word>
            <lemma>other</lemma>
            <CharacterOffsetBegin>194</CharacterOffsetBegin>
            <CharacterOffsetEnd>199</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>issues</word>
            <lemma>issue</lemma>
            <CharacterOffsetBegin>200</CharacterOffsetBegin>
            <CharacterOffsetEnd>206</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>are</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>207</CharacterOffsetBegin>
            <CharacterOffsetEnd>210</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>also</word>
            <lemma>also</lemma>
            <CharacterOffsetBegin>211</CharacterOffsetBegin>
            <CharacterOffsetEnd>215</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>involved</word>
            <lemma>involve</lemma>
            <CharacterOffsetBegin>216</CharacterOffsetBegin>
            <CharacterOffsetEnd>224</CharacterOffsetEnd>
            <POS>VBN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>224</CharacterOffsetBegin>
            <CharacterOffsetEnd>225</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>such</word>
            <lemma>such</lemma>
            <CharacterOffsetBegin>226</CharacterOffsetBegin>
            <CharacterOffsetEnd>230</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>as</word>
            <lemma>as</lemma>
            <CharacterOffsetBegin>231</CharacterOffsetBegin>
            <CharacterOffsetEnd>233</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>symbolic</word>
            <lemma>symbolic</lemma>
            <CharacterOffsetBegin>234</CharacterOffsetBegin>
            <CharacterOffsetEnd>242</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>meaning</word>
            <lemma>meaning</lemma>
            <CharacterOffsetBegin>243</CharacterOffsetBegin>
            <CharacterOffsetEnd>250</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>250</CharacterOffsetBegin>
            <CharacterOffsetEnd>251</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>ontology</word>
            <lemma>ontology</lemma>
            <CharacterOffsetBegin>252</CharacterOffsetBegin>
            <CharacterOffsetEnd>260</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>260</CharacterOffsetBegin>
            <CharacterOffsetEnd>261</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>value</word>
            <lemma>value</lemma>
            <CharacterOffsetBegin>262</CharacterOffsetBegin>
            <CharacterOffsetEnd>267</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>267</CharacterOffsetBegin>
            <CharacterOffsetEnd>268</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>purpose</word>
            <lemma>purpose</lemma>
            <CharacterOffsetBegin>269</CharacterOffsetBegin>
            <CharacterOffsetEnd>276</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>276</CharacterOffsetBegin>
            <CharacterOffsetEnd>277</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>ethics</word>
            <lemma>ethic</lemma>
            <CharacterOffsetBegin>278</CharacterOffsetBegin>
            <CharacterOffsetEnd>284</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="20">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>284</CharacterOffsetBegin>
            <CharacterOffsetEnd>285</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="21">
            <word>good</word>
            <lemma>good</lemma>
            <CharacterOffsetBegin>286</CharacterOffsetBegin>
            <CharacterOffsetEnd>290</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="22">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>291</CharacterOffsetBegin>
            <CharacterOffsetEnd>294</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="23">
            <word>evil</word>
            <lemma>evil</lemma>
            <CharacterOffsetBegin>295</CharacterOffsetBegin>
            <CharacterOffsetEnd>299</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="24">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>299</CharacterOffsetBegin>
            <CharacterOffsetEnd>300</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="25">
            <word>free</word>
            <lemma>free</lemma>
            <CharacterOffsetBegin>301</CharacterOffsetBegin>
            <CharacterOffsetEnd>305</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="26">
            <word>will</word>
            <lemma>will</lemma>
            <CharacterOffsetBegin>306</CharacterOffsetBegin>
            <CharacterOffsetEnd>310</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="27">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>310</CharacterOffsetBegin>
            <CharacterOffsetEnd>311</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="28">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>312</CharacterOffsetBegin>
            <CharacterOffsetEnd>315</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="29">
            <word>existence</word>
            <lemma>existence</lemma>
            <CharacterOffsetBegin>316</CharacterOffsetBegin>
            <CharacterOffsetEnd>325</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="30">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>326</CharacterOffsetBegin>
            <CharacterOffsetEnd>328</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="31">
            <word>one</word>
            <lemma>one</lemma>
            <CharacterOffsetBegin>329</CharacterOffsetBegin>
            <CharacterOffsetEnd>332</CharacterOffsetEnd>
            <POS>CD</POS>
            <NER>NUMBER</NER>
            <NormalizedNER>1.0</NormalizedNER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="32">
            <word>or</word>
            <lemma>or</lemma>
            <CharacterOffsetBegin>333</CharacterOffsetBegin>
            <CharacterOffsetEnd>335</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="33">
            <word>multiple</word>
            <lemma>multiple</lemma>
            <CharacterOffsetBegin>336</CharacterOffsetBegin>
            <CharacterOffsetEnd>344</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="34">
            <word>gods</word>
            <lemma>god</lemma>
            <CharacterOffsetBegin>345</CharacterOffsetBegin>
            <CharacterOffsetEnd>349</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="35">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>349</CharacterOffsetBegin>
            <CharacterOffsetEnd>350</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="36">
            <word>conceptions</word>
            <lemma>conception</lemma>
            <CharacterOffsetBegin>351</CharacterOffsetBegin>
            <CharacterOffsetEnd>362</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="37">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>363</CharacterOffsetBegin>
            <CharacterOffsetEnd>365</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="38">
            <word>God</word>
            <lemma>God</lemma>
            <CharacterOffsetBegin>366</CharacterOffsetBegin>
            <CharacterOffsetEnd>369</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="39">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>369</CharacterOffsetBegin>
            <CharacterOffsetEnd>370</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="40">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>371</CharacterOffsetBegin>
            <CharacterOffsetEnd>374</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="41">
            <word>soul</word>
            <lemma>soul</lemma>
            <CharacterOffsetBegin>375</CharacterOffsetBegin>
            <CharacterOffsetEnd>379</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="42">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>379</CharacterOffsetBegin>
            <CharacterOffsetEnd>380</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="43">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>381</CharacterOffsetBegin>
            <CharacterOffsetEnd>384</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="44">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>385</CharacterOffsetBegin>
            <CharacterOffsetEnd>388</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="45">
            <word>afterlife</word>
            <lemma>afterlife</lemma>
            <CharacterOffsetBegin>389</CharacterOffsetBegin>
            <CharacterOffsetEnd>398</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="46">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>398</CharacterOffsetBegin>
            <CharacterOffsetEnd>399</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (JJ Many) (JJ other) (NNS issues)) (VP (VBP are) (ADVP (RB also)) (VP (VBN involved) (, ,) (PP (JJ such) (IN as) (NP (NP (JJ symbolic) (NN meaning)) (, ,) (NP (NN ontology)) (, ,) (NP (NN value)) (, ,) (NP (NN purpose)) (, ,) (NP (NNS ethics)) (, ,) (ADJP (JJ good) (CC and) (JJ evil)) (, ,) (NP (JJ free) (NN will)) (, ,) (NP (NP (DT the) (NN existence)) (PP (IN of) (NP (CD one) (CC or) (JJ multiple) (NNS gods)))) (, ,) (NP (NP (NNS conceptions)) (PP (IN of) (NP (NP (NNP God)) (, ,) (NP (DT the) (NN soul))))) (, ,) (CC and) (NP (DT the) (NN afterlife)))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">involved</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="1">Many</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="2">other</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="6">involved</governor>
            <dependent idx="3">issues</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="6">involved</governor>
            <dependent idx="4">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">involved</governor>
            <dependent idx="5">also</dependent>
          </dep>
          <dep type="mwe">
            <governor idx="9">as</governor>
            <dependent idx="8">such</dependent>
          </dep>
          <dep type="prep">
            <governor idx="6">involved</governor>
            <dependent idx="9">as</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="10">symbolic</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="9">as</governor>
            <dependent idx="11">meaning</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="21">good</dependent>
          </dep>
          <dep type="cc">
            <governor idx="21">good</governor>
            <dependent idx="22">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="21">good</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">will</governor>
            <dependent idx="25">free</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="det">
            <governor idx="29">existence</governor>
            <dependent idx="28">the</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="prep">
            <governor idx="29">existence</governor>
            <dependent idx="30">of</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="31">one</dependent>
          </dep>
          <dep type="cc">
            <governor idx="31">one</governor>
            <dependent idx="32">or</dependent>
          </dep>
          <dep type="conj">
            <governor idx="31">one</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="30">of</governor>
            <dependent idx="34">gods</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="prep">
            <governor idx="36">conceptions</governor>
            <dependent idx="37">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="37">of</governor>
            <dependent idx="38">God</dependent>
          </dep>
          <dep type="det">
            <governor idx="41">soul</governor>
            <dependent idx="40">the</dependent>
          </dep>
          <dep type="appos">
            <governor idx="38">God</governor>
            <dependent idx="41">soul</dependent>
          </dep>
          <dep type="cc">
            <governor idx="11">meaning</governor>
            <dependent idx="43">and</dependent>
          </dep>
          <dep type="det">
            <governor idx="45">afterlife</governor>
            <dependent idx="44">the</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">involved</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="1">Many</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="2">other</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="6">involved</governor>
            <dependent idx="3">issues</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="6">involved</governor>
            <dependent idx="4">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">involved</governor>
            <dependent idx="5">also</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="10">symbolic</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="11">meaning</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="21">good</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="21">good</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">will</governor>
            <dependent idx="25">free</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="det">
            <governor idx="29">existence</governor>
            <dependent idx="28">the</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="31">one</dependent>
          </dep>
          <dep type="conj_or">
            <governor idx="31">one</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="29">existence</governor>
            <dependent idx="34">gods</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="36">conceptions</governor>
            <dependent idx="38">God</dependent>
          </dep>
          <dep type="det">
            <governor idx="41">soul</governor>
            <dependent idx="40">the</dependent>
          </dep>
          <dep type="appos">
            <governor idx="38">God</governor>
            <dependent idx="41">soul</dependent>
          </dep>
          <dep type="det">
            <governor idx="45">afterlife</governor>
            <dependent idx="44">the</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">involved</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="1">Many</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="2">other</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="6">involved</governor>
            <dependent idx="3">issues</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="6">involved</governor>
            <dependent idx="4">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">involved</governor>
            <dependent idx="5">also</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="10">symbolic</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="11">meaning</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="21">good</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="21">good</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">will</governor>
            <dependent idx="25">free</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="det">
            <governor idx="29">existence</governor>
            <dependent idx="28">the</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="31">one</dependent>
          </dep>
          <dep type="conj_or">
            <governor idx="31">one</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="29">existence</governor>
            <dependent idx="34">gods</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="36">conceptions</governor>
            <dependent idx="38">God</dependent>
          </dep>
          <dep type="det">
            <governor idx="41">soul</governor>
            <dependent idx="40">the</dependent>
          </dep>
          <dep type="appos">
            <governor idx="38">God</governor>
            <dependent idx="41">soul</dependent>
          </dep>
          <dep type="det">
            <governor idx="45">afterlife</governor>
            <dependent idx="44">the</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="3">
        <tokens>
          <token id="1">
            <word>Scientific</word>
            <lemma>Scientific</lemma>
            <CharacterOffsetBegin>400</CharacterOffsetBegin>
            <CharacterOffsetEnd>410</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>contributions</word>
            <lemma>contribution</lemma>
            <CharacterOffsetBegin>411</CharacterOffsetBegin>
            <CharacterOffsetEnd>424</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>focus</word>
            <lemma>focus</lemma>
            <CharacterOffsetBegin>425</CharacterOffsetBegin>
            <CharacterOffsetEnd>430</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>primarily</word>
            <lemma>primarily</lemma>
            <CharacterOffsetBegin>431</CharacterOffsetBegin>
            <CharacterOffsetEnd>440</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>on</word>
            <lemma>on</lemma>
            <CharacterOffsetBegin>441</CharacterOffsetBegin>
            <CharacterOffsetEnd>443</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>describing</word>
            <lemma>describe</lemma>
            <CharacterOffsetBegin>444</CharacterOffsetBegin>
            <CharacterOffsetEnd>454</CharacterOffsetEnd>
            <POS>VBG</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>related</word>
            <lemma>related</lemma>
            <CharacterOffsetBegin>455</CharacterOffsetBegin>
            <CharacterOffsetEnd>462</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>empirical</word>
            <lemma>empirical</lemma>
            <CharacterOffsetBegin>463</CharacterOffsetBegin>
            <CharacterOffsetEnd>472</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>facts</word>
            <lemma>fact</lemma>
            <CharacterOffsetBegin>473</CharacterOffsetBegin>
            <CharacterOffsetEnd>478</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>about</word>
            <lemma>about</lemma>
            <CharacterOffsetBegin>479</CharacterOffsetBegin>
            <CharacterOffsetEnd>484</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>485</CharacterOffsetBegin>
            <CharacterOffsetEnd>488</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>universe</word>
            <lemma>universe</lemma>
            <CharacterOffsetBegin>489</CharacterOffsetBegin>
            <CharacterOffsetEnd>497</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>497</CharacterOffsetBegin>
            <CharacterOffsetEnd>498</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>exploring</word>
            <lemma>explore</lemma>
            <CharacterOffsetBegin>499</CharacterOffsetBegin>
            <CharacterOffsetEnd>508</CharacterOffsetEnd>
            <POS>VBG</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>509</CharacterOffsetBegin>
            <CharacterOffsetEnd>512</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>context</word>
            <lemma>context</lemma>
            <CharacterOffsetBegin>513</CharacterOffsetBegin>
            <CharacterOffsetEnd>520</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>521</CharacterOffsetBegin>
            <CharacterOffsetEnd>524</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>parameters</word>
            <lemma>parameter</lemma>
            <CharacterOffsetBegin>525</CharacterOffsetBegin>
            <CharacterOffsetEnd>535</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>concerning</word>
            <lemma>concern</lemma>
            <CharacterOffsetBegin>536</CharacterOffsetBegin>
            <CharacterOffsetEnd>546</CharacterOffsetEnd>
            <POS>VBG</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="20">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>547</CharacterOffsetBegin>
            <CharacterOffsetEnd>550</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="21">
            <word>`</word>
            <lemma>`</lemma>
            <CharacterOffsetBegin>551</CharacterOffsetBegin>
            <CharacterOffsetEnd>552</CharacterOffsetEnd>
            <POS>``</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="22">
            <word>how</word>
            <lemma>how</lemma>
            <CharacterOffsetBegin>552</CharacterOffsetBegin>
            <CharacterOffsetEnd>555</CharacterOffsetEnd>
            <POS>WRB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="23">
            <word>'</word>
            <lemma>'</lemma>
            <CharacterOffsetBegin>555</CharacterOffsetBegin>
            <CharacterOffsetEnd>556</CharacterOffsetEnd>
            <POS>''</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="24">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>557</CharacterOffsetBegin>
            <CharacterOffsetEnd>559</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="25">
            <word>life</word>
            <lemma>life</lemma>
            <CharacterOffsetBegin>560</CharacterOffsetBegin>
            <CharacterOffsetEnd>564</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="26">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>564</CharacterOffsetBegin>
            <CharacterOffsetEnd>565</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (NNP Scientific) (NNS contributions)) (VP (VBP focus) (ADVP (RB primarily)) (PP (IN on) (S (VP (VBG describing) (NP (JJ related) (JJ empirical) (NNS facts)) (PP (IN about) (NP (NP (NP (DT the) (NN universe)) (, ,) (VP (VBG exploring) (NP (DT the) (NN context) (CC and) (NNS parameters)) (S (VP (VBG concerning) (NP (DT the)) (`` `) (NP (WRB how)))))) ('' ') (PP (IN of) (NP (NN life))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">focus</dependent>
          </dep>
          <dep type="nn">
            <governor idx="2">contributions</governor>
            <dependent idx="1">Scientific</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">focus</governor>
            <dependent idx="2">contributions</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">focus</governor>
            <dependent idx="4">primarily</dependent>
          </dep>
          <dep type="prep">
            <governor idx="3">focus</governor>
            <dependent idx="5">on</dependent>
          </dep>
          <dep type="pcomp">
            <governor idx="5">on</governor>
            <dependent idx="6">describing</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="7">related</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="8">empirical</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">describing</governor>
            <dependent idx="9">facts</dependent>
          </dep>
          <dep type="prep">
            <governor idx="6">describing</governor>
            <dependent idx="10">about</dependent>
          </dep>
          <dep type="det">
            <governor idx="12">universe</governor>
            <dependent idx="11">the</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="10">about</governor>
            <dependent idx="12">universe</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="12">universe</governor>
            <dependent idx="14">exploring</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">context</governor>
            <dependent idx="15">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="16">context</dependent>
          </dep>
          <dep type="cc">
            <governor idx="16">context</governor>
            <dependent idx="17">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="16">context</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="14">exploring</governor>
            <dependent idx="19">concerning</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="20">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="22">how</dependent>
          </dep>
          <dep type="prep">
            <governor idx="12">universe</governor>
            <dependent idx="24">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="24">of</governor>
            <dependent idx="25">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">focus</dependent>
          </dep>
          <dep type="nn">
            <governor idx="2">contributions</governor>
            <dependent idx="1">Scientific</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">focus</governor>
            <dependent idx="2">contributions</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">focus</governor>
            <dependent idx="4">primarily</dependent>
          </dep>
          <dep type="prepc_on">
            <governor idx="3">focus</governor>
            <dependent idx="6">describing</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="7">related</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="8">empirical</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">describing</governor>
            <dependent idx="9">facts</dependent>
          </dep>
          <dep type="det">
            <governor idx="12">universe</governor>
            <dependent idx="11">the</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="6">describing</governor>
            <dependent idx="12">universe</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="12">universe</governor>
            <dependent idx="14">exploring</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">context</governor>
            <dependent idx="15">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="16">context</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">context</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="14">exploring</governor>
            <dependent idx="19">concerning</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="20">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="22">how</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="12">universe</governor>
            <dependent idx="25">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">focus</dependent>
          </dep>
          <dep type="nn">
            <governor idx="2">contributions</governor>
            <dependent idx="1">Scientific</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">focus</governor>
            <dependent idx="2">contributions</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">focus</governor>
            <dependent idx="4">primarily</dependent>
          </dep>
          <dep type="prepc_on">
            <governor idx="3">focus</governor>
            <dependent idx="6">describing</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="7">related</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="8">empirical</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">describing</governor>
            <dependent idx="9">facts</dependent>
          </dep>
          <dep type="det">
            <governor idx="12">universe</governor>
            <dependent idx="11">the</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="6">describing</governor>
            <dependent idx="12">universe</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="12">universe</governor>
            <dependent idx="14">exploring</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">context</governor>
            <dependent idx="15">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="16">context</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">context</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="14">exploring</governor>
            <dependent idx="19">concerning</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="20">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="22">how</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="12">universe</governor>
            <dependent idx="25">life</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="4">
        <tokens>
          <token id="1">
            <word>Science</word>
            <lemma>Science</lemma>
            <CharacterOffsetBegin>566</CharacterOffsetBegin>
            <CharacterOffsetEnd>573</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>also</word>
            <lemma>also</lemma>
            <CharacterOffsetBegin>574</CharacterOffsetBegin>
            <CharacterOffsetEnd>578</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>studies</word>
            <lemma>study</lemma>
            <CharacterOffsetBegin>579</CharacterOffsetBegin>
            <CharacterOffsetEnd>586</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>587</CharacterOffsetBegin>
            <CharacterOffsetEnd>590</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>can</word>
            <lemma>can</lemma>
            <CharacterOffsetBegin>591</CharacterOffsetBegin>
            <CharacterOffsetEnd>594</CharacterOffsetEnd>
            <POS>MD</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>provide</word>
            <lemma>provide</lemma>
            <CharacterOffsetBegin>595</CharacterOffsetBegin>
            <CharacterOffsetEnd>602</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>recommendations</word>
            <lemma>recommendation</lemma>
            <CharacterOffsetBegin>603</CharacterOffsetBegin>
            <CharacterOffsetEnd>618</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>for</word>
            <lemma>for</lemma>
            <CharacterOffsetBegin>619</CharacterOffsetBegin>
            <CharacterOffsetEnd>622</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>623</CharacterOffsetBegin>
            <CharacterOffsetEnd>626</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>pursuit</word>
            <lemma>pursuit</lemma>
            <CharacterOffsetBegin>627</CharacterOffsetBegin>
            <CharacterOffsetEnd>634</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>635</CharacterOffsetBegin>
            <CharacterOffsetEnd>637</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>well-being</word>
            <lemma>well-being</lemma>
            <CharacterOffsetBegin>638</CharacterOffsetBegin>
            <CharacterOffsetEnd>648</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>649</CharacterOffsetBegin>
            <CharacterOffsetEnd>652</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>a</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>653</CharacterOffsetBegin>
            <CharacterOffsetEnd>654</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>related</word>
            <lemma>related</lemma>
            <CharacterOffsetBegin>655</CharacterOffsetBegin>
            <CharacterOffsetEnd>662</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>conception</word>
            <lemma>conception</lemma>
            <CharacterOffsetBegin>663</CharacterOffsetBegin>
            <CharacterOffsetEnd>673</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>674</CharacterOffsetBegin>
            <CharacterOffsetEnd>676</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>morality</word>
            <lemma>morality</lemma>
            <CharacterOffsetBegin>677</CharacterOffsetBegin>
            <CharacterOffsetEnd>685</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>685</CharacterOffsetBegin>
            <CharacterOffsetEnd>686</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (NNP Science)) (VP (VP (ADVP (RB also)) (NP (NNS studies))) (CC and) (VP (MD can) (VP (VB provide) (NP (NNS recommendations)) (PP (IN for) (NP (NP (NP (DT the) (NN pursuit)) (PP (IN of) (NP (NN well-being)))) (CC and) (NP (NP (DT a) (JJ related) (NN conception)) (PP (IN of) (NP (NN morality))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">studies</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">studies</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">studies</governor>
            <dependent idx="2">also</dependent>
          </dep>
          <dep type="cc">
            <governor idx="3">studies</governor>
            <dependent idx="4">and</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">provide</governor>
            <dependent idx="5">can</dependent>
          </dep>
          <dep type="conj">
            <governor idx="3">studies</governor>
            <dependent idx="6">provide</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">provide</governor>
            <dependent idx="7">recommendations</dependent>
          </dep>
          <dep type="prep">
            <governor idx="6">provide</governor>
            <dependent idx="8">for</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">pursuit</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="8">for</governor>
            <dependent idx="10">pursuit</dependent>
          </dep>
          <dep type="prep">
            <governor idx="10">pursuit</governor>
            <dependent idx="11">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="11">of</governor>
            <dependent idx="12">well-being</dependent>
          </dep>
          <dep type="cc">
            <governor idx="10">pursuit</governor>
            <dependent idx="13">and</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">conception</governor>
            <dependent idx="14">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">conception</governor>
            <dependent idx="15">related</dependent>
          </dep>
          <dep type="conj">
            <governor idx="10">pursuit</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">conception</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="17">of</governor>
            <dependent idx="18">morality</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">studies</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">studies</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">studies</governor>
            <dependent idx="2">also</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">provide</governor>
            <dependent idx="5">can</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="3">studies</governor>
            <dependent idx="6">provide</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">provide</governor>
            <dependent idx="7">recommendations</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">pursuit</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="prep_for">
            <governor idx="6">provide</governor>
            <dependent idx="10">pursuit</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="10">pursuit</governor>
            <dependent idx="12">well-being</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">conception</governor>
            <dependent idx="14">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">conception</governor>
            <dependent idx="15">related</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="10">pursuit</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="16">conception</governor>
            <dependent idx="18">morality</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">studies</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">studies</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">provide</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">studies</governor>
            <dependent idx="2">also</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">provide</governor>
            <dependent idx="5">can</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="3">studies</governor>
            <dependent idx="6">provide</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">provide</governor>
            <dependent idx="7">recommendations</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">pursuit</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="prep_for">
            <governor idx="6">provide</governor>
            <dependent idx="10">pursuit</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="10">pursuit</governor>
            <dependent idx="12">well-being</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">conception</governor>
            <dependent idx="14">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">conception</governor>
            <dependent idx="15">related</dependent>
          </dep>
          <dep type="prep_for">
            <governor idx="6">provide</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="10">pursuit</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="16">conception</governor>
            <dependent idx="18">morality</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="5">
        <tokens>
          <token id="1">
            <word>An</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>687</CharacterOffsetBegin>
            <CharacterOffsetEnd>689</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>alternative</word>
            <lemma>alternative</lemma>
            <CharacterOffsetBegin>690</CharacterOffsetBegin>
            <CharacterOffsetEnd>701</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>701</CharacterOffsetBegin>
            <CharacterOffsetEnd>702</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>humanistic</word>
            <lemma>humanistic</lemma>
            <CharacterOffsetBegin>703</CharacterOffsetBegin>
            <CharacterOffsetEnd>713</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>approach</word>
            <lemma>approach</lemma>
            <CharacterOffsetBegin>714</CharacterOffsetBegin>
            <CharacterOffsetEnd>722</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>poses</word>
            <lemma>pose</lemma>
            <CharacterOffsetBegin>723</CharacterOffsetBegin>
            <CharacterOffsetEnd>728</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>729</CharacterOffsetBegin>
            <CharacterOffsetEnd>732</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>question</word>
            <lemma>question</lemma>
            <CharacterOffsetBegin>733</CharacterOffsetBegin>
            <CharacterOffsetEnd>741</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>``</word>
            <lemma>``</lemma>
            <CharacterOffsetBegin>742</CharacterOffsetBegin>
            <CharacterOffsetEnd>743</CharacterOffsetEnd>
            <POS>``</POS>
            <NER>O</NER>
          </token>
          <token id="10">
            <word>What</word>
            <lemma>what</lemma>
            <CharacterOffsetBegin>743</CharacterOffsetBegin>
            <CharacterOffsetEnd>747</CharacterOffsetEnd>
            <POS>WP</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="11">
            <word>is</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>748</CharacterOffsetBegin>
            <CharacterOffsetEnd>750</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="12">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>751</CharacterOffsetBegin>
            <CharacterOffsetEnd>754</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="13">
            <word>meaning</word>
            <lemma>meaning</lemma>
            <CharacterOffsetBegin>755</CharacterOffsetBegin>
            <CharacterOffsetEnd>762</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="14">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>763</CharacterOffsetBegin>
            <CharacterOffsetEnd>765</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="15">
            <word>my</word>
            <lemma>my</lemma>
            <CharacterOffsetBegin>766</CharacterOffsetBegin>
            <CharacterOffsetEnd>768</CharacterOffsetEnd>
            <POS>PRP$</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="16">
            <word>life</word>
            <lemma>life</lemma>
            <CharacterOffsetBegin>769</CharacterOffsetBegin>
            <CharacterOffsetEnd>773</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="17">
            <word>?</word>
            <lemma>?</lemma>
            <CharacterOffsetBegin>773</CharacterOffsetBegin>
            <CharacterOffsetEnd>774</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="18">
            <word>''</word>
            <lemma>''</lemma>
            <CharacterOffsetBegin>774</CharacterOffsetBegin>
            <CharacterOffsetEnd>775</CharacterOffsetEnd>
            <POS>''</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (DT An) (NN alternative) (, ,) (JJ humanistic) (NN approach)) (VP (VBZ poses) (NP (NP (DT the) (NN question)) (`` ``) (SBAR (WHNP (WP What)) (S (VP (VBZ is) (NP (NP (DT the) (NN meaning)) (PP (IN of) (NP (PRP$ my) (NN life))))))))) (. ?) ('' ''))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">poses</dependent>
          </dep>
          <dep type="det">
            <governor idx="5">approach</governor>
            <dependent idx="1">An</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">approach</governor>
            <dependent idx="2">alternative</dependent>
          </dep>
          <dep type="amod">
            <governor idx="5">approach</governor>
            <dependent idx="4">humanistic</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">poses</governor>
            <dependent idx="5">approach</dependent>
          </dep>
          <dep type="det">
            <governor idx="8">question</governor>
            <dependent idx="7">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">poses</governor>
            <dependent idx="8">question</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">meaning</governor>
            <dependent idx="10">What</dependent>
          </dep>
          <dep type="cop">
            <governor idx="13">meaning</governor>
            <dependent idx="11">is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">meaning</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="8">question</governor>
            <dependent idx="13">meaning</dependent>
          </dep>
          <dep type="prep">
            <governor idx="13">meaning</governor>
            <dependent idx="14">of</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">life</governor>
            <dependent idx="15">my</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="14">of</governor>
            <dependent idx="16">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">poses</dependent>
          </dep>
          <dep type="det">
            <governor idx="5">approach</governor>
            <dependent idx="1">An</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">approach</governor>
            <dependent idx="2">alternative</dependent>
          </dep>
          <dep type="amod">
            <governor idx="5">approach</governor>
            <dependent idx="4">humanistic</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">poses</governor>
            <dependent idx="5">approach</dependent>
          </dep>
          <dep type="det">
            <governor idx="8">question</governor>
            <dependent idx="7">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">poses</governor>
            <dependent idx="8">question</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">meaning</governor>
            <dependent idx="10">What</dependent>
          </dep>
          <dep type="cop">
            <governor idx="13">meaning</governor>
            <dependent idx="11">is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">meaning</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="8">question</governor>
            <dependent idx="13">meaning</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">life</governor>
            <dependent idx="15">my</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="13">meaning</governor>
            <dependent idx="16">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">poses</dependent>
          </dep>
          <dep type="det">
            <governor idx="5">approach</governor>
            <dependent idx="1">An</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">approach</governor>
            <dependent idx="2">alternative</dependent>
          </dep>
          <dep type="amod">
            <governor idx="5">approach</governor>
            <dependent idx="4">humanistic</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">poses</governor>
            <dependent idx="5">approach</dependent>
          </dep>
          <dep type="det">
            <governor idx="8">question</governor>
            <dependent idx="7">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">poses</governor>
            <dependent idx="8">question</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">meaning</governor>
            <dependent idx="10">What</dependent>
          </dep>
          <dep type="cop">
            <governor idx="13">meaning</governor>
            <dependent idx="11">is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">meaning</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="8">question</governor>
            <dependent idx="13">meaning</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">life</governor>
            <dependent idx="15">my</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="13">meaning</governor>
            <dependent idx="16">life</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
    <coreference>
      <coreference>
        <mention representative="true">
          <sentence>1</sentence>
          <start>1</start>
          <end>7</end>
          <head>2</head>
          <text>The meaning of life as we</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>8</start>
          <end>9</end>
          <head>8</head>
          <text>it</text>
        </mention>
        <mention>
          <sentence>5</sentence>
          <start>12</start>
          <end>17</end>
          <head>13</head>
          <text>the meaning of my life</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>5</sentence>
          <start>15</start>
          <end>17</end>
          <head>16</head>
          <text>my life</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>4</start>
          <end>7</end>
          <head>4</head>
          <text>life as we</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>1</sentence>
          <start>6</start>
          <end>7</end>
          <head>6</head>
          <text>we</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>12</start>
          <end>13</end>
          <head>12</head>
          <text>our</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>1</sentence>
          <start>12</start>
          <end>18</end>
          <head>16</head>
          <text>our philosophical and religious contemplation of</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>20</start>
          <end>32</end>
          <head>21</head>
          <text>scientific inquiries about existence , social ties , consciousness , and happiness</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>2</sentence>
          <start>36</start>
          <end>42</end>
          <head>36</head>
          <text>conceptions of God , the soul</text>
        </mention>
        <mention>
          <sentence>2</sentence>
          <start>19</start>
          <end>20</end>
          <head>19</head>
          <text>ethics</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>2</sentence>
          <start>28</start>
          <end>35</end>
          <head>29</head>
          <text>the existence of one or multiple gods</text>
        </mention>
        <mention>
          <sentence>2</sentence>
          <start>44</start>
          <end>46</end>
          <head>45</head>
          <text>the afterlife</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>3</sentence>
          <start>20</start>
          <end>21</end>
          <head>20</head>
          <text>the</text>
        </mention>
        <mention>
          <sentence>5</sentence>
          <start>15</start>
          <end>16</end>
          <head>15</head>
          <text>my</text>
        </mention>
      </coreference>
    </coreference>
  </document>
</root>
 ]

[16/12/2015 - 13:21:10] (10.0.2.2|)  => hello
[16/12/2015 - 13:21:10] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 1, column 1:
    >>> Processing cinq_semaines_en_ ... 
    ^
expected chomping or indentation indicators, but found >
 in 'string', line 1, column 2:
    >>> Processing cinq_semaines_en_b ... 
     ^

[16/12/2015 - 13:21:17] (10.0.2.2|)  => hello
[16/12/2015 - 13:21:17] (10.0.2.2|)  => /vagrant/data/results/corenlp-server/run-f9b895ca-e56b-4675-85c3-6019b3db4aec//meaning_of_life_full.xml
[16/12/2015 - 13:21:17] (10.0.2.2|)  => Connecting to server...
Received reply [ <?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>The</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>3</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>meaning</word>
            <lemma>meaning</lemma>
            <CharacterOffsetBegin>4</CharacterOffsetBegin>
            <CharacterOffsetEnd>11</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>12</CharacterOffsetBegin>
            <CharacterOffsetEnd>14</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>life</word>
            <lemma>life</lemma>
            <CharacterOffsetBegin>15</CharacterOffsetBegin>
            <CharacterOffsetEnd>19</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>as</word>
            <lemma>as</lemma>
            <CharacterOffsetBegin>20</CharacterOffsetBegin>
            <CharacterOffsetEnd>22</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>we</word>
            <lemma>we</lemma>
            <CharacterOffsetBegin>23</CharacterOffsetBegin>
            <CharacterOffsetEnd>25</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>perceive</word>
            <lemma>perceive</lemma>
            <CharacterOffsetBegin>26</CharacterOffsetBegin>
            <CharacterOffsetEnd>34</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>it</word>
            <lemma>it</lemma>
            <CharacterOffsetBegin>35</CharacterOffsetBegin>
            <CharacterOffsetEnd>37</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>is</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>38</CharacterOffsetBegin>
            <CharacterOffsetEnd>40</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>derived</word>
            <lemma>derive</lemma>
            <CharacterOffsetBegin>41</CharacterOffsetBegin>
            <CharacterOffsetEnd>48</CharacterOffsetEnd>
            <POS>VBN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>from</word>
            <lemma>from</lemma>
            <CharacterOffsetBegin>49</CharacterOffsetBegin>
            <CharacterOffsetEnd>53</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>our</word>
            <lemma>we</lemma>
            <CharacterOffsetBegin>54</CharacterOffsetBegin>
            <CharacterOffsetEnd>57</CharacterOffsetEnd>
            <POS>PRP$</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>philosophical</word>
            <lemma>philosophical</lemma>
            <CharacterOffsetBegin>58</CharacterOffsetBegin>
            <CharacterOffsetEnd>71</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>72</CharacterOffsetBegin>
            <CharacterOffsetEnd>75</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>religious</word>
            <lemma>religious</lemma>
            <CharacterOffsetBegin>76</CharacterOffsetBegin>
            <CharacterOffsetEnd>85</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>contemplation</word>
            <lemma>contemplation</lemma>
            <CharacterOffsetBegin>86</CharacterOffsetBegin>
            <CharacterOffsetEnd>99</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>100</CharacterOffsetBegin>
            <CharacterOffsetEnd>102</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>102</CharacterOffsetBegin>
            <CharacterOffsetEnd>103</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>104</CharacterOffsetBegin>
            <CharacterOffsetEnd>107</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="20">
            <word>scientific</word>
            <lemma>scientific</lemma>
            <CharacterOffsetBegin>108</CharacterOffsetBegin>
            <CharacterOffsetEnd>118</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="21">
            <word>inquiries</word>
            <lemma>inquiry</lemma>
            <CharacterOffsetBegin>119</CharacterOffsetBegin>
            <CharacterOffsetEnd>128</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="22">
            <word>about</word>
            <lemma>about</lemma>
            <CharacterOffsetBegin>129</CharacterOffsetBegin>
            <CharacterOffsetEnd>134</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="23">
            <word>existence</word>
            <lemma>existence</lemma>
            <CharacterOffsetBegin>135</CharacterOffsetBegin>
            <CharacterOffsetEnd>144</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="24">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>144</CharacterOffsetBegin>
            <CharacterOffsetEnd>145</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="25">
            <word>social</word>
            <lemma>social</lemma>
            <CharacterOffsetBegin>146</CharacterOffsetBegin>
            <CharacterOffsetEnd>152</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="26">
            <word>ties</word>
            <lemma>tie</lemma>
            <CharacterOffsetBegin>153</CharacterOffsetBegin>
            <CharacterOffsetEnd>157</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="27">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>157</CharacterOffsetBegin>
            <CharacterOffsetEnd>158</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="28">
            <word>consciousness</word>
            <lemma>consciousness</lemma>
            <CharacterOffsetBegin>159</CharacterOffsetBegin>
            <CharacterOffsetEnd>172</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="29">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>172</CharacterOffsetBegin>
            <CharacterOffsetEnd>173</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="30">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>174</CharacterOffsetBegin>
            <CharacterOffsetEnd>177</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="31">
            <word>happiness</word>
            <lemma>happiness</lemma>
            <CharacterOffsetBegin>178</CharacterOffsetBegin>
            <CharacterOffsetEnd>187</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="32">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>187</CharacterOffsetBegin>
            <CharacterOffsetEnd>188</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (NP (DT The) (NN meaning)) (PP (IN of) (NP (NP (NN life)) (PP (IN as) (NP (PRP we)))))) (VP (VBP perceive) (SBAR (S (NP (PRP it)) (VP (VBZ is) (VP (VBN derived) (PP (IN from) (NP (NP (NP (PRP$ our) (ADJP (JJ philosophical) (CC and) (JJ religious)) (NN contemplation)) (PP (IN of))) (, ,) (CC and) (NP (NP (JJ scientific) (NNS inquiries)) (PP (IN about) (NP (NP (NN existence)) (, ,) (NP (JJ social) (NNS ties)) (, ,) (NP (NN consciousness)) (, ,) (CC and) (NP (NN happiness)))))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">perceive</dependent>
          </dep>
          <dep type="det">
            <governor idx="2">meaning</governor>
            <dependent idx="1">The</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">perceive</governor>
            <dependent idx="2">meaning</dependent>
          </dep>
          <dep type="prep">
            <governor idx="2">meaning</governor>
            <dependent idx="3">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="3">of</governor>
            <dependent idx="4">life</dependent>
          </dep>
          <dep type="prep">
            <governor idx="4">life</governor>
            <dependent idx="5">as</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="5">as</governor>
            <dependent idx="6">we</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="10">derived</governor>
            <dependent idx="8">it</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">derived</governor>
            <dependent idx="9">is</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="7">perceive</governor>
            <dependent idx="10">derived</dependent>
          </dep>
          <dep type="prep">
            <governor idx="10">derived</governor>
            <dependent idx="11">from</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">contemplation</governor>
            <dependent idx="12">our</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="13">philosophical</dependent>
          </dep>
          <dep type="cc">
            <governor idx="13">philosophical</governor>
            <dependent idx="14">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="13">philosophical</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="11">from</governor>
            <dependent idx="16">contemplation</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">contemplation</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="cc">
            <governor idx="16">contemplation</governor>
            <dependent idx="19">and</dependent>
          </dep>
          <dep type="amod">
            <governor idx="21">inquiries</governor>
            <dependent idx="20">scientific</dependent>
          </dep>
          <dep type="conj">
            <governor idx="16">contemplation</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="prep">
            <governor idx="21">inquiries</governor>
            <dependent idx="22">about</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="22">about</governor>
            <dependent idx="23">existence</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">ties</governor>
            <dependent idx="25">social</dependent>
          </dep>
          <dep type="conj">
            <governor idx="23">existence</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="conj">
            <governor idx="23">existence</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="cc">
            <governor idx="23">existence</governor>
            <dependent idx="30">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="23">existence</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">perceive</dependent>
          </dep>
          <dep type="det">
            <governor idx="2">meaning</governor>
            <dependent idx="1">The</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">perceive</governor>
            <dependent idx="2">meaning</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="2">meaning</governor>
            <dependent idx="4">life</dependent>
          </dep>
          <dep type="prep_as">
            <governor idx="4">life</governor>
            <dependent idx="6">we</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="10">derived</governor>
            <dependent idx="8">it</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">derived</governor>
            <dependent idx="9">is</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="7">perceive</governor>
            <dependent idx="10">derived</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">contemplation</governor>
            <dependent idx="12">our</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="13">philosophical</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="13">philosophical</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="prep_from">
            <governor idx="10">derived</governor>
            <dependent idx="16">contemplation</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">contemplation</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="amod">
            <governor idx="21">inquiries</governor>
            <dependent idx="20">scientific</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">contemplation</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="23">existence</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">ties</governor>
            <dependent idx="25">social</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">perceive</dependent>
          </dep>
          <dep type="det">
            <governor idx="2">meaning</governor>
            <dependent idx="1">The</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">perceive</governor>
            <dependent idx="2">meaning</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="2">meaning</governor>
            <dependent idx="4">life</dependent>
          </dep>
          <dep type="prep_as">
            <governor idx="4">life</governor>
            <dependent idx="6">we</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="10">derived</governor>
            <dependent idx="8">it</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">derived</governor>
            <dependent idx="9">is</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="7">perceive</governor>
            <dependent idx="10">derived</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">contemplation</governor>
            <dependent idx="12">our</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="13">philosophical</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="13">philosophical</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">contemplation</governor>
            <dependent idx="15">religious</dependent>
          </dep>
          <dep type="prep_from">
            <governor idx="10">derived</governor>
            <dependent idx="16">contemplation</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">contemplation</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="amod">
            <governor idx="21">inquiries</governor>
            <dependent idx="20">scientific</dependent>
          </dep>
          <dep type="prep_from">
            <governor idx="10">derived</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">contemplation</governor>
            <dependent idx="21">inquiries</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="23">existence</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">ties</governor>
            <dependent idx="25">social</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="26">ties</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="28">consciousness</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="21">inquiries</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="23">existence</governor>
            <dependent idx="31">happiness</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>Many</word>
            <lemma>many</lemma>
            <CharacterOffsetBegin>189</CharacterOffsetBegin>
            <CharacterOffsetEnd>193</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>other</word>
            <lemma>other</lemma>
            <CharacterOffsetBegin>194</CharacterOffsetBegin>
            <CharacterOffsetEnd>199</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>issues</word>
            <lemma>issue</lemma>
            <CharacterOffsetBegin>200</CharacterOffsetBegin>
            <CharacterOffsetEnd>206</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>are</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>207</CharacterOffsetBegin>
            <CharacterOffsetEnd>210</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>also</word>
            <lemma>also</lemma>
            <CharacterOffsetBegin>211</CharacterOffsetBegin>
            <CharacterOffsetEnd>215</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>involved</word>
            <lemma>involve</lemma>
            <CharacterOffsetBegin>216</CharacterOffsetBegin>
            <CharacterOffsetEnd>224</CharacterOffsetEnd>
            <POS>VBN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>224</CharacterOffsetBegin>
            <CharacterOffsetEnd>225</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>such</word>
            <lemma>such</lemma>
            <CharacterOffsetBegin>226</CharacterOffsetBegin>
            <CharacterOffsetEnd>230</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>as</word>
            <lemma>as</lemma>
            <CharacterOffsetBegin>231</CharacterOffsetBegin>
            <CharacterOffsetEnd>233</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>symbolic</word>
            <lemma>symbolic</lemma>
            <CharacterOffsetBegin>234</CharacterOffsetBegin>
            <CharacterOffsetEnd>242</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>meaning</word>
            <lemma>meaning</lemma>
            <CharacterOffsetBegin>243</CharacterOffsetBegin>
            <CharacterOffsetEnd>250</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>250</CharacterOffsetBegin>
            <CharacterOffsetEnd>251</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>ontology</word>
            <lemma>ontology</lemma>
            <CharacterOffsetBegin>252</CharacterOffsetBegin>
            <CharacterOffsetEnd>260</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>260</CharacterOffsetBegin>
            <CharacterOffsetEnd>261</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>value</word>
            <lemma>value</lemma>
            <CharacterOffsetBegin>262</CharacterOffsetBegin>
            <CharacterOffsetEnd>267</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>267</CharacterOffsetBegin>
            <CharacterOffsetEnd>268</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>purpose</word>
            <lemma>purpose</lemma>
            <CharacterOffsetBegin>269</CharacterOffsetBegin>
            <CharacterOffsetEnd>276</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>276</CharacterOffsetBegin>
            <CharacterOffsetEnd>277</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>ethics</word>
            <lemma>ethic</lemma>
            <CharacterOffsetBegin>278</CharacterOffsetBegin>
            <CharacterOffsetEnd>284</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="20">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>284</CharacterOffsetBegin>
            <CharacterOffsetEnd>285</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="21">
            <word>good</word>
            <lemma>good</lemma>
            <CharacterOffsetBegin>286</CharacterOffsetBegin>
            <CharacterOffsetEnd>290</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="22">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>291</CharacterOffsetBegin>
            <CharacterOffsetEnd>294</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="23">
            <word>evil</word>
            <lemma>evil</lemma>
            <CharacterOffsetBegin>295</CharacterOffsetBegin>
            <CharacterOffsetEnd>299</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="24">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>299</CharacterOffsetBegin>
            <CharacterOffsetEnd>300</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="25">
            <word>free</word>
            <lemma>free</lemma>
            <CharacterOffsetBegin>301</CharacterOffsetBegin>
            <CharacterOffsetEnd>305</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="26">
            <word>will</word>
            <lemma>will</lemma>
            <CharacterOffsetBegin>306</CharacterOffsetBegin>
            <CharacterOffsetEnd>310</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="27">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>310</CharacterOffsetBegin>
            <CharacterOffsetEnd>311</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="28">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>312</CharacterOffsetBegin>
            <CharacterOffsetEnd>315</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="29">
            <word>existence</word>
            <lemma>existence</lemma>
            <CharacterOffsetBegin>316</CharacterOffsetBegin>
            <CharacterOffsetEnd>325</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="30">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>326</CharacterOffsetBegin>
            <CharacterOffsetEnd>328</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="31">
            <word>one</word>
            <lemma>one</lemma>
            <CharacterOffsetBegin>329</CharacterOffsetBegin>
            <CharacterOffsetEnd>332</CharacterOffsetEnd>
            <POS>CD</POS>
            <NER>NUMBER</NER>
            <NormalizedNER>1.0</NormalizedNER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="32">
            <word>or</word>
            <lemma>or</lemma>
            <CharacterOffsetBegin>333</CharacterOffsetBegin>
            <CharacterOffsetEnd>335</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="33">
            <word>multiple</word>
            <lemma>multiple</lemma>
            <CharacterOffsetBegin>336</CharacterOffsetBegin>
            <CharacterOffsetEnd>344</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="34">
            <word>gods</word>
            <lemma>god</lemma>
            <CharacterOffsetBegin>345</CharacterOffsetBegin>
            <CharacterOffsetEnd>349</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="35">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>349</CharacterOffsetBegin>
            <CharacterOffsetEnd>350</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="36">
            <word>conceptions</word>
            <lemma>conception</lemma>
            <CharacterOffsetBegin>351</CharacterOffsetBegin>
            <CharacterOffsetEnd>362</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="37">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>363</CharacterOffsetBegin>
            <CharacterOffsetEnd>365</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="38">
            <word>God</word>
            <lemma>God</lemma>
            <CharacterOffsetBegin>366</CharacterOffsetBegin>
            <CharacterOffsetEnd>369</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="39">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>369</CharacterOffsetBegin>
            <CharacterOffsetEnd>370</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="40">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>371</CharacterOffsetBegin>
            <CharacterOffsetEnd>374</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="41">
            <word>soul</word>
            <lemma>soul</lemma>
            <CharacterOffsetBegin>375</CharacterOffsetBegin>
            <CharacterOffsetEnd>379</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="42">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>379</CharacterOffsetBegin>
            <CharacterOffsetEnd>380</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="43">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>381</CharacterOffsetBegin>
            <CharacterOffsetEnd>384</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="44">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>385</CharacterOffsetBegin>
            <CharacterOffsetEnd>388</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="45">
            <word>afterlife</word>
            <lemma>afterlife</lemma>
            <CharacterOffsetBegin>389</CharacterOffsetBegin>
            <CharacterOffsetEnd>398</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="46">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>398</CharacterOffsetBegin>
            <CharacterOffsetEnd>399</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (JJ Many) (JJ other) (NNS issues)) (VP (VBP are) (ADVP (RB also)) (VP (VBN involved) (, ,) (PP (JJ such) (IN as) (NP (NP (JJ symbolic) (NN meaning)) (, ,) (NP (NN ontology)) (, ,) (NP (NN value)) (, ,) (NP (NN purpose)) (, ,) (NP (NNS ethics)) (, ,) (ADJP (JJ good) (CC and) (JJ evil)) (, ,) (NP (JJ free) (NN will)) (, ,) (NP (NP (DT the) (NN existence)) (PP (IN of) (NP (CD one) (CC or) (JJ multiple) (NNS gods)))) (, ,) (NP (NP (NNS conceptions)) (PP (IN of) (NP (NP (NNP God)) (, ,) (NP (DT the) (NN soul))))) (, ,) (CC and) (NP (DT the) (NN afterlife)))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">involved</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="1">Many</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="2">other</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="6">involved</governor>
            <dependent idx="3">issues</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="6">involved</governor>
            <dependent idx="4">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">involved</governor>
            <dependent idx="5">also</dependent>
          </dep>
          <dep type="mwe">
            <governor idx="9">as</governor>
            <dependent idx="8">such</dependent>
          </dep>
          <dep type="prep">
            <governor idx="6">involved</governor>
            <dependent idx="9">as</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="10">symbolic</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="9">as</governor>
            <dependent idx="11">meaning</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="21">good</dependent>
          </dep>
          <dep type="cc">
            <governor idx="21">good</governor>
            <dependent idx="22">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="21">good</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">will</governor>
            <dependent idx="25">free</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="det">
            <governor idx="29">existence</governor>
            <dependent idx="28">the</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="prep">
            <governor idx="29">existence</governor>
            <dependent idx="30">of</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="31">one</dependent>
          </dep>
          <dep type="cc">
            <governor idx="31">one</governor>
            <dependent idx="32">or</dependent>
          </dep>
          <dep type="conj">
            <governor idx="31">one</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="30">of</governor>
            <dependent idx="34">gods</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="prep">
            <governor idx="36">conceptions</governor>
            <dependent idx="37">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="37">of</governor>
            <dependent idx="38">God</dependent>
          </dep>
          <dep type="det">
            <governor idx="41">soul</governor>
            <dependent idx="40">the</dependent>
          </dep>
          <dep type="appos">
            <governor idx="38">God</governor>
            <dependent idx="41">soul</dependent>
          </dep>
          <dep type="cc">
            <governor idx="11">meaning</governor>
            <dependent idx="43">and</dependent>
          </dep>
          <dep type="det">
            <governor idx="45">afterlife</governor>
            <dependent idx="44">the</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">meaning</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">involved</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="1">Many</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="2">other</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="6">involved</governor>
            <dependent idx="3">issues</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="6">involved</governor>
            <dependent idx="4">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">involved</governor>
            <dependent idx="5">also</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="10">symbolic</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="11">meaning</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="21">good</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="21">good</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">will</governor>
            <dependent idx="25">free</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="det">
            <governor idx="29">existence</governor>
            <dependent idx="28">the</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="31">one</dependent>
          </dep>
          <dep type="conj_or">
            <governor idx="31">one</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="29">existence</governor>
            <dependent idx="34">gods</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="36">conceptions</governor>
            <dependent idx="38">God</dependent>
          </dep>
          <dep type="det">
            <governor idx="41">soul</governor>
            <dependent idx="40">the</dependent>
          </dep>
          <dep type="appos">
            <governor idx="38">God</governor>
            <dependent idx="41">soul</dependent>
          </dep>
          <dep type="det">
            <governor idx="45">afterlife</governor>
            <dependent idx="44">the</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">involved</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="1">Many</dependent>
          </dep>
          <dep type="amod">
            <governor idx="3">issues</governor>
            <dependent idx="2">other</dependent>
          </dep>
          <dep type="nsubjpass">
            <governor idx="6">involved</governor>
            <dependent idx="3">issues</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="6">involved</governor>
            <dependent idx="4">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">involved</governor>
            <dependent idx="5">also</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="10">symbolic</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="11">meaning</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="13">ontology</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="15">value</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="17">purpose</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="19">ethics</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="21">good</dependent>
          </dep>
          <dep type="amod">
            <governor idx="11">meaning</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="21">good</governor>
            <dependent idx="23">evil</dependent>
          </dep>
          <dep type="amod">
            <governor idx="26">will</governor>
            <dependent idx="25">free</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="26">will</dependent>
          </dep>
          <dep type="det">
            <governor idx="29">existence</governor>
            <dependent idx="28">the</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="29">existence</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="31">one</dependent>
          </dep>
          <dep type="conj_or">
            <governor idx="31">one</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="nn">
            <governor idx="34">gods</governor>
            <dependent idx="33">multiple</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="29">existence</governor>
            <dependent idx="34">gods</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="36">conceptions</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="36">conceptions</governor>
            <dependent idx="38">God</dependent>
          </dep>
          <dep type="det">
            <governor idx="41">soul</governor>
            <dependent idx="40">the</dependent>
          </dep>
          <dep type="appos">
            <governor idx="38">God</governor>
            <dependent idx="41">soul</dependent>
          </dep>
          <dep type="det">
            <governor idx="45">afterlife</governor>
            <dependent idx="44">the</dependent>
          </dep>
          <dep type="prep_such_as">
            <governor idx="6">involved</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">meaning</governor>
            <dependent idx="45">afterlife</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="3">
        <tokens>
          <token id="1">
            <word>Scientific</word>
            <lemma>Scientific</lemma>
            <CharacterOffsetBegin>400</CharacterOffsetBegin>
            <CharacterOffsetEnd>410</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>contributions</word>
            <lemma>contribution</lemma>
            <CharacterOffsetBegin>411</CharacterOffsetBegin>
            <CharacterOffsetEnd>424</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>focus</word>
            <lemma>focus</lemma>
            <CharacterOffsetBegin>425</CharacterOffsetBegin>
            <CharacterOffsetEnd>430</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>primarily</word>
            <lemma>primarily</lemma>
            <CharacterOffsetBegin>431</CharacterOffsetBegin>
            <CharacterOffsetEnd>440</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>on</word>
            <lemma>on</lemma>
            <CharacterOffsetBegin>441</CharacterOffsetBegin>
            <CharacterOffsetEnd>443</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>describing</word>
            <lemma>describe</lemma>
            <CharacterOffsetBegin>444</CharacterOffsetBegin>
            <CharacterOffsetEnd>454</CharacterOffsetEnd>
            <POS>VBG</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>related</word>
            <lemma>related</lemma>
            <CharacterOffsetBegin>455</CharacterOffsetBegin>
            <CharacterOffsetEnd>462</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>empirical</word>
            <lemma>empirical</lemma>
            <CharacterOffsetBegin>463</CharacterOffsetBegin>
            <CharacterOffsetEnd>472</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>facts</word>
            <lemma>fact</lemma>
            <CharacterOffsetBegin>473</CharacterOffsetBegin>
            <CharacterOffsetEnd>478</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>about</word>
            <lemma>about</lemma>
            <CharacterOffsetBegin>479</CharacterOffsetBegin>
            <CharacterOffsetEnd>484</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>485</CharacterOffsetBegin>
            <CharacterOffsetEnd>488</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>universe</word>
            <lemma>universe</lemma>
            <CharacterOffsetBegin>489</CharacterOffsetBegin>
            <CharacterOffsetEnd>497</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>497</CharacterOffsetBegin>
            <CharacterOffsetEnd>498</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>exploring</word>
            <lemma>explore</lemma>
            <CharacterOffsetBegin>499</CharacterOffsetBegin>
            <CharacterOffsetEnd>508</CharacterOffsetEnd>
            <POS>VBG</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>509</CharacterOffsetBegin>
            <CharacterOffsetEnd>512</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>context</word>
            <lemma>context</lemma>
            <CharacterOffsetBegin>513</CharacterOffsetBegin>
            <CharacterOffsetEnd>520</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>521</CharacterOffsetBegin>
            <CharacterOffsetEnd>524</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>parameters</word>
            <lemma>parameter</lemma>
            <CharacterOffsetBegin>525</CharacterOffsetBegin>
            <CharacterOffsetEnd>535</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>concerning</word>
            <lemma>concern</lemma>
            <CharacterOffsetBegin>536</CharacterOffsetBegin>
            <CharacterOffsetEnd>546</CharacterOffsetEnd>
            <POS>VBG</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="20">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>547</CharacterOffsetBegin>
            <CharacterOffsetEnd>550</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="21">
            <word>`</word>
            <lemma>`</lemma>
            <CharacterOffsetBegin>551</CharacterOffsetBegin>
            <CharacterOffsetEnd>552</CharacterOffsetEnd>
            <POS>``</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="22">
            <word>how</word>
            <lemma>how</lemma>
            <CharacterOffsetBegin>552</CharacterOffsetBegin>
            <CharacterOffsetEnd>555</CharacterOffsetEnd>
            <POS>WRB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="23">
            <word>'</word>
            <lemma>'</lemma>
            <CharacterOffsetBegin>555</CharacterOffsetBegin>
            <CharacterOffsetEnd>556</CharacterOffsetEnd>
            <POS>''</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="24">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>557</CharacterOffsetBegin>
            <CharacterOffsetEnd>559</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="25">
            <word>life</word>
            <lemma>life</lemma>
            <CharacterOffsetBegin>560</CharacterOffsetBegin>
            <CharacterOffsetEnd>564</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="26">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>564</CharacterOffsetBegin>
            <CharacterOffsetEnd>565</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (NNP Scientific) (NNS contributions)) (VP (VBP focus) (ADVP (RB primarily)) (PP (IN on) (S (VP (VBG describing) (NP (JJ related) (JJ empirical) (NNS facts)) (PP (IN about) (NP (NP (NP (DT the) (NN universe)) (, ,) (VP (VBG exploring) (NP (DT the) (NN context) (CC and) (NNS parameters)) (S (VP (VBG concerning) (NP (DT the)) (`` `) (NP (WRB how)))))) ('' ') (PP (IN of) (NP (NN life))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">focus</dependent>
          </dep>
          <dep type="nn">
            <governor idx="2">contributions</governor>
            <dependent idx="1">Scientific</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">focus</governor>
            <dependent idx="2">contributions</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">focus</governor>
            <dependent idx="4">primarily</dependent>
          </dep>
          <dep type="prep">
            <governor idx="3">focus</governor>
            <dependent idx="5">on</dependent>
          </dep>
          <dep type="pcomp">
            <governor idx="5">on</governor>
            <dependent idx="6">describing</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="7">related</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="8">empirical</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">describing</governor>
            <dependent idx="9">facts</dependent>
          </dep>
          <dep type="prep">
            <governor idx="6">describing</governor>
            <dependent idx="10">about</dependent>
          </dep>
          <dep type="det">
            <governor idx="12">universe</governor>
            <dependent idx="11">the</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="10">about</governor>
            <dependent idx="12">universe</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="12">universe</governor>
            <dependent idx="14">exploring</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">context</governor>
            <dependent idx="15">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="16">context</dependent>
          </dep>
          <dep type="cc">
            <governor idx="16">context</governor>
            <dependent idx="17">and</dependent>
          </dep>
          <dep type="conj">
            <governor idx="16">context</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="14">exploring</governor>
            <dependent idx="19">concerning</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="20">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="22">how</dependent>
          </dep>
          <dep type="prep">
            <governor idx="12">universe</governor>
            <dependent idx="24">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="24">of</governor>
            <dependent idx="25">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">focus</dependent>
          </dep>
          <dep type="nn">
            <governor idx="2">contributions</governor>
            <dependent idx="1">Scientific</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">focus</governor>
            <dependent idx="2">contributions</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">focus</governor>
            <dependent idx="4">primarily</dependent>
          </dep>
          <dep type="prepc_on">
            <governor idx="3">focus</governor>
            <dependent idx="6">describing</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="7">related</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="8">empirical</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">describing</governor>
            <dependent idx="9">facts</dependent>
          </dep>
          <dep type="det">
            <governor idx="12">universe</governor>
            <dependent idx="11">the</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="6">describing</governor>
            <dependent idx="12">universe</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="12">universe</governor>
            <dependent idx="14">exploring</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">context</governor>
            <dependent idx="15">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="16">context</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">context</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="14">exploring</governor>
            <dependent idx="19">concerning</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="20">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="22">how</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="12">universe</governor>
            <dependent idx="25">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">focus</dependent>
          </dep>
          <dep type="nn">
            <governor idx="2">contributions</governor>
            <dependent idx="1">Scientific</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">focus</governor>
            <dependent idx="2">contributions</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">focus</governor>
            <dependent idx="4">primarily</dependent>
          </dep>
          <dep type="prepc_on">
            <governor idx="3">focus</governor>
            <dependent idx="6">describing</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="7">related</dependent>
          </dep>
          <dep type="amod">
            <governor idx="9">facts</governor>
            <dependent idx="8">empirical</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">describing</governor>
            <dependent idx="9">facts</dependent>
          </dep>
          <dep type="det">
            <governor idx="12">universe</governor>
            <dependent idx="11">the</dependent>
          </dep>
          <dep type="prep_about">
            <governor idx="6">describing</governor>
            <dependent idx="12">universe</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="12">universe</governor>
            <dependent idx="14">exploring</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">context</governor>
            <dependent idx="15">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="16">context</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="14">exploring</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="16">context</governor>
            <dependent idx="18">parameters</dependent>
          </dep>
          <dep type="vmod">
            <governor idx="14">exploring</governor>
            <dependent idx="19">concerning</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="20">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="19">concerning</governor>
            <dependent idx="22">how</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="12">universe</governor>
            <dependent idx="25">life</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="4">
        <tokens>
          <token id="1">
            <word>Science</word>
            <lemma>Science</lemma>
            <CharacterOffsetBegin>566</CharacterOffsetBegin>
            <CharacterOffsetEnd>573</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>also</word>
            <lemma>also</lemma>
            <CharacterOffsetBegin>574</CharacterOffsetBegin>
            <CharacterOffsetEnd>578</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>studies</word>
            <lemma>study</lemma>
            <CharacterOffsetBegin>579</CharacterOffsetBegin>
            <CharacterOffsetEnd>586</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>587</CharacterOffsetBegin>
            <CharacterOffsetEnd>590</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>can</word>
            <lemma>can</lemma>
            <CharacterOffsetBegin>591</CharacterOffsetBegin>
            <CharacterOffsetEnd>594</CharacterOffsetEnd>
            <POS>MD</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>provide</word>
            <lemma>provide</lemma>
            <CharacterOffsetBegin>595</CharacterOffsetBegin>
            <CharacterOffsetEnd>602</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>recommendations</word>
            <lemma>recommendation</lemma>
            <CharacterOffsetBegin>603</CharacterOffsetBegin>
            <CharacterOffsetEnd>618</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>for</word>
            <lemma>for</lemma>
            <CharacterOffsetBegin>619</CharacterOffsetBegin>
            <CharacterOffsetEnd>622</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>623</CharacterOffsetBegin>
            <CharacterOffsetEnd>626</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>pursuit</word>
            <lemma>pursuit</lemma>
            <CharacterOffsetBegin>627</CharacterOffsetBegin>
            <CharacterOffsetEnd>634</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>635</CharacterOffsetBegin>
            <CharacterOffsetEnd>637</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>well-being</word>
            <lemma>well-being</lemma>
            <CharacterOffsetBegin>638</CharacterOffsetBegin>
            <CharacterOffsetEnd>648</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="13">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>649</CharacterOffsetBegin>
            <CharacterOffsetEnd>652</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="14">
            <word>a</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>653</CharacterOffsetBegin>
            <CharacterOffsetEnd>654</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="15">
            <word>related</word>
            <lemma>related</lemma>
            <CharacterOffsetBegin>655</CharacterOffsetBegin>
            <CharacterOffsetEnd>662</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="16">
            <word>conception</word>
            <lemma>conception</lemma>
            <CharacterOffsetBegin>663</CharacterOffsetBegin>
            <CharacterOffsetEnd>673</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="17">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>674</CharacterOffsetBegin>
            <CharacterOffsetEnd>676</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="18">
            <word>morality</word>
            <lemma>morality</lemma>
            <CharacterOffsetBegin>677</CharacterOffsetBegin>
            <CharacterOffsetEnd>685</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="19">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>685</CharacterOffsetBegin>
            <CharacterOffsetEnd>686</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (NNP Science)) (VP (VP (ADVP (RB also)) (NP (NNS studies))) (CC and) (VP (MD can) (VP (VB provide) (NP (NNS recommendations)) (PP (IN for) (NP (NP (NP (DT the) (NN pursuit)) (PP (IN of) (NP (NN well-being)))) (CC and) (NP (NP (DT a) (JJ related) (NN conception)) (PP (IN of) (NP (NN morality))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">studies</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">studies</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">studies</governor>
            <dependent idx="2">also</dependent>
          </dep>
          <dep type="cc">
            <governor idx="3">studies</governor>
            <dependent idx="4">and</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">provide</governor>
            <dependent idx="5">can</dependent>
          </dep>
          <dep type="conj">
            <governor idx="3">studies</governor>
            <dependent idx="6">provide</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">provide</governor>
            <dependent idx="7">recommendations</dependent>
          </dep>
          <dep type="prep">
            <governor idx="6">provide</governor>
            <dependent idx="8">for</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">pursuit</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="8">for</governor>
            <dependent idx="10">pursuit</dependent>
          </dep>
          <dep type="prep">
            <governor idx="10">pursuit</governor>
            <dependent idx="11">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="11">of</governor>
            <dependent idx="12">well-being</dependent>
          </dep>
          <dep type="cc">
            <governor idx="10">pursuit</governor>
            <dependent idx="13">and</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">conception</governor>
            <dependent idx="14">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">conception</governor>
            <dependent idx="15">related</dependent>
          </dep>
          <dep type="conj">
            <governor idx="10">pursuit</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="prep">
            <governor idx="16">conception</governor>
            <dependent idx="17">of</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="17">of</governor>
            <dependent idx="18">morality</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">studies</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">studies</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">studies</governor>
            <dependent idx="2">also</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">provide</governor>
            <dependent idx="5">can</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="3">studies</governor>
            <dependent idx="6">provide</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">provide</governor>
            <dependent idx="7">recommendations</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">pursuit</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="prep_for">
            <governor idx="6">provide</governor>
            <dependent idx="10">pursuit</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="10">pursuit</governor>
            <dependent idx="12">well-being</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">conception</governor>
            <dependent idx="14">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">conception</governor>
            <dependent idx="15">related</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="10">pursuit</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="16">conception</governor>
            <dependent idx="18">morality</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">studies</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">studies</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">provide</governor>
            <dependent idx="1">Science</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">studies</governor>
            <dependent idx="2">also</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">provide</governor>
            <dependent idx="5">can</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="3">studies</governor>
            <dependent idx="6">provide</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">provide</governor>
            <dependent idx="7">recommendations</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">pursuit</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="prep_for">
            <governor idx="6">provide</governor>
            <dependent idx="10">pursuit</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="10">pursuit</governor>
            <dependent idx="12">well-being</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">conception</governor>
            <dependent idx="14">a</dependent>
          </dep>
          <dep type="amod">
            <governor idx="16">conception</governor>
            <dependent idx="15">related</dependent>
          </dep>
          <dep type="prep_for">
            <governor idx="6">provide</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="10">pursuit</governor>
            <dependent idx="16">conception</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="16">conception</governor>
            <dependent idx="18">morality</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="5">
        <tokens>
          <token id="1">
            <word>An</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>687</CharacterOffsetBegin>
            <CharacterOffsetEnd>689</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>alternative</word>
            <lemma>alternative</lemma>
            <CharacterOffsetBegin>690</CharacterOffsetBegin>
            <CharacterOffsetEnd>701</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>701</CharacterOffsetBegin>
            <CharacterOffsetEnd>702</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>humanistic</word>
            <lemma>humanistic</lemma>
            <CharacterOffsetBegin>703</CharacterOffsetBegin>
            <CharacterOffsetEnd>713</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>approach</word>
            <lemma>approach</lemma>
            <CharacterOffsetBegin>714</CharacterOffsetBegin>
            <CharacterOffsetEnd>722</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>poses</word>
            <lemma>pose</lemma>
            <CharacterOffsetBegin>723</CharacterOffsetBegin>
            <CharacterOffsetEnd>728</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>729</CharacterOffsetBegin>
            <CharacterOffsetEnd>732</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>question</word>
            <lemma>question</lemma>
            <CharacterOffsetBegin>733</CharacterOffsetBegin>
            <CharacterOffsetEnd>741</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>``</word>
            <lemma>``</lemma>
            <CharacterOffsetBegin>742</CharacterOffsetBegin>
            <CharacterOffsetEnd>743</CharacterOffsetEnd>
            <POS>``</POS>
            <NER>O</NER>
          </token>
          <token id="10">
            <word>What</word>
            <lemma>what</lemma>
            <CharacterOffsetBegin>743</CharacterOffsetBegin>
            <CharacterOffsetEnd>747</CharacterOffsetEnd>
            <POS>WP</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="11">
            <word>is</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>748</CharacterOffsetBegin>
            <CharacterOffsetEnd>750</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="12">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>751</CharacterOffsetBegin>
            <CharacterOffsetEnd>754</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="13">
            <word>meaning</word>
            <lemma>meaning</lemma>
            <CharacterOffsetBegin>755</CharacterOffsetBegin>
            <CharacterOffsetEnd>762</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="14">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>763</CharacterOffsetBegin>
            <CharacterOffsetEnd>765</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="15">
            <word>my</word>
            <lemma>my</lemma>
            <CharacterOffsetBegin>766</CharacterOffsetBegin>
            <CharacterOffsetEnd>768</CharacterOffsetEnd>
            <POS>PRP$</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="16">
            <word>life</word>
            <lemma>life</lemma>
            <CharacterOffsetBegin>769</CharacterOffsetBegin>
            <CharacterOffsetEnd>773</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="17">
            <word>?</word>
            <lemma>?</lemma>
            <CharacterOffsetBegin>773</CharacterOffsetBegin>
            <CharacterOffsetEnd>774</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER1</Speaker>
          </token>
          <token id="18">
            <word>''</word>
            <lemma>''</lemma>
            <CharacterOffsetBegin>774</CharacterOffsetBegin>
            <CharacterOffsetEnd>775</CharacterOffsetEnd>
            <POS>''</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (DT An) (NN alternative) (, ,) (JJ humanistic) (NN approach)) (VP (VBZ poses) (NP (NP (DT the) (NN question)) (`` ``) (SBAR (WHNP (WP What)) (S (VP (VBZ is) (NP (NP (DT the) (NN meaning)) (PP (IN of) (NP (PRP$ my) (NN life))))))))) (. ?) ('' ''))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">poses</dependent>
          </dep>
          <dep type="det">
            <governor idx="5">approach</governor>
            <dependent idx="1">An</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">approach</governor>
            <dependent idx="2">alternative</dependent>
          </dep>
          <dep type="amod">
            <governor idx="5">approach</governor>
            <dependent idx="4">humanistic</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">poses</governor>
            <dependent idx="5">approach</dependent>
          </dep>
          <dep type="det">
            <governor idx="8">question</governor>
            <dependent idx="7">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">poses</governor>
            <dependent idx="8">question</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">meaning</governor>
            <dependent idx="10">What</dependent>
          </dep>
          <dep type="cop">
            <governor idx="13">meaning</governor>
            <dependent idx="11">is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">meaning</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="8">question</governor>
            <dependent idx="13">meaning</dependent>
          </dep>
          <dep type="prep">
            <governor idx="13">meaning</governor>
            <dependent idx="14">of</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">life</governor>
            <dependent idx="15">my</dependent>
          </dep>
          <dep type="pobj">
            <governor idx="14">of</governor>
            <dependent idx="16">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">poses</dependent>
          </dep>
          <dep type="det">
            <governor idx="5">approach</governor>
            <dependent idx="1">An</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">approach</governor>
            <dependent idx="2">alternative</dependent>
          </dep>
          <dep type="amod">
            <governor idx="5">approach</governor>
            <dependent idx="4">humanistic</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">poses</governor>
            <dependent idx="5">approach</dependent>
          </dep>
          <dep type="det">
            <governor idx="8">question</governor>
            <dependent idx="7">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">poses</governor>
            <dependent idx="8">question</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">meaning</governor>
            <dependent idx="10">What</dependent>
          </dep>
          <dep type="cop">
            <governor idx="13">meaning</governor>
            <dependent idx="11">is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">meaning</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="8">question</governor>
            <dependent idx="13">meaning</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">life</governor>
            <dependent idx="15">my</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="13">meaning</governor>
            <dependent idx="16">life</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">poses</dependent>
          </dep>
          <dep type="det">
            <governor idx="5">approach</governor>
            <dependent idx="1">An</dependent>
          </dep>
          <dep type="nn">
            <governor idx="5">approach</governor>
            <dependent idx="2">alternative</dependent>
          </dep>
          <dep type="amod">
            <governor idx="5">approach</governor>
            <dependent idx="4">humanistic</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">poses</governor>
            <dependent idx="5">approach</dependent>
          </dep>
          <dep type="det">
            <governor idx="8">question</governor>
            <dependent idx="7">the</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="6">poses</governor>
            <dependent idx="8">question</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">meaning</governor>
            <dependent idx="10">What</dependent>
          </dep>
          <dep type="cop">
            <governor idx="13">meaning</governor>
            <dependent idx="11">is</dependent>
          </dep>
          <dep type="det">
            <governor idx="13">meaning</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="8">question</governor>
            <dependent idx="13">meaning</dependent>
          </dep>
          <dep type="poss">
            <governor idx="16">life</governor>
            <dependent idx="15">my</dependent>
          </dep>
          <dep type="prep_of">
            <governor idx="13">meaning</governor>
            <dependent idx="16">life</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
    <coreference>
      <coreference>
        <mention representative="true">
          <sentence>1</sentence>
          <start>1</start>
          <end>7</end>
          <head>2</head>
          <text>The meaning of life as we</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>8</start>
          <end>9</end>
          <head>8</head>
          <text>it</text>
        </mention>
        <mention>
          <sentence>5</sentence>
          <start>12</start>
          <end>17</end>
          <head>13</head>
          <text>the meaning of my life</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>5</sentence>
          <start>15</start>
          <end>17</end>
          <head>16</head>
          <text>my life</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>4</start>
          <end>7</end>
          <head>4</head>
          <text>life as we</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>1</sentence>
          <start>6</start>
          <end>7</end>
          <head>6</head>
          <text>we</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>12</start>
          <end>13</end>
          <head>12</head>
          <text>our</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>1</sentence>
          <start>12</start>
          <end>18</end>
          <head>16</head>
          <text>our philosophical and religious contemplation of</text>
        </mention>
        <mention>
          <sentence>1</sentence>
          <start>20</start>
          <end>32</end>
          <head>21</head>
          <text>scientific inquiries about existence , social ties , consciousness , and happiness</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>2</sentence>
          <start>36</start>
          <end>42</end>
          <head>36</head>
          <text>conceptions of God , the soul</text>
        </mention>
        <mention>
          <sentence>2</sentence>
          <start>19</start>
          <end>20</end>
          <head>19</head>
          <text>ethics</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>2</sentence>
          <start>28</start>
          <end>35</end>
          <head>29</head>
          <text>the existence of one or multiple gods</text>
        </mention>
        <mention>
          <sentence>2</sentence>
          <start>44</start>
          <end>46</end>
          <head>45</head>
          <text>the afterlife</text>
        </mention>
      </coreference>
      <coreference>
        <mention representative="true">
          <sentence>3</sentence>
          <start>20</start>
          <end>21</end>
          <head>20</head>
          <text>the</text>
        </mention>
        <mention>
          <sentence>5</sentence>
          <start>15</start>
          <end>16</end>
          <head>15</head>
          <text>my</text>
        </mention>
      </coreference>
    </coreference>
  </document>
</root>
 ]

[16/12/2015 - 13:21:19] (10.0.2.2|)  => hello
[16/12/2015 - 13:21:19] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 1, column 1:
    >>> Processing cinq_semaines_en_ ... 
    ^
expected chomping or indentation indicators, but found >
 in 'string', line 1, column 2:
    >>> Processing cinq_semaines_en_b ... 
     ^

[16/12/2015 - 13:24:8] (10.0.2.2|)  => hello
[16/12/2015 - 13:24:8] (10.0.2.2|)  => {"creationdate":"2015-12-16T11:58:27.472","def":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"OUT_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76/"},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76"}},"ruid":"10664724-eda3-4626-a9eb-b3ce56dcfb76","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":""},"_CUR_MOD":{"type":"VAL","value":"bonsai-parser@munshi"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"_CMD.STDERR":{"type":"VAL","value":">>> Processing cinq_semaines_en_ballon.xml ... + Extracting Text ... * Parsing ... Don3 * Element Repetition Detection and Removal ... Don3 * Identification of List Markings ... Don3 * Cleaning Content ... Don3 * Normalizing Sub-Blocks ... Don3 * Normalizing Using Brackets ... Don3 * Merging Blocks ... Don3 * Improbable Block Removal ... Don3 * Generating Token Definition ... Don3 * Writing Output ... Don3 + Parsing ... + Unifying ... + Completed Successfully. >>> Processing comte_chanteleine.xml ... + Extracting Text ... * Parsing ... Don3 * Element Repetition Detection and Removal ... Don3 * Identification of List Markings ... Don3 * Cleaning Content ... Don3 * Normalizing Sub-Blocks ... Don3 * Normalizing Using Brackets ... Don3 * Merging Blocks ... Don3 * Improbable Block Removal ... Don3 * Generating Token Definition ... Don3 * Writing Output ... Don3 + Parsing ... + Unifying ... + Completed Successfully."},"IN_DIR":{"type":"DIR","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-10664724-eda3-4626-a9eb-b3ce56dcfb76/"},"_MOD_CONTEXT":{"type":"VAL","value":"bonsai-parser@munshi"}},"processport":"53118","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"bonsai-parser@munshi","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 13:29:48] (10.0.2.2|)  => hello
[16/12/2015 - 13:29:48] (10.0.2.2|)  => 
[16/12/2015 - 13:29:48] (10.0.2.2|)  => hello
[16/12/2015 - 13:29:48] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 13:29:48] (10.0.2.2|)  => hello
[16/12/2015 - 13:29:48] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 13:29:49] (10.0.2.2|)  => hello
[16/12/2015 - 13:29:49] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 13:29:49] (10.0.2.2|)  => hello
[16/12/2015 - 13:29:59] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 13:29:59] (10.0.2.2|)  => hello
[16/12/2015 - 13:30:0] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4
pipeline-test : f7e2655c-1f32-46dd-a412-fba73691494e
bonsai-parser@munshi : 10664724-eda3-4626-a9eb-b3ce56dcfb76
pipeline-test : 71208b25-ee55-41dc-bf1b-41001901ebeb
corenlp-server : f9b895ca-e56b-4675-85c3-6019b3db4aec
corenlp-server : d2325883-7eea-4365-a606-208f2932b844

[16/12/2015 - 13:30:0] (10.0.2.2|)  => hello
[16/12/2015 - 13:30:0] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"modules","items":[{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test2.module"},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/modules/brat_propagate/brat_propagate.module"}]},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/modules/foo.module"},{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/modules/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/modules/pipeline-test0.module"},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/modules/pipeline-test.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/modules/parsing/stanford-parser.module"}]}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]}]}]}]}
[16/12/2015 - 13:31:19] (10.0.2.2|)  => hello
[16/12/2015 - 13:31:20] (10.0.2.2|)  => 7c660c25-8d5e-4106-867b-9e7f4877c608
[16/12/2015 - 13:31:20] (10.0.2.2|)  => hello
[16/12/2015 - 13:31:20] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:31:20.071","def":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/modules/corenlp-server\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-7c660c25-8d5e-4106-867b-9e7f4877c608"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/modules/corenlp-server\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/corenlp-server/run-7c660c25-8d5e-4106-867b-9e7f4877c608"}},"ruid":"7c660c25-8d5e-4106-867b-9e7f4877c608","parentProcess":"None","env":"","processport":"51516","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"corenlp-server","parentport":"13847","completeddate":"","status":"Running"}
[16/12/2015 - 13:31:39] (10.0.2.2|)  => hello
[16/12/2015 - 13:31:39] (10.0.2.2|)  => 58117de8-2a3a-406d-b6a4-f556c3b96464
[16/12/2015 - 13:31:39] (10.0.2.2|)  => hello
[16/12/2015 - 13:31:39] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:31:39.021","def":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/bonsai_parser\""},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-58117de8-2a3a-406d-b6a4-f556c3b96464"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/bonsai_parser\""},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-58117de8-2a3a-406d-b6a4-f556c3b96464"}},"ruid":"58117de8-2a3a-406d-b6a4-f556c3b96464","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"bonsai-parser@munshi"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"DIR","value":"\"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-58117de8-2a3a-406d-b6a4-f556c3b96464/"},"_MOD_CONTEXT":{"type":"VAL","value":"bonsai-parser@munshi"}},"processport":"8304","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"bonsai-parser@munshi","parentport":"36549","completeddate":"","status":"Running"}
[16/12/2015 - 13:31:44] (10.0.2.2|)  => hello
[16/12/2015 - 13:31:44] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:31:20.071","def":"/vagrant/modules/examples/modules/corenlp-server/corenlp-server.module","runconf":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/humanism.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/examples/modules/corenlp-server\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/corenlp-server/run-7c660c25-8d5e-4106-867b-9e7f4877c608\""}},"parentEnv":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/humanism.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/modules/corenlp-server\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/corenlp-server/run-7c660c25-8d5e-4106-867b-9e7f4877c608\""},"OUT":{"type":"FILE","value":"\"\\\"/vagrant/data/results/corenlp-server/run-7c660c25-8d5e-4106-867b-9e7f4877c608//humanism.xml\\\"\""}},"ruid":"7c660c25-8d5e-4106-867b-9e7f4877c608","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"IN":{"type":"FILE","value":"\"/vagrant/data/corpus//testcorpus/humanism.txt\""},"_CUR_MOD":{"type":"VAL","value":"\"corenlp-server\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/modules/corenlp-server\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/corenlp-server/run-7c660c25-8d5e-4106-867b-9e7f4877c608/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"corenlp-server\""}},"processport":"25703","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"corenlp-server","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 13:33:15] (10.0.2.2|)  => hello
[16/12/2015 - 13:33:15] (10.0.2.2|)  => {"creationdate":"2015-12-16T13:31:39.021","def":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/bonsai_parser\""},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-58117de8-2a3a-406d-b6a4-f556c3b96464"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/bonsai_parser\""},"IN_DIR":{"type":"VAL","value":"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox"},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-58117de8-2a3a-406d-b6a4-f556c3b96464"}},"ruid":"58117de8-2a3a-406d-b6a4-f556c3b96464","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"bonsai-parser@munshi"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/bonsai_parser"},"IN_DIR":{"type":"DIR","value":"\"/vagrant/data/corpus//munshitest/munshidatatest/pdfbox\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/bonsai-parser@munshi/run-58117de8-2a3a-406d-b6a4-f556c3b96464/"},"_MOD_CONTEXT":{"type":"VAL","value":"bonsai-parser@munshi"}},"processport":"8304","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"bonsai-parser@munshi","parentport":"36549","completeddate":"","status":"Running"}
[16/12/2015 - 14:9:21] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:31] (10.0.2.2|)  => ok
[16/12/2015 - 14:9:31] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:31] (10.0.2.2|)  => 
[16/12/2015 - 14:9:32] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:32] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 14:9:32] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:32] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 14:9:32] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:32] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 14:9:32] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:32] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputDirectory $_RUN_DIR -file $IN"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:filename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputDirectory $_RUN_DIR -file $IN","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[16/12/2015 - 14:9:32] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:43] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 14:9:43] (10.0.2.2|)  => hello
[16/12/2015 - 14:9:43] (10.0.2.2|)  => stanford-parser : 651bf344-a639-427a-8a6d-2a79bc2d067d
stanford-parser : 501e7b76-5e8b-4973-924a-77ac3134a566
pipeline-test : d0ffe9a4-1476-499b-9e54-e3dccbf2cad4
pipeline-test : f7e2655c-1f32-46dd-a412-fba73691494e
bonsai-parser@munshi : 10664724-eda3-4626-a9eb-b3ce56dcfb76
pipeline-test : 71208b25-ee55-41dc-bf1b-41001901ebeb
bonsai-parser@munshi : 58117de8-2a3a-406d-b6a4-f556c3b96464
corenlp-server : f9b895ca-e56b-4675-85c3-6019b3db4aec
corenlp-server : d2325883-7eea-4365-a606-208f2932b844
corenlp-server : 7c660c25-8d5e-4106-867b-9e7f4877c608

[16/12/2015 - 14:10:4] (10.0.2.2|)  => hello
[16/12/2015 - 14:10:4] (10.0.2.2|)  => a92afe77-3242-4dee-8c3e-e6b47145136e
[16/12/2015 - 14:10:4] (10.0.2.2|)  => hello
[16/12/2015 - 14:10:4] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 4, column 11:
      value : >\n    "/vagrant/data/corpus//te ... 
              ^
expected chomping or indentation indicators, but found \
 in 'string', line 4, column 12:
      value : >\n    "/vagrant/data/corpus//tes ... 
               ^

[16/12/2015 - 14:10:29] (10.0.2.2|)  => hello
[16/12/2015 - 14:10:29] (10.0.2.2|)  => 83257259-1b49-4112-bb9f-6f114b88f924
[16/12/2015 - 14:10:29] (10.0.2.2|)  => hello
[16/12/2015 - 14:10:29] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 4, column 11:
      value : >\n    "/vagrant/data/corpus/tes ... 
              ^
expected chomping or indentation indicators, but found \
 in 'string', line 4, column 12:
      value : >\n    "/vagrant/data/corpus/test ... 
               ^

[16/12/2015 - 14:10:45] (10.0.2.2|)  => hello
[16/12/2015 - 14:10:45] (10.0.2.2|)  => Error :while scanning a block scalar
 in 'string', line 4, column 11:
      value : >\n    "/vagrant/data/corpus/tes ... 
              ^
expected chomping or indentation indicators, but found \
 in 'string', line 4, column 12:
      value : >\n    "/vagrant/data/corpus/test ... 
               ^

[16/12/2015 - 14:15:18] (10.0.2.2|)  => hello
[16/12/2015 - 14:15:18] (10.0.2.2|)  => 
[16/12/2015 - 14:15:18] (10.0.2.2|)  => hello
[16/12/2015 - 14:15:18] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 14:15:18] (10.0.2.2|)  => hello
[16/12/2015 - 14:15:18] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 14:15:19] (10.0.2.2|)  => hello
[16/12/2015 - 14:15:19] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 14:15:19] (10.0.2.2|)  => hello
[16/12/2015 - 14:15:29] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 14:15:29] (10.0.2.2|)  => hello
[16/12/2015 - 14:15:30] (10.0.2.2|)  => 
[16/12/2015 - 14:15:30] (10.0.2.2|)  => hello
[16/12/2015 - 14:15:30] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension xml -outputDirectory $_RUN_DIR -file $IN"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:filename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension xml -outputDirectory $_RUN_DIR -file $IN","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[16/12/2015 - 14:16:46] (10.0.2.2|)  => hello
[16/12/2015 - 14:16:46] (10.0.2.2|)  => 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
[16/12/2015 - 14:16:46] (10.0.2.2|)  => hello
[16/12/2015 - 14:16:46] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:16:46.372","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":"","parentEnv":"","ruid":"3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91","parentProcess":"None","env":"","processport":"53647","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-core-nlp","parentport":"NONE","completeddate":"","status":"Waiting"}
[16/12/2015 - 14:16:49] (10.0.2.2|)  => hello
[16/12/2015 - 14:16:49] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:16:46.372","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91"}},"ruid":"3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-core-nlp"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/custom/jose_moreno"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91/\""},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-core-nlp"}},"processport":"53647","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-core-nlp","parentport":"20595","completeddate":"","status":"Running"}
[16/12/2015 - 14:16:50] (10.0.2.2|)  => hello
[16/12/2015 - 14:16:50] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:16:46.372","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91"}},"ruid":"3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-core-nlp"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/custom/jose_moreno"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91/\""},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-core-nlp"}},"processport":"53647","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-core-nlp","parentport":"20595","completeddate":"","status":"Running"}
[16/12/2015 - 14:17:0] (10.0.2.2|)  => hello
[16/12/2015 - 14:17:0] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:16:46.372","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91"}},"ruid":"3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/humanism.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-core-nlp"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/custom/jose_moreno"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91/\""},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-core-nlp"}},"processport":"53647","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-core-nlp","parentport":"20595","completeddate":"","status":"Running"}
[16/12/2015 - 14:23:34] (10.0.2.2|)  => hello
[16/12/2015 - 14:23:34] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:16:46.372","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/humanism.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/custom/jose_moreno\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91\""}},"parentEnv":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/humanism.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91\""},"OUT":{"type":"FILE","value":"\"\\\"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91//humanism.txt.xml\\\"\""}},"ruid":"3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"IN":{"type":"FILE","value":"\"/vagrant/data/corpus//testcorpus/humanism.txt\""},"_CUR_MOD":{"type":"VAL","value":"\"stanford-core-nlp\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_CMD.STDERR":{"type":"VAL","value":"\"[main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator tokenize [main] INFO edu.stanford.nlp.pipeline.TokenizerAnnotator - TokenizerAnnotator: No tokenizer type provided. Defaulting to PTBTokenizer. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator ssplit [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator pos Reading POS tagger model from edu/stanford/nlp/models/pos-tagger/english-left3words/english-left3words-distsim.tagger ... done [1.3 sec]. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator lemma [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator ner Loading classifier from edu/stanford/nlp/models/ner/english.all.3class.distsim.crf.ser.gz ... done [4.0 sec]. Loading classifier from edu/stanford/nlp/models/ner/english.muc.7class.distsim.crf.ser.gz ... done [2.6 sec]. Loading classifier from edu/stanford/nlp/models/ner/english.conll.4class.distsim.crf.ser.gz ... done [2.2 sec]. [main] INFO edu.stanford.nlp.time.JollyDayHolidays - Initializing JollyDayHoliday for SUTime from classpath edu/stanford/nlp/models/sutime/jollyday/Holidays_sutime.xml as sutime.binder.1. Reading TokensRegex rules from edu/stanford/nlp/models/sutime/defs.sutime.txt Dec 16, 2015 2:17:00 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 83 rules Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.sutime.txt Dec 16, 2015 2:17:00 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 267 rules Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.holidays.sutime.txt Dec 16, 2015 2:17:00 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 25 rules [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator parse [main] INFO edu.stanford.nlp.parser.common.ParserGrammar - Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...  done [0.5 sec]. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator dcoref Processing file /vagrant/data/corpus/testcorpus/humanism.txt ... writing to /vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91/humanism.txtxml Annotating file /vagrant/data/corpus/testcorpus/humanism.txt done. Annotation pipeline timing information: TokenizerAnnotator: 0.0 sec. WordsToSentencesAnnotator: 0.0 sec. POSTaggerAnnotator: 0.0 sec. MorphaAnnotator: 0.0 sec. NERCombinerAnnotator: 0.4 sec. ParserAnnotator: 3.9 sec. DeterministicCorefAnnotator: 0.1 sec. TOTAL: 4.6 sec. for 132 tokens at 28.8 tokens/sec. Pipeline setup: 16.2 sec. Total time for StanfordCoreNLP pipeline: 20.9 sec.\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/stanford-core-nlp/run-3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"stanford-core-nlp\""}},"processport":"43450","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-core-nlp","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 14:24:30] (10.0.2.2|)  => hello
[16/12/2015 - 14:24:30] (10.0.2.2|)  => f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
[16/12/2015 - 14:24:30] (10.0.2.2|)  => hello
[16/12/2015 - 14:24:30] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:24:30.309","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e"}},"ruid":"f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-core-nlp"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/custom/jose_moreno"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e/\""},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-core-nlp"}},"processport":"39671","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-core-nlp","parentport":"19508","completeddate":"","status":"Running"}
[16/12/2015 - 14:24:56] (10.0.2.2|)  => hello
[16/12/2015 - 14:24:56] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:24:30.309","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/custom/jose_moreno\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e\""}},"parentEnv":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e\""},"OUT":{"type":"FILE","value":"\"\\\"/vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e//meaning_of_life_full.txt.xml\\\"\""}},"ruid":"f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"IN":{"type":"FILE","value":"\"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt\""},"_CUR_MOD":{"type":"VAL","value":"\"stanford-core-nlp\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_CMD.STDERR":{"type":"VAL","value":"\"[main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator tokenize [main] INFO edu.stanford.nlp.pipeline.TokenizerAnnotator - TokenizerAnnotator: No tokenizer type provided. Defaulting to PTBTokenizer. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator ssplit [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator pos Reading POS tagger model from edu/stanford/nlp/models/pos-tagger/english-left3words/english-left3words-distsim.tagger ... done [1.3 sec]. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator lemma [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator ner Loading classifier from edu/stanford/nlp/models/ner/english.all.3class.distsim.crf.ser.gz ... done [3.9 sec]. Loading classifier from edu/stanford/nlp/models/ner/english.muc.7class.distsim.crf.ser.gz ... done [2.4 sec]. Loading classifier from edu/stanford/nlp/models/ner/english.conll.4class.distsim.crf.ser.gz ... done [2.1 sec]. [main] INFO edu.stanford.nlp.time.JollyDayHolidays - Initializing JollyDayHoliday for SUTime from classpath edu/stanford/nlp/models/sutime/jollyday/Holidays_sutime.xml as sutime.binder.1. Reading TokensRegex rules from edu/stanford/nlp/models/sutime/defs.sutime.txt Dec 16, 2015 2:24:41 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 83 rules Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.sutime.txt Dec 16, 2015 2:24:43 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 267 rules Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.holidays.sutime.txt Dec 16, 2015 2:24:43 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 25 rules [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator parse [main] INFO edu.stanford.nlp.parser.common.ParserGrammar - Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...  done [0.5 sec]. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator dcoref Processing file /vagrant/data/corpus/testcorpus/meaning_of_life_full.txt ... writing to /vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e/meaning_of_life_full.txtxml Annotating file /vagrant/data/corpus/testcorpus/meaning_of_life_full.txt done. Annotation pipeline timing information: TokenizerAnnotator: 0.0 sec. WordsToSentencesAnnotator: 0.0 sec. POSTaggerAnnotator: 0.0 sec. MorphaAnnotator: 0.0 sec. NERCombinerAnnotator: 0.3 sec. ParserAnnotator: 3.5 sec. DeterministicCorefAnnotator: 0.3 sec. TOTAL: 4.3 sec. for 141 tokens at 33.0 tokens/sec. Pipeline setup: 15.5 sec. Total time for StanfordCoreNLP pipeline: 19.9 sec.\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/stanford-core-nlp/run-f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"stanford-core-nlp\""}},"processport":"59536","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-core-nlp","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 14:25:2] (10.0.2.2|)  => hello
[16/12/2015 - 14:25:13] (10.0.2.2|)  => ok
[16/12/2015 - 14:25:28] (10.0.2.2|)  => hello
[16/12/2015 - 14:25:28] (10.0.2.2|)  => 75cc397b-a088-436d-8874-345dbb0dbc65
[16/12/2015 - 14:25:28] (10.0.2.2|)  => hello
[16/12/2015 - 14:25:28] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:25:28.385","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65"}},"ruid":"75cc397b-a088-436d-8874-345dbb0dbc65","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-core-nlp"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/custom/jose_moreno"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65/\""},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-core-nlp"}},"processport":"29157","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-core-nlp","parentport":"35590","completeddate":"","status":"Running"}
[16/12/2015 - 14:25:48] (10.0.2.2|)  => hello
[16/12/2015 - 14:25:48] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:25:28.385","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65"}},"ruid":"75cc397b-a088-436d-8874-345dbb0dbc65","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-core-nlp"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/custom/jose_moreno"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65/\""},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-core-nlp"}},"processport":"29157","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-core-nlp","parentport":"35590","completeddate":"","status":"Running"}
[16/12/2015 - 14:25:51] (10.0.2.2|)  => hello
[16/12/2015 - 14:25:51] (10.0.2.2|)  => {"creationdate":"2015-12-16T14:25:28.385","def":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module","runconf":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/custom/jose_moreno\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65\""}},"parentEnv":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt\""},"BRAT_ANN":{"type":"FILE","value":"\"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65//meaning_of_life_full.txt.ann\""},"RAW_OUT":{"type":"FILE","value":"\"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65//meaning_of_life_full.txt.xml\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65\\\"\""}},"ruid":"75cc397b-a088-436d-8874-345dbb0dbc65","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"_CMD#toBrat.STDERR":{"type":"VAL","value":"\"\""},"IN":{"type":"FILE","value":"\"/vagrant/data/corpus//testcorpus/meaning_of_life_full.txt\""},"_CUR_MOD":{"type":"VAL","value":"\"stanford-core-nlp\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/custom/jose_moreno\""},"_CMD.STDERR":{"type":"VAL","value":"\"[main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator tokenize [main] INFO edu.stanford.nlp.pipeline.TokenizerAnnotator - TokenizerAnnotator: No tokenizer type provided. Defaulting to PTBTokenizer. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator ssplit [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator pos Reading POS tagger model from edu/stanford/nlp/models/pos-tagger/english-left3words/english-left3words-distsim.tagger ... done [1.4 sec]. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator lemma [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator ner Loading classifier from edu/stanford/nlp/models/ner/english.all.3class.distsim.crf.ser.gz ... done [4.1 sec]. Loading classifier from edu/stanford/nlp/models/ner/english.muc.7class.distsim.crf.ser.gz ... done [2.7 sec]. Loading classifier from edu/stanford/nlp/models/ner/english.conll.4class.distsim.crf.ser.gz ... done [3.8 sec]. [main] INFO edu.stanford.nlp.time.JollyDayHolidays - Initializing JollyDayHoliday for SUTime from classpath edu/stanford/nlp/models/sutime/jollyday/Holidays_sutime.xml as sutime.binder.1. Reading TokensRegex rules from edu/stanford/nlp/models/sutime/defs.sutime.txt Dec 16, 2015 2:25:42 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 83 rules Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.sutime.txt Dec 16, 2015 2:25:42 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 267 rules Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.holidays.sutime.txt Dec 16, 2015 2:25:42 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules INFO: Read 25 rules [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator parse [main] INFO edu.stanford.nlp.parser.common.ParserGrammar - Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...  done [0.5 sec]. [main] INFO edu.stanford.nlp.pipeline.StanfordCoreNLP - Adding annotator dcoref Processing file /vagrant/data/corpus/testcorpus/meaning_of_life_full.txt ... writing to /vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65/meaning_of_life_full.txt.xml Annotating file /vagrant/data/corpus/testcorpus/meaning_of_life_full.txt done. Annotation pipeline timing information: TokenizerAnnotator: 0.0 sec. WordsToSentencesAnnotator: 0.0 sec. POSTaggerAnnotator: 0.0 sec. MorphaAnnotator: 0.0 sec. NERCombinerAnnotator: 0.2 sec. ParserAnnotator: 3.3 sec. DeterministicCorefAnnotator: 0.2 sec. TOTAL: 3.7 sec. for 141 tokens at 37.8 tokens/sec. Pipeline setup: 16.6 sec. Total time for StanfordCoreNLP pipeline: 20.5 sec.\""},"_CMD#toBrat.STDOUT":{"type":"VAL","value":"\"\\\"\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-core-nlp/run-75cc397b-a088-436d-8874-345dbb0dbc65/\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"stanford-core-nlp\""}},"processport":"62964","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-core-nlp","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 14:41:8] (10.0.2.2|)  => hello
[16/12/2015 - 14:41:8] (10.0.2.2|)  => 
[16/12/2015 - 14:41:8] (10.0.2.2|)  => hello
[16/12/2015 - 14:41:8] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 14:41:8] (10.0.2.2|)  => hello
[16/12/2015 - 14:41:8] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 14:41:9] (10.0.2.2|)  => hello
[16/12/2015 - 14:41:9] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 14:41:9] (10.0.2.2|)  => hello
[16/12/2015 - 14:41:9] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[16/12/2015 - 14:41:9] (10.0.2.2|)  => hello
[16/12/2015 - 14:41:9] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65

[16/12/2015 - 14:41:9] (10.0.2.2|)  => hello
[16/12/2015 - 14:41:19] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 14:47:13] (10.0.2.2|)  => hello
[16/12/2015 - 14:47:13] (10.0.2.2|)  => 
[16/12/2015 - 14:47:13] (10.0.2.2|)  => hello
[16/12/2015 - 14:47:13] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 14:47:14] (10.0.2.2|)  => hello
[16/12/2015 - 14:47:14] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 14:47:14] (10.0.2.2|)  => hello
[16/12/2015 - 14:47:14] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 14:47:14] (10.0.2.2|)  => hello
[16/12/2015 - 14:47:25] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 14:47:25] (10.0.2.2|)  => hello
[16/12/2015 - 14:47:25] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65

[16/12/2015 - 14:47:25] (10.0.2.2|)  => hello
[16/12/2015 - 14:47:25] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[16/12/2015 - 15:47:53] (10.0.2.2|)  => hello
[16/12/2015 - 15:47:53] (10.0.2.2|)  => 
[16/12/2015 - 15:47:53] (10.0.2.2|)  => hello
[16/12/2015 - 15:47:53] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[16/12/2015 - 15:47:53] (10.0.2.2|)  => hello
[16/12/2015 - 15:47:53] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[16/12/2015 - 15:47:54] (10.0.2.2|)  => hello
[16/12/2015 - 15:48:8] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[16/12/2015 - 15:48:8] (10.0.2.2|)  => hello
[16/12/2015 - 15:48:8] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[16/12/2015 - 15:48:8] (10.0.2.2|)  => hello
[16/12/2015 - 15:48:18] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[16/12/2015 - 15:48:18] (10.0.2.2|)  => hello
[16/12/2015 - 15:48:19] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65

[16/12/2015 - 15:49:0] (10.0.2.2|)  => hello
[16/12/2015 - 15:49:0] (10.0.2.2|)  => 11576218-a347-40e8-8471-a2ba7a3c30c3
[16/12/2015 - 15:49:0] (10.0.2.2|)  => hello
[16/12/2015 - 15:49:0] (10.0.2.2|)  => {"creationdate":"2015-12-16T15:49:00.194","def":"/vagrant/modules/examples/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light/490051479555043328.txt/"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-11576218-a347-40e8-8471-a2ba7a3c30c3"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light/490051479555043328.txt/"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-11576218-a347-40e8-8471-a2ba7a3c30c3"}},"ruid":"11576218-a347-40e8-8471-a2ba7a3c30c3","parentProcess":"None","env":"","processport":"19909","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"30290","completeddate":"","status":"Running"}
[16/12/2015 - 15:49:12] (10.0.2.2|)  => hello
[16/12/2015 - 15:49:12] (10.0.2.2|)  => {"creationdate":"2015-12-16T15:49:00.194","def":"/vagrant/modules/examples/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//origtweets_light/490051479555043328.txt/\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/examples/parsing\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-parser/run-11576218-a347-40e8-8471-a2ba7a3c30c3\""}},"parentEnv":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//origtweets_light/490051479555043328.txt/\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-parser/run-11576218-a347-40e8-8471-a2ba7a3c30c3\""},"OUT":{"type":"FILE","value":"\"\\\"/vagrant/data/results/stanford-parser/run-11576218-a347-40e8-8471-a2ba7a3c30c3//490051479555043328.xml\\\"\""}},"ruid":"11576218-a347-40e8-8471-a2ba7a3c30c3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"_CMD#2conll.STDOUT":{"type":"VAL","value":"\"\\\"\\\"\""},"IN":{"type":"FILE","value":"\"/vagrant/data/corpus//origtweets_light/490051479555043328.txt/\""},"_CUR_MOD":{"type":"VAL","value":"\"stanford-parser\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_CMD.STDERR":{"type":"VAL","value":"\"Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...  done [1.0 sec]. Parsing file: /vagrant/data/corpus//origtweets_light/490051479555043328.txt/ Parsing [sent. 1 len. 13]: Les #zoneshumides camarguaises au centre d'une exposition en #Chine http://t.co/EegQgeFJRJ #camargue #provence #biodiversité Parsed file: /vagrant/data/corpus//origtweets_light/490051479555043328.txt/ [1 sentences]. Parsed 13 words in 1 sentences (14.08 wds/sec; 1.08 sents/sec).\""},"_CMD#2conll.STDERR":{"type":"VAL","value":"\"/bin/sh: 1: /vagrant/modules/examples/parsing/StfdParse2Conll.sh: Permission denied\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-parser/run-11576218-a347-40e8-8471-a2ba7a3c30c3/\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"stanford-parser\""}},"processport":"63295","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-parser","parentport":"NONE","completeddate":"","status":"Exited(error when running : _CMD#2conll failed with exit value error when running : _CMD#2conll failed with exit value 126)"}
[16/12/2015 - 15:49:52] (10.0.2.2|)  => hello
[16/12/2015 - 15:49:52] (10.0.2.2|)  => 7ab7d919-48c0-42f9-9f12-74c70d58a4a6
[16/12/2015 - 15:49:52] (10.0.2.2|)  => hello
[16/12/2015 - 15:49:52] (10.0.2.2|)  => {"creationdate":"2015-12-16T15:49:52.177","def":"/vagrant/modules/examples/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light/490051479555043328.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6"}},"parentEnv":{"IN":{"type":"VAL","value":"/vagrant/data/corpus//origtweets_light/490051479555043328.txt"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6"}},"ruid":"7ab7d919-48c0-42f9-9f12-74c70d58a4a6","parentProcess":"None","env":{"IN":{"type":"FILE","value":"/vagrant/data/corpus//origtweets_light/490051479555043328.txt"},"_CUR_MOD":{"type":"VAL","value":"stanford-parser"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples/parsing"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/\""},"_MOD_CONTEXT":{"type":"VAL","value":"stanford-parser"}},"processport":"48810","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"stanford-parser","parentport":"19246","completeddate":"","status":"Running"}
[16/12/2015 - 15:49:59] (10.0.2.2|)  => hello
[16/12/2015 - 15:49:59] (10.0.2.2|)  => {"creationdate":"2015-12-16T15:49:52.177","def":"/vagrant/modules/examples/parsing/stanford-parser.module","runconf":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//origtweets_light/490051479555043328.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/examples/parsing\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6\""}},"parentEnv":{"IN":{"type":"VAL","value":"\"/vagrant/data/corpus//origtweets_light/490051479555043328.txt\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6\""},"OUT":{"type":"FILE","value":"\"\\\"/vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6//490051479555043328.xml\\\"\""}},"ruid":"7ab7d919-48c0-42f9-9f12-74c70d58a4a6","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"_CMD#2conll.STDOUT":{"type":"VAL","value":"\"\\\"\\\"\""},"IN":{"type":"FILE","value":"\"/vagrant/data/corpus//origtweets_light/490051479555043328.txt\""},"_CUR_MOD":{"type":"VAL","value":"\"stanford-parser\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples/parsing\""},"_CMD.STDERR":{"type":"VAL","value":"\"Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...  done [0.6 sec]. Parsing file: /vagrant/data/corpus//origtweets_light/490051479555043328.txt Parsing [sent. 1 len. 13]: Les #zoneshumides camarguaises au centre d'une exposition en #Chine http://t.co/EegQgeFJRJ #camargue #provence #biodiversité Parsed file: /vagrant/data/corpus//origtweets_light/490051479555043328.txt [1 sentences]. Parsed 13 words in 1 sentences (16.88 wds/sec; 1.30 sents/sec).\""},"_CMD#2conll.STDERR":{"type":"VAL","value":"\"UniversalPOSMapper: Warning - could not load Tsurgeon file from edu/stanford/nlp/models/upos/ENUniversalPOS.tsurgeon.\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"stanford-parser\""}},"processport":"42671","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"stanford-parser","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[16/12/2015 - 15:50:18] (10.0.2.2|)  => hello
[16/12/2015 - 15:50:18] (10.0.2.2|)  => /vagrant/data/results/stanford-parser/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6//490051479555043328.conll
[16/12/2015 - 15:50:18] (10.0.2.2|)  => 1	Les	_	NNP	NNP	_	2	compound	_	_
2	#zoneshumides	_	NNS	NNS	_	3	nsubj	_	_
3	camarguaises	_	VBZ	VBZ	_	0	root	_	_
4	au	_	NN	NN	_	7	compound	_	_
5	centre	_	NN	NN	_	7	compound	_	_
6	d'une	_	NN	NN	_	7	compound	_	_
7	exposition	_	NN	NN	_	3	dobj	_	_
8	en	_	IN	IN	_	13	case	_	_
9	#Chine	_	JJ	JJ	_	13	amod	_	_
10	http://t.co/EegQgeFJRJ	_	NNP	NNP	_	13	compound	_	_
11	#camargue	_	NN	NN	_	13	compound	_	_
12	#provence	_	NN	NN	_	13	compound	_	_
13	#biodiversité	_	NNS	NNS	_	7	nmod:en	_	_

1	Les-1	_	#zoneshumides-2,	#zoneshumides-2,	_	0	root	_	_

1	#zoneshumides-2	_	camarguaises-3,	camarguaises-3,	_	0	root	_	_

1	camarguaises-3	_	ROOT-0,	ROOT-0,	_	0	root	_	_

1	au-4	_	exposition-7,	exposition-7,	_	0	root	_	_

1	centre-5	_	exposition-7,	exposition-7,	_	0	root	_	_

1	d'une-6	_	exposition-7,	exposition-7,	_	0	root	_	_

1	exposition-7	_	camarguaises-3,	camarguaises-3,	_	0	root	_	_

1	en-8	_	#biodiversité-13,	#biodiversité-13,	_	0	root	_	_

1	#Chine-9	_	#biodiversité-13,	#biodiversité-13,	_	0	root	_	_

1	http://t.co/EegQgeFJRJ-10	_	#biodiversité-13,	#biodiversité-13,	_	0	root	_	_

1	#camargue-11	_	#biodiversité-13,	#biodiversité-13,	_	0	root	_	_

1	#provence-12	_	#biodiversité-13,	#biodiversité-13,	_	0	root	_	_

1	#biodiversité-13	_	exposition-7,	exposition-7,	_	0	root	_	_


[16/12/2015 - 15:58:31] (10.0.2.2|)  => hello
[16/12/2015 - 15:58:31] (10.0.2.2|)  => public/test/build/style/depgraph.css
[16/12/2015 - 15:58:31] (10.0.2.2|)  => hello
[16/12/2015 - 15:58:31] (10.0.2.2|)  => public/test/build/depgraph.js
[16/12/2015 - 15:58:32] (10.0.2.2|)  => hello
[16/12/2015 - 15:58:32] (10.0.2.2|)  => public/test/build/style/depgraph.css
[16/12/2015 - 16:3:8] (10.0.2.2|)  => hello
[16/12/2015 - 16:3:8] (10.0.2.2|)  => public/test/undefined
[18/12/2015 - 9:29:34] (10.0.2.2|)  => hello
[18/12/2015 - 9:29:34] (10.0.2.2|)  => 
[18/12/2015 - 9:29:35] (10.0.2.2|)  => hello
[18/12/2015 - 9:29:35] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 9:29:35] (10.0.2.2|)  => hello
[18/12/2015 - 9:29:35] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 9:29:35] (10.0.2.2|)  => hello
[18/12/2015 - 9:29:55] (10.0.2.2|)  => timeout
[18/12/2015 - 9:29:56] (10.0.2.2|)  => hello
[18/12/2015 - 9:29:57] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 9:29:57] (10.0.2.2|)  => hello
[18/12/2015 - 9:29:58] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 9:29:58] (10.0.2.2|)  => hello
[18/12/2015 - 9:29:58] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 9:33:58] (10.0.2.2|)  => hello
[18/12/2015 - 9:33:58] (10.0.2.2|)  => public/doc/slides/css/theme/league.css
[18/12/2015 - 9:34:0] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:0] (10.0.2.2|)  => public/doc/slides/css/theme/sky.css
[18/12/2015 - 9:34:1] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:1] (10.0.2.2|)  => public/doc/slides/css/theme/white.css
[18/12/2015 - 9:34:2] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:2] (10.0.2.2|)  => public/doc/slides/css/theme/league.css
[18/12/2015 - 9:34:4] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:4] (10.0.2.2|)  => public/doc/slides/css/theme/black.css
[18/12/2015 - 9:34:6] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:6] (10.0.2.2|)  => public/doc/slides/css/theme/serif.css
[18/12/2015 - 9:34:9] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:9] (10.0.2.2|)  => 
[18/12/2015 - 9:34:10] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:10] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 9:34:10] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:10] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 9:34:11] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:11] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 9:34:11] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:11] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 9:34:11] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:21] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 9:34:21] (10.0.2.2|)  => hello
[18/12/2015 - 9:34:21] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 9:36:29] (10.0.2.2|)  => hello
[18/12/2015 - 9:36:29] (10.0.2.2|)  => 
[18/12/2015 - 9:36:30] (10.0.2.2|)  => hello
[18/12/2015 - 9:36:30] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 9:36:31] (10.0.2.2|)  => hello
[18/12/2015 - 9:36:31] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 9:36:31] (10.0.2.2|)  => hello
[18/12/2015 - 9:36:31] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 9:36:31] (10.0.2.2|)  => hello
[18/12/2015 - 9:36:41] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 9:36:41] (10.0.2.2|)  => hello
[18/12/2015 - 9:36:41] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 9:36:41] (10.0.2.2|)  => hello
[18/12/2015 - 9:36:41] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 9:49:1] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:1] (10.0.2.2|)  => 
[18/12/2015 - 9:49:1] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:1] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 9:49:1] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:1] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 9:49:2] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:2] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 9:49:2] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:12] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 9:49:12] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:12] (10.0.2.2|)  => 
[18/12/2015 - 9:49:12] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:12] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 9:49:12] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:12] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 9:49:13] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:13] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 9:49:13] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:13] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 9:49:14] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:14] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 9:49:14] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:14] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 9:49:14] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:21] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 9:49:21] (10.0.2.2|)  => hello
[18/12/2015 - 9:49:21] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 9:58:27] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:27] (10.0.2.2|)  => 
[18/12/2015 - 9:58:28] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:28] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 9:58:28] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:28] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 9:58:28] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:28] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 9:58:28] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:28] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 9:58:28] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:28] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 9:58:28] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:38] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 9:58:44] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:44] (10.0.2.2|)  => 
[18/12/2015 - 9:58:44] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:44] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 9:58:44] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:44] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 9:58:44] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:45] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 9:58:45] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:45] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 9:58:45] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:52] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 9:58:52] (10.0.2.2|)  => hello
[18/12/2015 - 9:58:52] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 10:12:30] (10.0.2.2|)  => hello
[18/12/2015 - 10:12:30] (10.0.2.2|)  => 
[18/12/2015 - 10:12:30] (10.0.2.2|)  => hello
[18/12/2015 - 10:12:30] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 10:12:30] (10.0.2.2|)  => hello
[18/12/2015 - 10:12:30] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 10:12:31] (10.0.2.2|)  => hello
[18/12/2015 - 10:12:31] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 10:12:31] (10.0.2.2|)  => hello
[18/12/2015 - 10:12:31] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 10:12:31] (10.0.2.2|)  => hello
[18/12/2015 - 10:12:40] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 10:12:40] (10.0.2.2|)  => hello
[18/12/2015 - 10:12:40] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 10:19:55] (10.0.2.2|)  => hello
[18/12/2015 - 10:19:55] (10.0.2.2|)  => 
[18/12/2015 - 10:19:55] (10.0.2.2|)  => hello
[18/12/2015 - 10:19:55] (10.0.2.2|)  => 
[18/12/2015 - 10:19:56] (10.0.2.2|)  => hello
[18/12/2015 - 10:19:56] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 10:19:56] (10.0.2.2|)  => hello
[18/12/2015 - 10:20:5] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 10:20:5] (10.0.2.2|)  => hello
[18/12/2015 - 10:20:5] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 10:20:5] (10.0.2.2|)  => hello
[18/12/2015 - 10:20:5] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 13:39:27] (10.0.2.2|)  => hello
[18/12/2015 - 13:39:27] (10.0.2.2|)  => 
[18/12/2015 - 13:39:28] (10.0.2.2|)  => hello
[18/12/2015 - 13:39:28] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 13:39:28] (10.0.2.2|)  => hello
[18/12/2015 - 13:39:48] (10.0.2.2|)  => timeout
[18/12/2015 - 13:39:48] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:3] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 13:40:3] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:3] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 13:40:3] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:3] (10.0.2.2|)  => 
[18/12/2015 - 13:40:4] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:4] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 13:40:4] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:4] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 13:40:4] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:4] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 13:40:4] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:17] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 13:40:23] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:40] (10.0.2.2|)  => ok
[18/12/2015 - 13:40:47] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:47] (10.0.2.2|)  => 
[18/12/2015 - 13:40:48] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:48] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 13:40:48] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:48] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  _CMD :\n    input :\n      DOCKEFILE : true\n      CMD : >\n        php produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 13:40:48] (10.0.2.2|)  => hello
[18/12/2015 - 13:40:48] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 13:40:48] (10.0.2.2|)  => hello
[18/12/2015 - 13:41:0] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 13:41:49] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:6] (10.0.2.2|)  => ok
[18/12/2015 - 13:42:6] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:6] (10.0.2.2|)  => 
[18/12/2015 - 13:42:7] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:7] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"php produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKEFILE : true\n        CMD : >\n          php produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 13:42:7] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:19] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 13:42:19] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:19] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6

[18/12/2015 - 13:42:19] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:19] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 13:42:41] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:41] (10.0.2.2|)  => ae8cadc3-731d-4306-815e-e836a8765917
[18/12/2015 - 13:42:41] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:41] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:42:41.277","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"undefined//run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-ae8cadc3-731d-4306-815e-e836a8765917"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"undefined//run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-ae8cadc3-731d-4306-815e-e836a8765917"}},"ruid":"ae8cadc3-731d-4306-815e-e836a8765917","parentProcess":"None","env":"","processport":"9997","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"4578","completeddate":"","status":"Running"}
[18/12/2015 - 13:42:50] (10.0.2.2|)  => hello
[18/12/2015 - 13:42:50] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:42:41.277","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"undefined//run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-ae8cadc3-731d-4306-815e-e836a8765917"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"undefined//run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-ae8cadc3-731d-4306-815e-e836a8765917"}},"ruid":"ae8cadc3-731d-4306-815e-e836a8765917","parentProcess":"None","env":"","processport":"9997","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"4578","completeddate":"","status":"Running"}
[18/12/2015 - 13:43:17] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:17] (10.0.2.2|)  => 9835069e-2aa1-490a-b365-09dfc58c0a2f
[18/12/2015 - 13:43:17] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:17] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:17.589","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"ruid":"9835069e-2aa1-490a-b365-09dfc58c0a2f","parentProcess":"None","env":"","processport":"16290","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"51662","completeddate":"","status":"Running"}
[18/12/2015 - 13:43:19] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:19] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:17.589","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"ruid":"9835069e-2aa1-490a-b365-09dfc58c0a2f","parentProcess":"None","env":"","processport":"16290","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"51662","completeddate":"","status":"Running"}
[18/12/2015 - 13:43:21] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:21] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:17.589","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"ruid":"9835069e-2aa1-490a-b365-09dfc58c0a2f","parentProcess":"None","env":"","processport":"16290","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"51662","completeddate":"","status":"Running"}
[18/12/2015 - 13:43:22] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:22] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:17.589","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"ruid":"9835069e-2aa1-490a-b365-09dfc58c0a2f","parentProcess":"None","env":"","processport":"16290","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"51662","completeddate":"","status":"Running"}
[18/12/2015 - 13:43:22] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:22] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:17.589","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"SOURCE":{"type":"VAL","value":"conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-9835069e-2aa1-490a-b365-09dfc58c0a2f"}},"ruid":"9835069e-2aa1-490a-b365-09dfc58c0a2f","parentProcess":"None","env":"","processport":"16290","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"51662","completeddate":"","status":"Running"}
[18/12/2015 - 13:43:50] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:50] (10.0.2.2|)  => 80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b
[18/12/2015 - 13:43:50] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:50] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:50.028","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b"}},"ruid":"80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b","parentProcess":"None","env":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"FILE","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_CUR_MOD":{"type":"VAL","value":"depgraph-viewer@buiquang"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/views/depgraph"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b/\""},"_MOD_CONTEXT":{"type":"VAL","value":"depgraph-viewer@buiquang"}},"processport":"33623","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"25472","completeddate":"","status":"Running"}
[18/12/2015 - 13:43:57] (10.0.2.2|)  => hello
[18/12/2015 - 13:43:57] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:50.028","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"\\\"${CMD.STDOUT}\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b\""}},"ruid":"80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"PHP Notice:  Use of undefined constant json_data - assumed 'json_data' in /vagrant/modules/addons/views/depgraph/produceGraph.php on line 12\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"49935","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 13:45:23] (10.0.2.2|)  => hello
[18/12/2015 - 13:45:41] (10.0.2.2|)  => ok
[18/12/2015 - 13:45:45] (10.0.2.2|)  => hello
[18/12/2015 - 13:45:45] (10.0.2.2|)  => 388d7126-b453-4dfc-abf0-bfd577d20d8a
[18/12/2015 - 13:45:46] (10.0.2.2|)  => hello
[18/12/2015 - 13:45:46] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:45:45.985","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-388d7126-b453-4dfc-abf0-bfd577d20d8a"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-388d7126-b453-4dfc-abf0-bfd577d20d8a"}},"ruid":"388d7126-b453-4dfc-abf0-bfd577d20d8a","parentProcess":"None","env":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"FILE","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_CUR_MOD":{"type":"VAL","value":"depgraph-viewer@buiquang"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/views/depgraph"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-388d7126-b453-4dfc-abf0-bfd577d20d8a/\""},"_MOD_CONTEXT":{"type":"VAL","value":"depgraph-viewer@buiquang"}},"processport":"53853","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"49809","completeddate":"","status":"Running"}
[18/12/2015 - 13:46:57] (10.0.2.2|)  => hello
[18/12/2015 - 13:46:57] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:45:45.985","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-388d7126-b453-4dfc-abf0-bfd577d20d8a\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"\\\"\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-388d7126-b453-4dfc-abf0-bfd577d20d8a\""}},"ruid":"388d7126-b453-4dfc-abf0-bfd577d20d8a","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"Could not open input file: produceGraph.php\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-388d7126-b453-4dfc-abf0-bfd577d20d8a/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"20862","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(error when running : _CMD failed with exit value error when running : _CMD failed with exit value 1)"}
[18/12/2015 - 13:51:0] (10.0.2.2|)  => hello
[18/12/2015 - 13:51:1] (10.0.2.2|)  => 63ed1678-d757-4ab4-9c90-b8679ad90696
[18/12/2015 - 13:51:1] (10.0.2.2|)  => hello
[18/12/2015 - 13:51:2] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:51:01.636","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-63ed1678-d757-4ab4-9c90-b8679ad90696"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-63ed1678-d757-4ab4-9c90-b8679ad90696"}},"ruid":"63ed1678-d757-4ab4-9c90-b8679ad90696","parentProcess":"None","env":"","processport":"58876","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"17358","completeddate":"","status":"Running"}
[18/12/2015 - 13:51:18] (10.0.2.2|)  => hello
[18/12/2015 - 13:51:18] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:51:01.636","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-63ed1678-d757-4ab4-9c90-b8679ad90696"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-63ed1678-d757-4ab4-9c90-b8679ad90696"}},"ruid":"63ed1678-d757-4ab4-9c90-b8679ad90696","parentProcess":"None","env":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"FILE","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_CUR_MOD":{"type":"VAL","value":"depgraph-viewer@buiquang"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/views/depgraph"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-63ed1678-d757-4ab4-9c90-b8679ad90696/\""},"_MOD_CONTEXT":{"type":"VAL","value":"depgraph-viewer@buiquang"}},"processport":"58876","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"17358","completeddate":"","status":"Running"}
[18/12/2015 - 13:52:9] (10.0.2.2|)  => hello
[18/12/2015 - 13:52:10] (10.0.2.2|)  => 55488161-fde7-4f4e-ad52-195ab3372b87
[18/12/2015 - 13:52:10] (10.0.2.2|)  => hello
[18/12/2015 - 13:52:10] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:52:10.154","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87"}},"ruid":"55488161-fde7-4f4e-ad52-195ab3372b87","parentProcess":"None","env":"","processport":"48321","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"21638","completeddate":"","status":"Running"}
[18/12/2015 - 13:52:17] (10.0.2.2|)  => hello
[18/12/2015 - 13:52:17] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:52:10.154","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"\\\"\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87\""}},"ruid":"55488161-fde7-4f4e-ad52-195ab3372b87","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"3534","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 13:54:36] (10.0.2.2|)  => hello
[18/12/2015 - 13:54:37] (10.0.2.2|)  => cc0221f3-e0f4-4080-a342-0d43cec80f52
[18/12/2015 - 13:54:37] (10.0.2.2|)  => hello
[18/12/2015 - 13:54:37] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:54:36.962","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52"}},"ruid":"cc0221f3-e0f4-4080-a342-0d43cec80f52","parentProcess":"None","env":"","processport":"54613","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"59940","completeddate":"","status":"Running"}
[18/12/2015 - 13:54:39] (10.0.2.2|)  => hello
[18/12/2015 - 13:54:39] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:54:36.962","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52"}},"ruid":"cc0221f3-e0f4-4080-a342-0d43cec80f52","parentProcess":"None","env":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"FILE","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_CUR_MOD":{"type":"VAL","value":"depgraph-viewer@buiquang"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/views/depgraph"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52/\""},"_MOD_CONTEXT":{"type":"VAL","value":"depgraph-viewer@buiquang"}},"processport":"54613","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"59940","completeddate":"","status":"Running"}
[18/12/2015 - 13:54:42] (10.0.2.2|)  => hello
[18/12/2015 - 13:54:42] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:54:36.962","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52"}},"parentEnv":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"VAL","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52"}},"ruid":"cc0221f3-e0f4-4080-a342-0d43cec80f52","parentProcess":"None","env":{"FORMAT":{"type":"VAL","value":"conll"},"SOURCE":{"type":"FILE","value":"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll"},"_CUR_MOD":{"type":"VAL","value":"depgraph-viewer@buiquang"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/addons/views/depgraph"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52/\""},"_MOD_CONTEXT":{"type":"VAL","value":"depgraph-viewer@buiquang"}},"processport":"54613","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"depgraph-viewer@buiquang","parentport":"59940","completeddate":"","status":"Running"}
[18/12/2015 - 13:55:7] (10.0.2.2|)  => hello
[18/12/2015 - 13:55:7] (10.0.2.2|)  => Error :expected '<document start>', but found Scalar
 in 'string', line 1, column 15:
    "\"<div id=\\"graph-container\\"></div>
                  ^

[18/12/2015 - 13:56:5] (10.0.2.2|)  => hello
[18/12/2015 - 13:56:6] (10.0.2.2|)  => Error :Invalid UUID string: 
[18/12/2015 - 13:56:10] (10.0.2.2|)  => hello
[18/12/2015 - 13:56:10] (10.0.2.2|)  => Error :expected '<document start>', but found Scalar
 in 'string', line 1, column 15:
    "\"<div id=\\"graph-container\\"></div>
                  ^

[18/12/2015 - 13:57:13] (10.0.2.2|)  => hello
[18/12/2015 - 13:57:13] (10.0.2.2|)  => Error :expected '<document start>', but found Scalar
 in 'string', line 1, column 15:
    "\"<div id=\\"graph-container\\"></div>
                  ^

[18/12/2015 - 13:57:28] (10.0.2.2|)  => hello
[18/12/2015 - 13:57:28] (10.0.2.2|)  => Error :expected '<document start>', but found Scalar
 in 'string', line 1, column 15:
    "\"<div id=\\"graph-container\\"></div>
                  ^

[18/12/2015 - 13:58:23] (10.0.2.2|)  => hello
[18/12/2015 - 13:58:23] (10.0.2.2|)  => Error :expected '<document start>', but found Scalar
 in 'string', line 1, column 15:
    "\"<div id=\\"graph-container\\"></div>
                  ^

[18/12/2015 - 14:2:18] (10.0.2.2|)  => hello
[18/12/2015 - 14:2:18] (10.0.2.2|)  => cfc2b399-118f-4bfc-8842-1e21b0ae0ef3
[18/12/2015 - 14:2:18] (10.0.2.2|)  => hello
[18/12/2015 - 14:2:18] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":"","parentEnv":"","ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":"","processport":"32358","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Waiting"}
[18/12/2015 - 14:2:27] (10.0.2.2|)  => hello
[18/12/2015 - 14:2:27] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"24707","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:3:33] (10.0.2.2|)  => hello
[18/12/2015 - 14:3:33] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"4170","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:3:34] (10.0.2.2|)  => hello
[18/12/2015 - 14:3:34] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"64406","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:3:34] (10.0.2.2|)  => hello
[18/12/2015 - 14:3:34] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"39184","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:3:43] (10.0.2.2|)  => hello
[18/12/2015 - 14:3:43] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"8836","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:4:16] (10.0.2.2|)  => hello
[18/12/2015 - 14:4:16] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 14:4:16] (10.0.2.2|)  => hello
[18/12/2015 - 14:4:16] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 14:28:49] (10.0.2.2|)  => hello
[18/12/2015 - 14:28:49] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:54:36.962","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52\""}},"ruid":"cc0221f3-e0f4-4080-a342-0d43cec80f52","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"60276","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:29:10] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:10] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"59491","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:29:44] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:44] (10.0.2.2|)  => 
[18/12/2015 - 14:29:45] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:45] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 14:29:45] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:45] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 14:29:45] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:45] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 14:29:45] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:45] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6
depgraph-viewer@buiquang : ae8cadc3-731d-4306-815e-e836a8765917
depgraph-viewer@buiquang : 9835069e-2aa1-490a-b365-09dfc58c0a2f
depgraph-viewer@buiquang : 80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b
depgraph-viewer@buiquang : 388d7126-b453-4dfc-abf0-bfd577d20d8a
depgraph-viewer@buiquang : 63ed1678-d757-4ab4-9c90-b8679ad90696
depgraph-viewer@buiquang : 55488161-fde7-4f4e-ad52-195ab3372b87
depgraph-viewer@buiquang : cc0221f3-e0f4-4080-a342-0d43cec80f52
depgraph-viewer@buiquang : cfc2b399-118f-4bfc-8842-1e21b0ae0ef3

[18/12/2015 - 14:29:45] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:57] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 14:29:57] (10.0.2.2|)  => hello
[18/12/2015 - 14:29:57] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 14:32:42] (10.0.2.2|)  => hello
[18/12/2015 - 14:32:42] (10.0.2.2|)  => Error :can't parse serialized environnment ()
[18/12/2015 - 14:32:50] (10.0.2.2|)  => hello
[18/12/2015 - 14:32:50] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:43:50.028","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"\\\"${CMD.STDOUT}\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b\""}},"ruid":"80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"PHP Notice:  Use of undefined constant json_data - assumed 'json_data' in /vagrant/modules/addons/views/depgraph/produceGraph.php on line 12\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"50091","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:32:53] (10.0.2.2|)  => hello
[18/12/2015 - 14:32:53] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:52:10.154","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"\\\"\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87\""}},"ruid":"55488161-fde7-4f4e-ad52-195ab3372b87","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"29702","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:32:56] (10.0.2.2|)  => hello
[18/12/2015 - 14:32:56] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:54:36.962","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52\""}},"ruid":"cc0221f3-e0f4-4080-a342-0d43cec80f52","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\/\\/t.co\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cc0221f3-e0f4-4080-a342-0d43cec80f52/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"31140","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:33:0] (10.0.2.2|)  => hello
[18/12/2015 - 14:33:0] (10.0.2.2|)  => {"creationdate":"2015-12-18T14:02:18.611","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversitu00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"http://t.co/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversitu00e9-13,\\\",\\\"pos\\\":\\\"#biodiversitu00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversitu00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversitu00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversitu00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3\""}},"ruid":"cfc2b399-118f-4bfc-8842-1e21b0ae0ef3","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"<div id=\\\"graph-container\\\"><\/div> <script> var json_data = {\\\"graph\\\":{\\\"words\\\":[{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"Les\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"2\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#zoneshumides\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"3\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"VBZ\\\",\\\"pos\\\":\\\"VBZ\\\"},\\\"label\\\":\\\"camarguaises\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"VBZ\\\"]},{\\\"id\\\":\\\"4\\\",\\\"#data\\\":{\\\"token\\\":\\\"au\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"au\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"5\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"centre\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"6\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"d'une\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"7\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"exposition\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"8\\\",\\\"#data\\\":{\\\"token\\\":\\\"en\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"IN\\\",\\\"pos\\\":\\\"IN\\\"},\\\"label\\\":\\\"en\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"IN\\\"]},{\\\"id\\\":\\\"9\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"JJ\\\",\\\"pos\\\":\\\"JJ\\\"},\\\"label\\\":\\\"#Chine\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"JJ\\\"]},{\\\"id\\\":\\\"10\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNP\\\",\\\"pos\\\":\\\"NNP\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNP\\\"]},{\\\"id\\\":\\\"11\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#camargue\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"12\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NN\\\",\\\"pos\\\":\\\"NN\\\"},\\\"label\\\":\\\"#provence\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NN\\\"]},{\\\"id\\\":\\\"13\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"NNS\\\",\\\"pos\\\":\\\"NNS\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"NNS\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"Les-1\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#zoneshumides-2,\\\",\\\"pos\\\":\\\"#zoneshumides-2,\\\"},\\\"label\\\":\\\"Les-1\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#zoneshumides-2,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#zoneshumides-2\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"#zoneshumides-2\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"camarguaises-3\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"ROOT-0,\\\",\\\"pos\\\":\\\"ROOT-0,\\\"},\\\"label\\\":\\\"camarguaises-3\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"ROOT-0,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"au-4\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"au-4\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"centre-5\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"centre-5\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"d'une-6\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"d'une-6\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"exposition-7\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"camarguaises-3,\\\",\\\"pos\\\":\\\"camarguaises-3,\\\"},\\\"label\\\":\\\"exposition-7\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"camarguaises-3,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"en-8\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"en-8\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#Chine-9\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#Chine-9\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"http:\\\\/\\\\/t.co\\\\/EegQgeFJRJ-10\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#camargue-11\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#camargue-11\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#provence-12\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"#biodiversit\\\\u00e9-13,\\\",\\\"pos\\\":\\\"#biodiversit\\\\u00e9-13,\\\"},\\\"label\\\":\\\"#provence-12\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"#biodiversit\\\\u00e9-13,\\\"]},{\\\"id\\\":\\\"1\\\",\\\"#data\\\":{\\\"token\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"lemma\\\":\\\"_\\\",\\\"cpos\\\":\\\"exposition-7,\\\",\\\"pos\\\":\\\"exposition-7,\\\"},\\\"label\\\":\\\"#biodiversit\\\\u00e9-13\\\",\\\"sublabel\\\":[\\\"_\\\",\\\"exposition-7,\\\"]}],\\\"links\\\":[{\\\"source\\\":\\\"2\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"2\\\",\\\"label\\\":\\\"nsubj\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"3\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"4\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"5\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"6\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"3\\\",\\\"target\\\":\\\"7\\\",\\\"label\\\":\\\"dobj\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"8\\\",\\\"label\\\":\\\"case\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"9\\\",\\\"label\\\":\\\"amod\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"10\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"11\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"13\\\",\\\"target\\\":\\\"12\\\",\\\"label\\\":\\\"compound\\\"},{\\\"source\\\":\\\"7\\\",\\\"target\\\":\\\"13\\\",\\\"label\\\":\\\"nmod:en\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"},{\\\"source\\\":\\\"0\\\",\\\"target\\\":\\\"1\\\",\\\"label\\\":\\\"root\\\"}],\\\"chunks\\\":[]}}; var depGraph = new depgraphlib.DepGraph(jQuery(\\\"#graph-container\\\"),json_data); <\/script>\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-cfc2b399-118f-4bfc-8842-1e21b0ae0ef3/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"15708","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 14:33:2] (10.0.2.2|)  => hello
[18/12/2015 - 14:33:2] (10.0.2.2|)  => Error :can't parse serialized environnment ()
[18/12/2015 - 14:33:18] (10.0.2.2|)  => hello
[18/12/2015 - 14:33:18] (10.0.2.2|)  => Error :can't parse serialized environnment ()
[18/12/2015 - 14:35:45] (10.0.2.2|)  => hello
[18/12/2015 - 14:35:45] (10.0.2.2|)  => {"creationdate":"2015-12-18T13:52:10.154","def":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module","runconf":{"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"\\\"/vagrant/modules/addons/views/depgraph\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87\""}},"parentEnv":{"CSS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","/vagrant/modules/addons/views/depgraph/build/style/depgraph.css"]},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"VAL","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"JS":{"type":"FILE*","value":["/vagrant/modules/addons/views/depgraph/src/js/vendor/colorbox/jquery.colorbox-min.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","/vagrant/modules/addons/views/depgraph/src/js/vendor/d3.v2.js","/vagrant/modules/addons/views/depgraph/build/depgraph.js"]},"HTML":{"type":"VAL","value":"\"\\\"\\\"\""},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87\""}},"ruid":"55488161-fde7-4f4e-ad52-195ab3372b87","parentProcess":"None","env":{"_CMD.STDOUT":{"type":"VAL","value":"\"\""},"FORMAT":{"type":"VAL","value":"\"conll\""},"SOURCE":{"type":"FILE","value":"\"/vagrant/data/corpus/run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6/490051479555043328.conll\""},"_CUR_MOD":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""},"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/addons/views/depgraph\""},"_CMD.STDERR":{"type":"VAL","value":"\"\""},"_RUN_DIR":{"type":"DIR","value":"\"\\\"/vagrant/data/results/depgraph-viewer@buiquang/run-55488161-fde7-4f4e-ad52-195ab3372b87/\\\"\""},"_MOD_CONTEXT":{"type":"VAL","value":"\"depgraph-viewer@buiquang\""}},"processport":"44452","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","name":"depgraph-viewer@buiquang","parentport":"NONE","completeddate":"","status":"Exited(0)"}
[18/12/2015 - 15:2:7] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:7] (10.0.2.2|)  => 
[18/12/2015 - 15:2:7] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:7] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 15:2:7] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:7] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 15:2:8] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:8] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 15:2:8] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:17] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 15:2:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:17] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6
depgraph-viewer@buiquang : ae8cadc3-731d-4306-815e-e836a8765917
depgraph-viewer@buiquang : 9835069e-2aa1-490a-b365-09dfc58c0a2f
depgraph-viewer@buiquang : 80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b
depgraph-viewer@buiquang : 388d7126-b453-4dfc-abf0-bfd577d20d8a
depgraph-viewer@buiquang : 63ed1678-d757-4ab4-9c90-b8679ad90696
depgraph-viewer@buiquang : 55488161-fde7-4f4e-ad52-195ab3372b87
depgraph-viewer@buiquang : cc0221f3-e0f4-4080-a342-0d43cec80f52
depgraph-viewer@buiquang : cfc2b399-118f-4bfc-8842-1e21b0ae0ef3

[18/12/2015 - 15:2:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:17] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 15:2:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:17] (10.0.2.2|)  => 
[18/12/2015 - 15:2:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:17] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 15:2:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:17] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 15:2:18] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:18] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 15:2:18] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:18] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 15:2:18] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:27] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 15:2:27] (10.0.2.2|)  => hello
[18/12/2015 - 15:2:27] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6
depgraph-viewer@buiquang : ae8cadc3-731d-4306-815e-e836a8765917
depgraph-viewer@buiquang : 9835069e-2aa1-490a-b365-09dfc58c0a2f
depgraph-viewer@buiquang : 80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b
depgraph-viewer@buiquang : 388d7126-b453-4dfc-abf0-bfd577d20d8a
depgraph-viewer@buiquang : 63ed1678-d757-4ab4-9c90-b8679ad90696
depgraph-viewer@buiquang : 55488161-fde7-4f4e-ad52-195ab3372b87
depgraph-viewer@buiquang : cc0221f3-e0f4-4080-a342-0d43cec80f52
depgraph-viewer@buiquang : cfc2b399-118f-4bfc-8842-1e21b0ae0ef3

[18/12/2015 - 15:4:37] (10.0.2.2|)  => hello
[18/12/2015 - 15:4:37] (10.0.2.2|)  => 
[18/12/2015 - 15:4:37] (10.0.2.2|)  => hello
[18/12/2015 - 15:4:37] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 15:4:37] (10.0.2.2|)  => hello
[18/12/2015 - 15:4:37] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 15:4:38] (10.0.2.2|)  => hello
[18/12/2015 - 15:4:38] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 15:4:38] (10.0.2.2|)  => hello
[18/12/2015 - 15:4:38] (10.0.2.2|)  => stanford-core-nlp : 3fd8ef7d-7ca4-469b-a61f-3c0291cc1a91
stanford-core-nlp : f3d94ae2-7aff-4dc7-b5b6-08d2dfec3c7e
stanford-core-nlp : 75cc397b-a088-436d-8874-345dbb0dbc65
stanford-parser : 11576218-a347-40e8-8471-a2ba7a3c30c3
stanford-parser : 7ab7d919-48c0-42f9-9f12-74c70d58a4a6
depgraph-viewer@buiquang : ae8cadc3-731d-4306-815e-e836a8765917
depgraph-viewer@buiquang : 9835069e-2aa1-490a-b365-09dfc58c0a2f
depgraph-viewer@buiquang : 80b2d6b1-4e93-4470-ac9c-3fdb077d7a7b
depgraph-viewer@buiquang : 388d7126-b453-4dfc-abf0-bfd577d20d8a
depgraph-viewer@buiquang : 63ed1678-d757-4ab4-9c90-b8679ad90696
depgraph-viewer@buiquang : 55488161-fde7-4f4e-ad52-195ab3372b87
depgraph-viewer@buiquang : cc0221f3-e0f4-4080-a342-0d43cec80f52
depgraph-viewer@buiquang : cfc2b399-118f-4bfc-8842-1e21b0ae0ef3

[18/12/2015 - 15:4:38] (10.0.2.2|)  => hello
[18/12/2015 - 15:4:38] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 15:4:38] (10.0.2.2|)  => hello
[18/12/2015 - 15:4:51] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 15:21:56] (10.0.2.2|)  => hello
[18/12/2015 - 15:21:56] (10.0.2.2|)  => 
[18/12/2015 - 15:21:57] (10.0.2.2|)  => hello
[18/12/2015 - 15:21:57] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 15:21:57] (10.0.2.2|)  => hello
[18/12/2015 - 15:21:57] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 15:21:57] (10.0.2.2|)  => hello
[18/12/2015 - 15:22:9] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 15:22:9] (10.0.2.2|)  => hello
[18/12/2015 - 15:22:9] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 15:22:9] (10.0.2.2|)  => hello
[18/12/2015 - 15:22:19] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 15:22:19] (10.0.2.2|)  => hello
[18/12/2015 - 15:22:20] (10.0.2.2|)  => 
[18/12/2015 - 15:45:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:45:17] (10.0.2.2|)  => 
[18/12/2015 - 15:45:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:45:17] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 15:45:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:45:17] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 15:45:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:45:17] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 15:45:17] (10.0.2.2|)  => hello
[18/12/2015 - 15:45:18] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 15:45:18] (10.0.2.2|)  => hello
[18/12/2015 - 15:45:18] (10.0.2.2|)  => 
[18/12/2015 - 15:45:18] (10.0.2.2|)  => hello
[18/12/2015 - 15:45:31] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 15:46:0] (10.0.2.2|)  => hello
[18/12/2015 - 15:46:0] (10.0.2.2|)  => 
[18/12/2015 - 15:46:1] (10.0.2.2|)  => hello
[18/12/2015 - 15:46:1] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 15:46:1] (10.0.2.2|)  => hello
[18/12/2015 - 15:46:1] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 15:46:1] (10.0.2.2|)  => hello
[18/12/2015 - 15:46:1] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 15:46:1] (10.0.2.2|)  => hello
[18/12/2015 - 15:46:1] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VOID":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : $_DEF_DIR/foo.sh ${_:basename} $_RUN_DIR/${_:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 15:46:1] (10.0.2.2|)  => hello
[18/12/2015 - 15:46:1] (10.0.2.2|)  => 
[18/12/2015 - 15:46:1] (10.0.2.2|)  => hello
[18/12/2015 - 15:46:11] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 15:52:54] (10.0.2.2|)  => hello
[18/12/2015 - 15:52:54] (10.0.2.2|)  => 
[18/12/2015 - 15:52:55] (10.0.2.2|)  => hello
[18/12/2015 - 15:52:55] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 15:52:55] (10.0.2.2|)  => hello
[18/12/2015 - 15:52:55] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 15:52:56] (10.0.2.2|)  => hello
[18/12/2015 - 15:53:16] (10.0.2.2|)  => timeout
[18/12/2015 - 15:53:16] (10.0.2.2|)  => hello
[18/12/2015 - 15:53:34] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 15:53:34] (10.0.2.2|)  => hello
[18/12/2015 - 15:53:35] (10.0.2.2|)  => 
[18/12/2015 - 15:53:35] (10.0.2.2|)  => hello
[18/12/2015 - 15:53:35] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  OUT : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n  VIEWS :\n    type : VAL*\n    value : ${_MAP.depgraph-viewer@buiquang.HTML}\n  MERGED :\n    type : FILE\n    value : $_RUN_DIR/merged.conll\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - depgraph-viewer@buiquang :\n              input :\n                SOURCE : ${stanford-parser.CONLL}\n                FORMAT : conll\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.CONLL} > $_RUN_DIR/merged.conll","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 15:53:46] (10.0.2.2|)  => hello
[18/12/2015 - 15:54:1] (10.0.2.2|)  => ok
[18/12/2015 - 16:44:55] (10.0.2.2|)  => hello
[18/12/2015 - 16:44:55] (10.0.2.2|)  => 
[18/12/2015 - 16:44:56] (10.0.2.2|)  => hello
[18/12/2015 - 16:44:56] (10.0.2.2|)  => public/js/vendor/underscore-min.map
[18/12/2015 - 16:44:56] (10.0.2.2|)  => hello
[18/12/2015 - 16:44:56] (10.0.2.2|)  => public/js/vendor/backbone-min.map
[18/12/2015 - 16:44:56] (10.0.2.2|)  => hello
[18/12/2015 - 16:44:56] (10.0.2.2|)  => {"result_dir":"/vagrant/data/results","corpus_dir":"/vagrant/data/corpus","modules":[{"exist":false,"name":"/home/paul/projects/custom/cpm/examples/modules"},{"exist":false,"name":"/home/paul/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/modules"},{"exist":false,"name":"/people/buiquang/projects/custom/cpm/examples/modules"},{"exist":true,"name":"/vagrant/modules"},{"exist":false,"name":"/vagrant/examples/modules"}]}
[18/12/2015 - 16:44:56] (10.0.2.2|)  => hello
[18/12/2015 - 16:44:56] (10.0.2.2|)  => {"folder":true,"foldername":"/","items":[{"folder":true,"foldername":"/vagrant","items":[{"folder":true,"foldername":"modules","items":[{"folder":true,"foldername":"examples","items":[{"folder":true,"foldername":"tweetparse@jose","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/tweets.json"}},"input":{"IN":{"type":"FILE"}},"name":"tweetparse@jose","exec":[{"_CMD":{"input":{"DOCKERFILE":"$_DEF_DIR/Dockerfile","CONTAINED":"false","CMD":"python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json"}}}],"desc":"crawl some tweets"},"modulename":"tweetparse@jose","source":"\nname : tweetparse@jose\n\ndesc : >\n  crawl some tweets\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  OUT : \n    type : FILE\n    value : $_RUN_DIR/tweets.json\n\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : >\n          python $_DEF_DIR/twitter-crawler_copy/getTwitterIds.py $IN > $_RUN_DIR/tweets.json\n    ","sourcepath":"/vagrant/modules/examples/tweetparse@jose/tweetparse@jose.module"}]},{"module":{"output":{"VIEWS":{"type":"VAL*","value":["${_MAP.depgraph-viewer@buiquang.HTML}"]},"MERGED":{"type":"FILE","value":"$_RUN_DIR/merged.conll"},"OUT":{"type":"FILE*","value":["${_MAP.stanford-parser.OUT}"]}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test","exec":[{"_MAP":{"input":{"REGEX":".*?\\.txt","IN":"$CORPUS","RUN":[{"stanford-parser":{"input":{"IN":"$_"}}},{"depgraph-viewer@buiquang":{"input":{"FORMAT":"conll","SOURCE":"${stanford-parser.CONLL}"}}}],"CHUNK_SIZE":"20"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.stanford-parser.CONLL} > $_RUN_DIR/merged.conll"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test","source":"\nname : pipeline-test\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  OUT : \n    type : FILE*\n    value : ${_MAP.stanford-parser.OUT}\n  VIEWS :\n    type : VAL*\n    value : ${_MAP.depgraph-viewer@buiquang.HTML}\n  MERGED :\n    type : FILE\n    value : $_RUN_DIR/merged.conll\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        REGEX : .*?\\.txt\n        CHUNK_SIZE : 20\n        RUN :\n          - stanford-parser :\n              input :\n                IN : $_\n          - depgraph-viewer@buiquang :\n              input :\n                SOURCE : ${stanford-parser.CONLL}\n                FORMAT : conll\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.stanford-parser.CONLL} > $_RUN_DIR/merged.conll","sourcepath":"/vagrant/modules/examples/pipeline-test.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"${_MAP.corenlp-server.OUT}"}},"input":{"CORPUS":{"type":"DIR"}},"name":"pipeline-test2","exec":[{"_MAP":{"input":{"REGEX":".*","IN":"$CORPUS","RUN":[{"corenlp-server":{"input":{"IN":"$_"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt"}}},{"foo":{"input":{"IN":"$_"}}}],"CHUNK_SIZE":"10"}}},{"_CMD#merge":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test2","source":"\nname : pipeline-test2\n\ndesc : >\n  test de pipeline\n\ninput :\n  CORPUS : \n    type : DIR\n\noutput :\n  VOID : \n    type : VAL\n    value : ${_MAP.corenlp-server.OUT}\n\n\nexec :\n  - _MAP :\n      input :\n        IN : $CORPUS\n        RUN :\n          - corenlp-server :\n              input :\n                IN : $_\n          - \"_CMD#test\" :\n              input :\n                CMD : echo '${corenlp-server.OUT:basename}' > $_RUN_DIR/${corenlp-server.OUT:basename}.txt\n          - foo :\n              input :\n                IN : $_\n  - \"_CMD#merge\" :\n      input :\n        CMD : cat ${_MAP.corenlp-server.OUT} > $_RUN_DIR/merged.xml","sourcepath":"/vagrant/modules/examples/pipeline-test2.module"},{"module":{"output":{"VOID":{"type":"VAL","value":"ok"}},"input":{"IN":{"type":"FILE"}},"name":"pipeline-test0","exec":[{"stanford-parser":{"input":{"IN":"$IN"}}},{"_CMD#test":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt"}}}],"desc":"test de pipeline"},"modulename":"pipeline-test0","source":"\nname : pipeline-test0\n\ndesc : >\n  test de pipeline\n\ninput :\n  IN : \n    type : FILE\n\noutput :\n  VOID : \n    type : VAL\n    value : ok\n\n\nexec :\n  - stanford-parser :\n      input :\n        IN : $IN\n  - \"_CMD#test\" :\n      input :\n        CMD : dd echo '${stanford-parser.OUT:basename}' > $_RUN_DIR/test.txt\n    ","sourcepath":"/vagrant/modules/examples/pipeline-test0.module"},{"module":{"output":{"OUT":{"type":"FILE*","value":["$_RUN_DIR/foo1","$_RUN_DIR/foo2","$_RUN_DIR/foo3"]}},"input":{"IN":{"type":"FILE"}},"name":"foo","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;"}}}],"desc":"foo module for testing purposes"},"modulename":"foo","source":"\nname : foo\n\ndesc : foo module for testing purposes\n\ninput : \n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE*\n    value : $_RUN_DIR/foo1 $_RUN_DIR/foo2 $_RUN_DIR/foo3\n\nexec :\n  - _CMD :\n      input : \n        CMD : echo \"foo1\" > $_RUN_DIR/foo1; echo \"foo2\" > $_RUN_DIR/foo2; echo \"foo3\" > $_RUN_DIR/foo3;","sourcepath":"/vagrant/modules/examples/foo.module"},{"folder":true,"foldername":"parsing","items":[{"module":{"output":{"CONLL":{"schema":"conll","format":"text","type":"FILE","value":"$_RUN_DIR/${IN:basename}.conll"},"OUT":{"format":"unknown","type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-parser","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml"}}},{"_CMD#2conll":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll"}}}],"desc":"The stanford parser"},"modulename":"stanford-parser","source":"\n# The name of the module\n# Mandatory and must be unique\nname : stanford-parser\n\n# Brief description of the module\n# Optional\ndesc : \"The stanford parser\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  OUT :\n    type : FILE\n    format : \"unknown\"\n    value : $_RUN_DIR/${IN:basename}.xml\n  CONLL :\n    type : FILE\n    format : \"text\"\n    schema : \"conll\"\n    value : $_RUN_DIR/${IN:basename}.conll\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        CMD : > \n          $_DEF_DIR/stanford-parser-full-2015-04-20/lexparser.sh $IN > $_RUN_DIR/${IN:basename}.xml\n  - \"_CMD#2conll\" :\n      input : \n        CMD : > \n          $_DEF_DIR/StfdParse2Conll.sh $_RUN_DIR/${IN:basename}.xml > $_RUN_DIR/${IN:basename}.conll\n","sourcepath":"/vagrant/modules/examples/parsing/stanford-parser.module"}]},{"folder":true,"foldername":"corenlp-server","items":[{"module":{"output":{"OUT":{"type":"FILE","value":"$_RUN_DIR/${IN:basename}.xml"}},"input":{"IN":{"type":"FILE"}},"name":"corenlp-server","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml"}}}],"desc":"stanford core nlp server mode test"},"modulename":"corenlp-server","source":"\nname : corenlp-server\n\ndesc : stanford core nlp server mode test\n\n\ninput :\n  IN :\n    type : FILE\n\noutput :\n  OUT :\n    type : FILE\n    value : $_RUN_DIR/${IN:basename}.xml\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : >\n          python $_DEF_DIR/src/main/python/client.py $IN > $_RUN_DIR/${IN:basename}.xml\n\n","sourcepath":"/vagrant/modules/examples/corenlp-server/corenlp-server.module"}]},{"folder":true,"foldername":"brat_propagate","items":[{"module":{"output":{"CORPUS_MODIFIED":{"schema":"text","type":"DIR","value":"$CORPUS"}},"input":{"SEED":{"schema":"brat_annotation","type":"FILE"},"CORPUS":{"schema":"text","type":"DIR"}},"name":"brat_propagate","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"perl propagation.pl -r $CORPUS -s $SEED"}}}]},"modulename":"brat_propagate","source":"\nname : brat_propagate\n\ndesc : >\n  # CONCEPT ANNOTATION PROPAGATION for BRAT RAPID ANNOTATION TOOL\n  #\n  # From existing annotations of concepts saved in BRAT stand-off\n  # annotation files (*.ann), this script searches for similar concepts\n  # to be annotated in the remaining part of the corpus to process and\n  # produces annotation files combining existing annotations (e.g., in\n  # case of automatic pre-annotation) with annotations found during the\n  # propagation process. Using this script supposes to process corpus\n  # files in the logic order of the files within a directory...\n  #\n  # Warning! Files from BRAT (*.txt and *.ann) must be encoded in UTF-8\n  #\n  # perl propagation.pl -r <directory containing files> -s <starting file name>\n\ninput :\n  SEED :\n    type : FILE\n    schema : brat_annotation\n  CORPUS :\n    type : DIR\n    schema : text\n\noutput :\n  CORPUS_MODIFIED :\n    type : DIR\n    schema : text\n    value : $CORPUS\n\n# here this module modify its input so we should make a copy before\n\nexec : \n  - _CMD :\n      input :\n        CMD : perl propagation.pl -r $CORPUS -s $SEED","sourcepath":"/vagrant/modules/examples/brat_propagate/brat_propagate.module"}]}]},{"folder":true,"foldername":"addons","items":[{"folder":true,"foldername":"views","items":[{"folder":true,"foldername":"depgraph","items":[{"module":{"output":{"CSS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css","$_DEF_DIR/build/style/depgraph.css"]},"JS":{"type":"FILE*","value":["$_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js","$_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js","$_DEF_DIR/src/js/vendor/d3.v2.js","$_DEF_DIR/build/depgraph.js"]},"HTML":{"format":"html","type":"VAL","value":"${_CMD.STDOUT}"}},"input":{"FORMAT":{"type":"VAL"},"SOURCE":{"type":"FILE"}},"name":"depgraph-viewer@buiquang","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT"}}}],"desc":"Dependency Graph Visualisation Library"},"modulename":"depgraph-viewer@buiquang","source":"\nname : depgraph-viewer@buiquang\n\ndesc : >\n  Dependency Graph Visualisation Library\n\ninput :\n  SOURCE : \n    type : FILE\n  FORMAT :\n    type : VAL\n\noutput :\n  HTML :\n    type : VAL\n    format : html\n    value : ${_CMD.STDOUT}\n  JS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/colorbox/jquery.colorbox-min.js\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.js\n      - $_DEF_DIR/src/js/vendor/d3.v2.js\n      - $_DEF_DIR/build/depgraph.js\n  CSS :\n    type : FILE*\n    value :\n      - $_DEF_DIR/src/js/vendor/jquery-contextMenu-master/jquery.contextMenu.css\n      - $_DEF_DIR/build/style/depgraph.css\n\nexec :\n  - _CMD :\n      input :\n        DOCKERFILE : true\n        CMD : >\n          php $_DEF_DIR/produceGraph.php $SOURCE $FORMAT","sourcepath":"/vagrant/modules/addons/views/depgraph/depgraph-viewer@buiquang.module"}]}]},{"folder":true,"foldername":"bonsai_parser","items":[{"module":{"output":{"OUT_DIR":{"schema":"passage","format":"xml","type":"DIR","value":"$_RUN_DIR","desc":"directory containing the output of the parsed file files keep the same name as the original file"}},"input":{"IN_DIR":{"schema":"html","format":"xml","type":"DIR","desc":"directory containing html files to be parsed"}},"name":"bonsai-parser@munshi","exec":[{"_CMD":{"input":{"DOCKERFILE":"true","CONTAINED":"false","CMD":"/home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR"}}}],"desc":"bonsai parse of xml files into passage format made by Munshi Asadullah"},"modulename":"bonsai-parser@munshi","source":"\nname : bonsai-parser@munshi\n\ndesc : >\n  bonsai parse of xml files into passage format made by Munshi Asadullah \n\ninput :\n  IN_DIR :\n    type : DIR\n    format : xml\n    schema : html\n    desc : directory containing html files to be parsed\n\noutput :\n  OUT_DIR :\n    type : DIR\n    format : xml\n    schema : passage\n    desc : >\n      directory containing the output of the parsed file\n      files keep the same name as the original file\n    value : $_RUN_DIR\n\nexec :\n  - _CMD :\n      input : \n        DOCKERFILE : true\n        CMD : /home/app/bin/parse_all.sh $IN_DIR $_RUN_DIR","sourcepath":"/vagrant/modules/addons/bonsai_parser/bonsai-parser@munshi.module"}]}]},{"folder":true,"foldername":"custom","items":[{"folder":true,"foldername":"jose_moreno","items":[{"module":{"output":{"BRAT_ANN":{"schema":"brat_ann","format":"txt","type":"FILE","value":"$_RUN_DIR/${IN:filename}.ann"},"RAW_OUT":{"format":"xml","type":"FILE","value":"$_RUN_DIR/${IN:filename}.xml"}},"input":{"IN":{"type":"FILE","desc":"File to be annotated"}},"name":"stanford-core-nlp","exec":[{"_CMD":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"$_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN"}}},{"_CMD#toBrat":{"input":{"DOCKERFILE":"false","CONTAINED":"false","CMD":"python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml"}}}],"desc":"The default stanford core nlp pipeline"},"modulename":"stanford-core-nlp","source":"\nname : stanford-core-nlp\n\ndesc : \"The default stanford core nlp pipeline\"\n\n# Inputs\ninput :\n  IN :\n    type : FILE\n    desc : \"File to be annotated\"\n  #OUT_DIR :\n    #type : DIR\n    #value : $_RUN_DIR\n# Outputs\noutput :\n  RAW_OUT :\n    type : FILE\n    format : \"xml\"\n    value : $_RUN_DIR/${IN:filename}.xml\n  BRAT_ANN :\n    type : FILE\n    format : \"txt\"\n    schema : \"brat_ann\"\n    value : $_RUN_DIR/${IN:filename}.ann\n\n\n# Logging\nlog : \n  default : \"/tmp/parserlog\"\n\n# The command to run the module/pipeline\n# Required\nexec : \n  - _CMD :\n      input : \n        #DOCKERFILE : $_DEF_DIR/Dockerfile\n        CMD : > \n          $_DEF_DIR/jdk1.8.0_51/bin/java -cp '$_DEF_DIR/stanford-corenlp-full-2015-12-09/*' -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse,dcoref -outputExtension .xml -outputDirectory $_RUN_DIR -file $IN\n  - \"_CMD#toBrat\" :\n      input :\n        CMD : >\n          python $_DEF_DIR/xmlCoreNLP_to_brat.py $_RUN_DIR/${IN:filename}.xml","sourcepath":"/vagrant/modules/custom/jose_moreno/stanford-core-nlp.module"}]}]}]}]}]}
[18/12/2015 - 16:44:56] (10.0.2.2|)  => hello
[18/12/2015 - 16:45:5] (10.0.2.2|)  => {"corpus":[{"origtweets":["490066480680013824.txt","489076308476186624.txt","487640289213833216.txt","489780871617323008.txt","489510294855905280.json","489751324381032448.txt","489425966402260994.json","489895804958941184.json","488590058103275520.txt","489168726785523712.json","487632740146503680.txt","489467949191667713.json","489659585922613248.json","489503614202032128.txt","507044785568620544.txt","506840576914759681.txt","488229991340343296.txt",".stats_cache","489111492441432064.json","489778416359866368.json",{"...":"file"}]},{"tmp":["507411251035521024.txt","507420679118278656.txt","507421306565169152.txt","507421595946586112.txt","507421843792617472.txt","507423578833555456.txt","507423642545045505.txt","507426881885708288.txt","506791604049293312.txt","506799356025249792.txt","506801308775362561.txt","506801900147466241.txt","506807631747751937.txt","506810294640054272.txt","506819395063410688.txt","506820161471381504.txt","506829902746636288.txt","506840576914759681.txt","506842574259486720.txt","506856916455526400.txt",{"...":"file"}]},{"origtweets_light":["487838782453219328.txt","488778133295075328.txt","488963679669731328.txt","488984223458787328.txt","489056320092643328.txt","489101415894499328.txt","489316372002787328.txt","489335673758179328.txt","489363645026275328.txt","489377154770403328.txt","489416444191715328.txt","489447870429667328.txt","489681750281699328.txt","489706911927779328.txt","489738611739619328.txt","489869581918691328.txt","490012805358051328.txt","490051479555043328.txt",".stats_cache","487838782453219328.ann",{"...":"file"}]},{"munshitest":[{"munshidatatest":[{"corpus":["cinq_semaines_en_ballon.xml","comte_chanteleine.xml"]},{"pdf":["comte_chanteleine.pdf","cinq_semaines_en_ballon.pdf"]},{"pdfbox":["comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]}]},"comte_chanteleine.xml","cinq_semaines_en_ballon.xml"]},{"testcorpus":["meaning_of_life.txt","humanism.txt","meaning_of_life_full.txt"]},{"run-7ab7d919-48c0-42f9-9f12-74c70d58a4a6":["490051479555043328.xml","490051479555043328.conll"]},"hello",".stats_cache","me.tweetaccount"]}
[18/12/2015 - 16:45:5] (10.0.2.2|)  => hello
[18/12/2015 - 16:45:6] (10.0.2.2|)  => 
[18/12/2015 - 16:45:48] (10.0.2.2|)  => hello
[18/12/2015 - 16:45:48] (10.0.2.2|)  => fc467e3a-3b29-47bc-ab97-86d558b3a7c3
[18/12/2015 - 16:45:48] (10.0.2.2|)  => hello
[18/12/2015 - 16:45:48] (10.0.2.2|)  => {"creationdate":"2015-12-18T16:45:48.757","def":"/vagrant/modules/examples/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"ruid":"fc467e3a-3b29-47bc-ab97-86d558b3a7c3","parentProcess":"None","env":"","processport":"27977","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"57502","completeddate":"","status":"Running"}
[18/12/2015 - 16:49:5] (10.0.2.2|)  => hello
[18/12/2015 - 16:49:5] (10.0.2.2|)  => {"creationdate":"2015-12-18T16:45:48.757","def":"/vagrant/modules/examples/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"ruid":"fc467e3a-3b29-47bc-ab97-86d558b3a7c3","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3/\""},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//testcorpus"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"27977","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"57502","completeddate":"","status":"Running"}
[18/12/2015 - 16:49:7] (10.0.2.2|)  => hello
[18/12/2015 - 16:49:7] (10.0.2.2|)  => {"creationdate":"2015-12-18T16:45:48.757","def":"/vagrant/modules/examples/pipeline-test.module","runconf":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"parentEnv":{"_DEF_DIR":{"type":"DIR","value":"\"/vagrant/modules/examples\""},"_RUN_DIR":{"type":"DIR","value":"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3"},"CORPUS":{"type":"VAL","value":"/vagrant/data/corpus//testcorpus"}},"ruid":"fc467e3a-3b29-47bc-ab97-86d558b3a7c3","parentProcess":"None","env":{"_CUR_MOD":{"type":"VAL","value":"pipeline-test"},"_DEF_DIR":{"type":"DIR","value":"/vagrant/modules/examples"},"_RUN_DIR":{"type":"DIR","value":"\"/vagrant/data/results/pipeline-test/run-fc467e3a-3b29-47bc-ab97-86d558b3a7c3/\""},"CORPUS":{"type":"DIR","value":"/vagrant/data/corpus//testcorpus"},"_MOD_CONTEXT":{"type":"VAL","value":"pipeline-test"}},"processport":"27977","master":true,"modvalconf":"''\n","modvalnamespace":"","children":"","resultnamespace":"","name":"pipeline-test","parentport":"57502","completeddate":"","status":"Running"}
[18/12/2015 - 16:49:14] (10.0.2.2|)  => hello
[18/12/2015 - 16:49:14] (10.0.2.2|)  => pipeline-test : fc467e3a-3b29-47bc-ab97-86d558b3a7c3

