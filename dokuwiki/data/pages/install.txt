====== Installation ======

===== Installation =====

==== 1. Récupérer le code source ====

Pour cela, il faut pouvoir accéder au serveur git du LIMSI (voir avec amic) et demander les droits d'accès au projet **appfm.**

Installer "git" si ce n'est deja fait sur votre machine.

<code>
git clone git@github.limsi.fr:/appfm/base appfm
cd appfm
</code>

Ce dépot contient les librairies et la structure globale contenant les différents sous [[:arch|projets qui compose AppFM]]

==== 2. Récupérer les sous projets : ====

<code>
git submodule update --init –-recursive
</code>

==== 3. Installation ====

Si vous voulez isoler l'installation du reste de votre machine afin de simplement tester AppFM ou pour d'autres raison, suivez les étapes indiquées dans la partie **Installation avec Vagrant**. Cette installation installe aussi le client web.

Lancer : ''sudo ./install.sh'' ou ''./install.sh'' (si des librairies manquent il vous sera demandé de les installer manuellement)

A noter que si vous utiliser "sudo", les futures installations / upgrades devront aussi l'utiliser ou il faudra supprimer les fichiers créés par l'installation (core/target/**)

L'installation peut prendre un peu plus d'une dizaine de minute.

Cette installation ne concerne que le serveur AppFM, pour l'installation des clients (client-server web et ligne de commande) et leur utilisation aller dans la [[:clients|section clients]].

==== 4. Configuration et premier lancement ====

Il faut ensuite configurer le fichier [[:configuration#config.yml|config.yml]]

Au premier lancement : ./appfm start

Le serveur construit (si docker est installé) un conteuneur de base.

===== Installation avec Vagrant =====

Suivez les étapes d'installation précédentes jusqu'à l'étape 2

==== 1. Installer le gestionnaire de machine virtuelles Vagrant ====

<code>
sudo apt-get install vagrant virtualbox virtualbox-dkms
</code>

==== 2. Configurer la machine virtuelle : ====

Editer le fichier "Vagrantfile" :

- le chemin vers un disque virtuel : (variable "file_to_disk") un fichier sera créé à ce chemin et servira de disque additionnel pour la machine virtuelle\\
ex. : file_to_disk = "$HOME/appfm_vagrant_additional_disk.vdi"\\
ce disque virtuel permet de stocker les conteneurs Docker et les données (mongodb) de l'application. La taille par défaut de ce disque est 100G (peut etre modifier dans le fichier de configuration "Vagrantfile".

- ressources allouées à la machine virtuelle (les valeurs par défaut sont 2 cpus et 4G de ram :

ex. v.customize ["modifyvm", :id, "–memory","4096"])

- ports

Lors du lancement de la commande qui suit, il se peut que des problèmes arrivent, notamment :

- box inexistante : pour cela installer la box debian/jessie à partir de vagrantbox.es : ''vagrant box add [[https://atlas.hashicorp.com/ARTACK/boxes/debian-jessie|https://atlas.hashicorp.com/ARTACK/boxes/debian-jessie]]''

- conflits de ports déja utilisés

- problème de création du disque virtuel : "VBoxManage: error: Could not find a controller named 'SATA Controller'" , pour cela décommenter la ligne " v.customize ["storagectl", :id, "–name", "SATA Controller", "–add", "sata"]" du fichier Vagrantfile, relancer la commande, puis recommenter la ligne.

==== 3. Installation (peut prendre 10~30 minutes) : ====

vagrant up\\
vagrant ssh\\
sudo /vagrant/install.sh

==== 4. First run (takes a long the first time since it builds base containers): ====

cd /vagrant\\
./appfm start

When finished you can go to [[http://localhost:8080|http://localhost:8080]]

To disconnect session from the virtual machine:\\
exit

To stop the server (and the virtual machine) :\\
./appfm stop

vagrant halt (from outside the virtual machine session and anywhere within the cpm directory)

To restart :\\
vagrant ssh (from anywhere within the cpm directory)\\
cd /vagrant\\
./appfm restart

To completly destroy the virtual machine (needs re installation (step 4)) :\\
vagrant destroy (from anywhere within the cpm directory)

===== First steps (using CLI) =====

If installed within a virtual machine (quick start instructions), you may also want to install the cli within your host to be able to use appfm from outside the vm.\\
To do so, go the cli subproject directory and follow the quick install guide in the README

With default installation, there is some modules already availables.\\
Following instructions assume that you didn't change the default paths configuration.

Listing availables modules :\\
cpm module ls

Running module synchronously :\\
- extract pdf content into html :\\
cpm module run pdfbox@munshi –arg IN_DIR:/vagrant/data/corpus/some-pdfs –sync

Running module asynchronously :\\
- apply bonsai parser onto extracted content (may take several minutes)\\
cpm module run bonsai-parser@munshi –arg IN_DIR:[insert_result_dir_of_previous_run]

Get process information :\\
cpm process get [insert_process_id_of_previous_command]

===== Running as a service =====

TODO :

create init.d script

===== Configuration =====

TODO / A Venir :

conf.yaml detail ( modules dir, corpus dir, result dir)

Configuration doc (+ défauts)
