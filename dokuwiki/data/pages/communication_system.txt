====== Protocole de communication ======

Le protocole de communication avec le kernel repose sur les sockets zmq. Sa spécification est simpliste mais pourrait aisément être optimisée en termes de performance et robustesse.

===== Structure des messages =====

Tous les messages envoyés au kernel sont composés de 4 parties dont une seule est obligatoire, la commande.

Un message est une chaine de caractère en utf-8 dont les champs sont séparés par des balises du type ''==//nomduchamp// =='' et ''==END_//nomduchamp// ==''
==== Commande ====

Le nom de ce champ est ''CMD''.

Il contient une commande valide.

Le fichier source contenant les points d'entrées de ces commandes se trouve dans le projet **core** et se nomme //src/main/scala/fr/limsi/iles/server/CLIInterpreter.scala//

todo : liste des commandes sous forme de tableau// //

==== Données ====

Le nom de ce champ est ''DATA''. Il contient des données complémentaire à la commande.

Ce champ est donc optionnel et dépend de la commande envoyée.

==== Utilisateur ====

Deux champs définissant les utilisateurs ''USER'' et ''PSWD''.

Ces champs ne sont pour l'instant pas utilisé (pas de gestion d'utilisateur encore opérationnel).

==== Exemples ====

Lister les modules

<code>
'' ==USER==default==END_USER====PSWD==password==END_PSWD====CMD==module ls==END_CMD====DATA====END_DATA== ''
</code>
