====== Services ======

Afin d'exploiter plus loin les possibilités offerte par la technologie [[https://www.docker.com/|Docker]]. **AppFM** permet de gérer (en partie) le déploiement de services déployés via des conteneurs Docker ou empaqueté de manière portable.
===== Description =====

Tout comme les modules, les services sont décrit sous forme d'un fichier de configuration yaml dont l'extension se termine par ''.service''

Les règle de nommage du service sont les mêmes, ainsi que le format de définition des sorties. Les variables de sorties sont exportées dans les modules utilisant le service et sont accessibles sous la forme : ''${NON_DU_SERVICE.NOM_DE_LA_VARIABLE}''

Pour utiliser un service, il suffit d'ajouter le nom du service dans la liste définie par le champ **require** de la [[:spec_draft|définition d'un module]].

Les différences sont :

- le champ **exec** est remplacé par les champs **start** et **stop**

- il n'y a pas de champ **input** (un service étant considéré comme quelque chose de statique qui n'admet qu'une seule instanciation possible)

- l'introduction des champs **log** et **test**
===== Recommandations =====

Il est recommandé de construire des services avec la librairie ZeroMQ qui permet via des buffers de fonctionner plus souplement lorsque le serveur n'est pas encore initialisé.

Des exemples simples de construction de services (et de modules en architecture client-serveur) sont implémentés.

==== Exemples ====

Stanford NER (avec zmq)

Wapiti-simple-server (avec zmq)

Spotlight (sans zmq)

Brat (web application as a service)

=====   =====
