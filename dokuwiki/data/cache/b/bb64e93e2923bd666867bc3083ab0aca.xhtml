
<h1 class="sectionedit1" id="project_management">Project Management</h1>
<div class="level1">
<div class="table sectionedit2"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0">TUTORIAL/DOC/SPEC/DEPLOYEMENT </th><th class="col1">CLI </th><th class="col2">CORE </th><th class="col3">PROCESS SHELL </th><th class="col4">BUILT-IN MODULES </th><th class="col5">ADDONS </th><th class="col6">WEB </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0">wiki </td><td class="col1">python module </td><td class="col2 rightalign">   <br/>
module manager </td><td class="col3 rightalign">  process manager </td><td class="col4 rightalign">  _CMD </td><td class="col5 rightalign">  xml_merger </td><td class="col6 rightalign">  rest endpoint </td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2">run manager </td><td class="col3 leftalign">  </td><td class="col4">_MAP </td><td class="col5">stanford parser </td><td class="col6">ui </td>
	</tr>
	<tr class="row3">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2">process manager </td><td class="col3 leftalign">  </td><td class="col4">_FILTER </td><td class="col5">wolf </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row4">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2">corpus manager </td><td class="col3 leftalign">  </td><td class="col4">_SPLITTER </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row5">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2">logic </td><td class="col3 leftalign">  </td><td class="col4">_LOOP </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row6">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row7">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row8">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row9">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
</table></div>
<!-- EDIT2 TABLE [35-491] -->
</div>
<!-- EDIT1 SECTION "Project Management" [1-492] -->
<h2 class="sectionedit3" id="todo">Todo</h2>
<div class="level2">

<p>
Set up Gitlab/Redmine/…?
</p>

<p>
- solve client/server issues (conf, corpus data, etc.) ⇒ (cli can send local conf file to server)
</p>
<blockquote><div class="no">
 TODO : create CPM Command serialized object (allowing like http to send data (for env ~= function args))</div></blockquote>

<p>
- fix _CMD/results path consistance/cohérence ⇒ (every file/folder output should have its parentFolder created if needed in server space, every missing input path file missing reference should trigger and error. ⇒ every module MUST have static linked/packaged
</p>

<p>
libraries (in docker, or specified shared environnement ⇒ docker also (specification system))<br/>

every docker files modifications (outputs) MUST be registered/reference on server space, every module input MUST be available to docker environment
</p>
<blockquote><div class="no">
 FILE/DIR correct path checking, throw error on missing reference<br/>
</div></blockquote>

<p>
custom dockerfile can be created but they must have their entrypoint be set to the properly installed script cpm-process-shell.py
</p>
<blockquote><div class="no">
 TODO</div></blockquote>

<p>
creation custom type CORPUS,DB<br/>

base types BOOLEAN, VAL(string/yaml)<br/>

base default types FILE, DIR
</p>
<blockquote><div class="no">
 Implements every interfaces (toString/toYaml/fromYaml)</div></blockquote>

<p>
implement _FILTER, _SPLITTER(filter on file content), _MATCH(sorte de if)(Boolean system ⇒ Boolean type, Boolean arithmétic (=, &gt;=, ⇐, !=,&amp;&amp;,||), Boolean result between types(VAl,FILE,…) AbstractModuleVal ⇒ Boolean, (AbstractModuleVal, AbstractModuleVal,op) ⇒ Boolean (op appartient aux functions de l&#039;arithmétique boolean)
</p>
<blockquote><div class="no">
 TODO</div></blockquote>

<p>
stanford parser → xml<br/>

xml_merger → module
</p>
<blockquote><div class="no">
 TODO</div></blockquote>

<p>
run result save, run module process db save,<br/>

run result = module process + env = moduleval = function + argument (argument and env can be void)<br/>

system to run some part of a module choosing and by default run result use as a moduleval with or without newenv input available<br/>

run types :<br/>

- (scratch/default) next same invocation + param : erase previous (can use previous output still during runing), different invocation or parameter create new run dir<br/>

- (saved) next same invocation + param : create a new run dir
</p>

<p>
can :<br/>

- can add a tag to any type<br/>

- save result for any type with added a tag (new if new, replace if not new)<br/>

- delete saved/unsaved results
</p>
<pre class="code">\\
pid = cpm run &quot;module-name&quot; conf(yaml) (= env yaml values)  \\
pid = cpm new run &quot;module-name&quot; conf(yaml)  \\
pid = cpm run &quot;module-name&quot; conf(yaml) --tag &quot;tagname&quot;  \\
pid = cpm new run &quot;module-name&quot; conf(yaml) --tag &quot;tagname&quot;  \\
cpm view PID OUTPUT  \\
cpm view MODULE_NAME CONF OUTPUT --version &quot;tagname(:pid)&quot;  \\
cpm view PID OUTPUT --gui // url to server rendering html default conversion (add format html for target implicit &quot;view module&quot; definitions) echoing file content/dir ls/..  \\
cpm view PID OUTPUT --gui-debug // get the raw html produced by the server  \\
cpm view PID OUTPUT --cpm-gui // get the raw html produced by the server with cpm-web-js use as library (for encapsulating views into cpm future neo4j style web ajax gui, use localstorage to store views command (pid/results) and be able to restore views after page refresh or views closed(does not destroy object))  \\
(Tree(pid,status),status) = cpm process PID status</pre>

<p>
cpm run “module-name” conf –except “moduleval namespace” (comma separated list par exemple) <em> default replace moduleval by latest result, warning if no moduleval with same env initiation, error if no moduleval results available at all<br/>

cpm run “module-name” conf –replace “moduleval namespace = (tag(:pid))” (comma separated list par exemple) </em> force specific replace of a previous result
</p>

</div>
<!-- EDIT3 SECTION "Todo" [493-4062] -->
<h2 class="sectionedit4" id="ticketlist">TicketList</h2>
<div class="level2">

<p>
En attendant un gitlab/redmine/forge/…
</p>
<div class="table sectionedit5"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0">TUTORIAL/DOC/SPEC/DEPLOYEMENT </th><th class="col1">CLI </th><th class="col2">CORE </th><th class="col3">PROCESS SHELL </th><th class="col4">BUILT-IN MODULES </th><th class="col5">ADDONS </th><th class="col6">WEB </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0">pb vagrant version install/available: (run provision option doesn&#039;t work on 1.4.3) </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row3">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row4">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row5">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row6">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row7">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row8">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
	<tr class="row9">
		<td class="col0 leftalign">  </td><td class="col1 leftalign">  </td><td class="col2 leftalign">  </td><td class="col3 leftalign">  </td><td class="col4 leftalign">  </td><td class="col5 leftalign">  </td><td class="col6 leftalign">  </td>
	</tr>
</table></div>
<!-- EDIT5 TABLE [4129-4506] -->
<p>
<br/>

</p>

</div>
<!-- EDIT4 SECTION "TicketList" [4063-] -->